{"version":3,"sources":["../src/ctrl.js"],"names":["RGX_CELL_PLACEHOLDER","RGX_OLD_VAR_WORKAROUND","PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","borderWidth","colorBy","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","numberFormat","numberFormatDecimals","tooltip","isCustom","titleFormat","labelFormat","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","BAR_OPTIONS","Object","keys","JS","flattenKeys","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","startWidthPct","FUNNEL_OPTIONS","OPTIONS_BY_TYPE","bar","funnel","ChartJsPanelCtrl","$scope","$injector","$rootScope","UNIT_FORMATS","GRID_LINE_OPACITIES","value","text","CHART_START_WIDTH_PERCENTAGES","CHART_BORDER_WIDTHS","CHART_GAP_SIZES","CHART_COLOR_BY","CHART_COLOR_SOURCES","CHART_TYPES","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","_","range","map","x","TICK_ROTATIONS","data","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","panel","defaultsDeep","forEach","key","has","strFormat","rowsByColName","series","category","measure","replace","match","isSeries","isCategory","isMeasure","colName","code","matchIndex","str","prevChar","charAt","row","isAt","isAmpersand","Function","extend","join","opt_index","colors","splice","length","renderNow","fromIndex","toIndex","getChartPanel","count","drilldownLink","url","openInBlank","isActiveOption","push","links","indexOf","path","addEditorTab","dataList","type","columns","rows","columnTexts","col","colIndexesByText","reduceRight","indexes","colText","index","assign","cells","rowIndex","reduce","carry","cellValue","cellIndex","obj","newValue","emit","paths","every","includes","set","name","opt_isOptional","isRequired","undefined","Error","e","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","canvas","prop","width","height","drawBarChart","drawFunnelChart","console","msg","message","elemMsg","dom","style","display","alignItems","textAlign","$","cls","margin","append","fullPanel","categoryColIndex","getColIndex","seriesColIndex","stackColIndex","measureColIndex","ignoreSeries","categories","uniq","seriesName","seriesStacks","color","colorColIndex","rowCount","colorCount","baseColors","seriesIndex","catName","catIndex","Color","hsl","testChartEvent","callback","target","getElementAtEvent","model","_model","isOpen","label","datasetLabel","some","drilldownLinkIndex","rgxCategory","rgxSeries","test","filter","isLightTheme","config","theme","measures","chartConfig","labels","datasets","seriesNameIndex","backgroundColor","a","rgba","borderColor","stack","filteredRows","sum","isMatch","options","responsive","tooltips","mode","callbacks","title","tooltipItem","dataset","datasetIndex","formatTooltipText","strValue","fullWidth","reverse","fontColor","userCallback","values","stacked","gridLines","onClick","call","matchingRows","openDrilldownLink","hover","onHover","cursor","myChart","Chart","getContext","measureIndex","altBaseColors","sort","b","newCategories","newMeasures","elem","_index","bgColors","borderColors","i","startWidthPercent","elements","keep","animation","animateScale","animateRotate","variables","templateSrv","timeVars","timeSrv","time","isTime","opt_timePart","isRaw","isParam","paramName","encodeURIComponent","from","to","result","variable","varValues","toArray","current","isAll","includeAll","concat","v","window","open","apply","arguments","scope","attrs","drawChart","debounce","MetricsPanelCtrl","plugins","unregister","ChartDataLabels","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormat, getValueFormats } from '@grafana/ui';\nimport config from 'app/core/config';\nimport _ from 'lodash';\n\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport { Color } from './external/CWest-Color.min';\n\nimport { parseRegExp } from './helper-functions';\n\nconst RGX_CELL_PLACEHOLDER = /\\$\\{(time)(?:-(to|from))?\\}|\\$\\{(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?\\}/g;\nconst RGX_OLD_VAR_WORKAROUND = /([\\?&])var-(\\$\\{var:(?:[^\\}:\\\\]*|\\\\.)+:param\\})/g;\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'series',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  tooltip: {\n    isCustom: false,\n    titleFormat:  null,\n    labelFormat: null\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\nconst BAR_OPTIONS = Object.keys(JS.flattenKeys(BAR_DEFAULTS, true));\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'asc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  gap: 1,\n  startWidthPct: 0,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\nconst FUNNEL_OPTIONS = Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true));\n\nconst OPTIONS_BY_TYPE = {\n  bar: BAR_OPTIONS,\n  funnel: FUNNEL_OPTIONS\n};\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    \n    this.UNIT_FORMATS = getValueFormats();\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_START_WIDTH_PERCENTAGES = [\n      { value: 0, text: '0% (Point)' },\n      { value: 0.25, text: '25%' },\n      { value: 0.5, text: '50% (Half)' },\n      { value: 0.75, text: '75%' },\n      { value: 1, text: '100% (Full)' }\n    ];\n    this.CHART_BORDER_WIDTHS = [\n      { value: 0, text: '0px (NO BORDER)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' }\n    ];\n    this.CHART_GAP_SIZES = [\n      { value: 0, text: '0px (NO GAP)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' },\n      { value: 4, text: '4px' },\n      { value: 5, text: '5px' }\n    ];\n    this.CHART_COLOR_BY = [\n      { value: 'series', text: 'Series' },\n      { value: 'category', text: 'Category' },\n      { value: 'both', text: 'Series & Category' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' }\n    ];\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n    }\n  }\n\n  // ${col:dact:join(\",\")}\n  formatTooltipText(strFormat, rowsByColName, series, category, measure) {\n    return strFormat.replace(\n      /\\$\\{(?:(series)|(category)|(measure)|col:((?:[^\\\\\\}:]+|\\\\.)+))(?::((?:[^\\\\\\}]+|\\\\.)+))?\\}/g,\n      function (match, isSeries, isCategory, isMeasure, colName, code, matchIndex, str) {\n        let prevChar = matchIndex ? str.charAt(matchIndex - 1) : '';\n        colName = colName && colName.replace(/\\\\(.)/g, '$1');\n        if (prevChar !== '\\\\' && (!colName || _.has(rowsByColName[0], colName))) {\n          match = isSeries\n            ? series\n            : isCategory\n              ? category\n              : isMeasure\n                ? measure\n                : rowsByColName.map(row => row[colName]);\n          if (code) {\n            code = code.replace(\n              /(@)|(&)|'(?:[^\\\\']+|\\\\.)*'|\"(?:[^\\\\\"]+|\\\\.)*\"/g,\n              function (match, isAt, isAmpersand) {\n                return isAt ? '__arg1' : isAmpersand ? '__arg2' : match;\n              }\n            );\n            match = Function('__arg0,__arg1,__arg2', `with(__arg0){return ${code}}`)(\n              _.extend({}, JS, _),\n              colName ? match[0] : match,\n              match\n            );\n          }\n          else {\n            match = match.join(',');\n          }\n        }\n        return match;\n      }\n    )\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  moveSeriesColor(fromIndex, toIndex) {\n    let colors = this.getChartPanel().seriesColors;\n    colors.splice(toIndex, 0, colors.splice(fromIndex, 1)[0]);\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    let count = colors.length;\n    if (count) {\n      colors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      let { type, columns, rows } = data;\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      let colIndexesByText = columnTexts.reduceRight(\n        (indexes, colText, index) =>\n          Object.assign(indexes, { [colText]: index }),\n        {}\n      );\n      let rowsByColName = rows.map(\n        (cells, rowIndex) =>\n          cells.reduce(\n            (carry, cellValue, cellIndex) => Object.assign(carry, { [columnTexts[cellIndex]]: cellValue }),\n            {}\n          )\n      );\n      this.data = { type, columns, rows, columnTexts, colIndexesByText, rowsByColName };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...paths) {\n    return paths.every(path => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(path));\n  }\n\n  setActiveOption(path, value) {\n    let panel = this.getChartPanel();\n    if (_.has(panel, path)) {\n      _.set(panel, path, value);\n      this.renderNow();\n    }\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  getColIndex(name, panel, opt_isOptional) {\n    let { colIndexesByText } = this.data;\n    let key = name + 'ColumnName';\n    let isRequired = !opt_isOptional || panel[key] != undefined;\n    if (isRequired && !_.has(colIndexesByText, panel[key])) {\n      throw new Error(`Invalid ${name} column.`);\n    }\n    return isRequired ? colIndexesByText[panel[key]] : -1;\n  }\n\n  drawChart(e, jElem) {\n    let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n\n    if (data && data.rows && data.rows.length) {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if (!data.columnTexts) {\n          throw new Error('No source data has been specified.');\n        }\n\n        if (data.type !== 'table') {\n          throw new Error('Data type must be \"table\".');\n        }\n\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        isValid = true;\n      }\n      catch (e) {\n        console.error('drawChart:', error = e);\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n    }\n  }\n\n  drawBarChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, rowsByColName, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.bar;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = ctrl.getColIndex('series', panel, true);\n    let stackColIndex = ctrl.getColIndex('stack', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let { series, seriesStacks } = rows.reduce(\n      (carry, row) => {\n        let seriesName = row[seriesColIndex];\n        if (!carry.series.includes(seriesName)) {\n          carry.series.push(seriesName);\n          carry.seriesStacks.push(row[stackColIndex]);\n        }\n        return carry;\n      },\n      { series: [], seriesStacks: [] }\n    );\n\n    series = series.map(name => name === undefined ? 'Series' : name);\n    seriesStacks = seriesStacks.map(name => name === undefined ? 'Stack' : name);\n\n    // If legacy bar chart colors exist convert them to new color setup\n    if (_.has(panel, ['seriesColors', 0, 'text'])) {\n      panel.seriesColors = panel.seriesColors.map(color => color.color);\n      panel.colorSource = 'custom';\n    }\n\n    let { colorSource, seriesColors, colorColumnName, colorBy } = panel;\n\n    let colorColIndex;\n    if (colorSource === 'column') {\n       colorColIndex = ctrl.getColIndex('color', panel);\n    }\n\n    let rowCount = rows.length;\n    \n    let colorCount = colorBy === 'category'\n      ? categories.length\n      : colorBy === 'both'\n        ? categories.length * series.length\n        : series.length;\n    let baseColors = series.map((seriesName, seriesIndex) => {\n      return categories.map((catName, catIndex) => {\n        if (colorSource === 'column' && colorColIndex >= 0) { // column\n          for (var row, rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n            row = rows[rowIndex];\n            if ((seriesColIndex < 0 || row[seriesColIndex] === seriesName) && row[categoryColIndex] === catName) {\n              return Color(row[colorColIndex]);\n            }\n          }\n        }\n        else {\n          let index = colorBy === 'category'\n            ? catIndex\n            : colorBy === 'both'\n              ? catIndex + categories.length * seriesIndex\n              : seriesIndex;\n          if (colorSource === 'custom') { // user-defined\n            return Color(seriesColors[index % seriesColors.length]);\n          }\n          else { // rainbow (default)\n            return Color.hsl(~~(360 * index / colorCount), 1, 0.5);\n          }\n        }\n      });\n    });\n\n    function testChartEvent(e, callback) {\n      let target = this.getElementAtEvent(e)[0];\n      let model = target && target._model;\n      let isOpen;\n      if (model) {\n        let category = model.label;\n        let seriesName = model.datasetLabel;\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory, series: rgxSeries } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            rgxSeries = !ignoreSeries && parseRegExp(rgxSeries);\n            if (rgxCategory.test(category) && (ignoreSeries || rgxSeries.test(seriesName))) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category && (ignoreSeries || row[seriesColIndex] === seriesName))\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n    \n    let isLightTheme = config.theme.type === 'light';\n    \n    let measures = {};\n    let chartConfig = {\n      type: panel.orientation === 'horizontal' ? 'horizontalBar' : 'bar',\n      data: {\n        labels: categories,\n        datasets: series.map((seriesName, seriesNameIndex) => ({\n          label: seriesName,\n          backgroundColor: baseColors[seriesNameIndex].map(color => color.a(panel.dataBgColorAlpha).rgba()),\n          borderColor: baseColors[seriesNameIndex].map(color => color.a(panel.dataBorderColorAlpha).rgba()),\n          borderWidth: panel.borderWidth,\n          stack: panel.isStacked ? seriesStacks[seriesNameIndex] : seriesNameIndex,\n          filteredRows: categories.map(category => {\n            return rows.reduce(\n              (carry, row, rowIndex) => {\n                if (row[categoryColIndex] === category && (seriesColIndex < 0 || row[seriesColIndex] === seriesName)) {\n                  carry.push(rowsByColName[rowIndex]);\n                }\n                return carry;\n              },\n              []\n            );\n          }),\n          data: categories.map(category => {\n            let sum = rows.reduce((sum, row) => {\n              let isMatch = row[categoryColIndex] === category\n                && (seriesColIndex < 0 || row[seriesColIndex] === seriesName);\n              return sum + (isMatch ? +row[measureColIndex] || 0 : 0);\n            }, 0);\n            return (measures[category] = measures[category] || {})[seriesName] = sum;\n          })\n        }))\n      },\n      //plugins: [ChartDataLabels],\n      options: {\n        responsive: true,\n        tooltips: {\n          mode: 'point',\n          callbacks: {\n            title: function ([tooltipItem], data) {\n              if (!ignoreSeries) {\n                let { datasets, labels } = data;\n                let dataset = datasets[tooltipItem.datasetIndex];\n                let catName = labels[tooltipItem.index];\n                let seriesName = dataset.label;\n                let value = tooltipItem[panel.orientation === 'horizontal' ? 'xLabel' : 'yLabel'];\n                let filteredRows = dataset.filteredRows[tooltipItem.index];\n                let { isCustom, titleFormat } = panel.tooltip;\n\n                return (isCustom)\n                  ? titleFormat\n                    ? ctrl.formatTooltipText(titleFormat, filteredRows, seriesName, catName, value)\n                    : null\n                  : tooltipItem[panel.orientation === 'horizontal' ? 'yLabel' : 'xLabel'];\n              }\n            },\n            label: function (tooltipItem, data) {\n              let { datasets, labels } = data;\n              let dataset = datasets[tooltipItem.datasetIndex];\n              let catName = labels[tooltipItem.index];\n              let seriesName = dataset.label;\n              let { numberFormat, numberFormatDecimals } = panel;\n              let { isCustom, labelFormat } = panel.tooltip;\n              let label = ignoreSeries\n                ? tooltipItem[panel.orientation === 'horizontal' ? 'yLabel' : 'xLabel']\n                : seriesName;\n              let value = tooltipItem[panel.orientation === 'horizontal' ? 'xLabel' : 'yLabel'];\n              let strValue = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                  ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                  : value;\n              let filteredRows = dataset.filteredRows[tooltipItem.index];\n              \n              return (isCustom && labelFormat)\n                ? ctrl.formatTooltipText(labelFormat, filteredRows, seriesName, catName, value)\n                : (label + ': ' + strValue);\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.xAxes.ticks.autoSkip,\n                minRotation: panel.scales.xAxes.ticks.minRotation,\n                maxRotation: panel.scales.xAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.xAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.yAxes.ticks.autoSkip,\n                minRotation: panel.scales.yAxes.ticks.minRotation,\n                maxRotation: panel.scales.yAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.yAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n              }\n            }\n          ]\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  drawFunnelChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.funnel;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let measures = rows.reduce((measures, row, rowIndex) => {\n      let measureIndex = categories.indexOf(row[categoryColIndex]);\n      measures[measureIndex] = (measures[measureIndex] || 0) + row[measureColIndex];\n      return measures;\n    }, []);\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, sortOrder } = panel;\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      let colorColIndex = colIndexesByText[colorColumnName];\n      baseColors = categories.map(category => Color(rows.find(row => row[categoryColIndex] === category)[colorColIndex]));\n    }\n    else if (colorSource === 'custom') {\n      baseColors = categories.map((category, index, categories) => {\n        return Color(seriesColors[index % seriesColors.length]);\n      });\n    }\n    else {\n      baseColors = categories.map((category, index, categories) => {\n        return Color.hsl(~~(360 * index / categories.length), 1, 0.5);\n      });\n    }\n\n    let isLightTheme = config.theme.type === 'light';\n\n    // Sort the measures and then the categories accordingly.\n    let altBaseColors;\n    measures = measures.map((value, index) => ({ index, value }));\n    measures.sort(sortOrder === 'desc' ? (a, b) => b.value - a.value : (a, b) => a.value - b.value);\n    [altBaseColors, categories, measures] = measures.reduce((carry, measure, index) => {\n      let [altBaseColors, newCategories, newMeasures] = carry;\n      altBaseColors.push(baseColors[measure.index]);\n      newCategories.push(categories[measure.index]);\n      newMeasures.push(measure.value);\n      return carry;\n    }, [[], [], []]);\n\n    // If using a column as the source of the colors make sure to order them according to the categories.\n    if (colorSource === 'column') {\n      baseColors = altBaseColors;\n    }\n\n    function testChartEvent(e, callback) {\n      let elem = this.getElementAtEvent(e)[0];\n      let isOpen;\n      if (elem) {\n        let category = categories[elem._index];\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            if (rgxCategory.test(category)) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category)\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.a(panel.dataBorderColorAlpha).rgba());\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      // plugins: [ChartDataLabels],\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        startWidthPercent: panel.startWidthPct,\n        sort: panel.sortOrder,\n        elements: { borderWidth: panel.borderWidth },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              let { numberFormat, numberFormatDecimals } = panel;\n              let label = data.datasets[tooltipItem.datasetIndex].label[tooltipItem.index];\n              let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n              value = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                : value;\n              return label + ': ' + value;\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables }, timeSrv: { time: timeVars } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(RGX_OLD_VAR_WORKAROUND, '$1$2').replace(\n      RGX_CELL_PLACEHOLDER,\n      function (match, isTime, opt_timePart, type, name, isRaw, isParam, paramName) {\n        if (isTime) {\n          return (opt_timePart != 'to' ? 'from=' + encodeURIComponent(timeVars.from) : '')\n            + (opt_timePart ? '' : '&')\n            + (opt_timePart != 'from' ? 'to=' + encodeURIComponent(timeVars.to) : '');\n        }\n\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? type === 'var' ? `var-${name}` : name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  getRange() {\n    return _.range.apply(this, arguments);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => this.drawChart.call(this, e, elem));\n    this.events.on('render', _.debounce(e => this.drawChart.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}