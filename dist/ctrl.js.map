{"version":3,"sources":["../src/ctrl.js"],"names":["PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","BAR_OPTIONS","Object","keys","JS","flattenKeys","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","FUNNEL_OPTIONS","OPTIONS_BY_TYPE","bar","funnel","renderChart","canvas","data","dataType","type","columns","rows","columnTexts","colIndexesByText","fullPanel","panel","variables","Error","_","has","categoryIndex","undefined","seriesIndex","stackIndex","measureIndex","colRows","map","row","reduceRight","colRow","value","index","assign","categories","Set","reduce","carry","seriesName","series","includes","push","seriesStacks","oldColors","slice","newColors","oldIndex","findIndex","c","text","color","Color","hsl","length","measures","barChartData","labels","datasets","seriesNameIndex","label","backgroundColor","a","rgba","borderColor","borderWidth","stack","category","sum","isMatch","isLightTheme","config","theme","myChart","Chart","options","responsive","display","fullWidth","reverse","fontColor","stacked","gridLines","onClick","e","target","getElementAtEvent","model","_model","datasetLabel","isDone","drilldownLink","url","rgxCategory","parseRegExp","rgxSeries","test","replace","match","name","isRaw","isParam","paramName","result","getColValuesFor","getVarValuesFor","join","v","encodeURIComponent","window","open","openInBlank","colIndex","catColIndex","seriesColIndex","values","varName","variable","varValues","toArray","current","isAll","includeAll","concat","strPattern","parts","exec","RegExp","escapeRegExp","renderNow","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","prop","width","height","drawBarChart","drawFunnelChart","console","msg","message","elemMsg","dom","style","alignItems","textAlign","$","cls","margin","append","ChartJsPanelCtrl","$scope","$injector","$rootScope","GRID_LINE_OPACITIES","CHART_COLOR_SOURCES","CHART_TYPES","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","range","x","TICK_ROTATIONS","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","defaultsDeep","forEach","key","opt_index","colors","splice","count","isActiveOption","getChartPanel","links","indexOf","path","addEditorTab","dataList","col","indexes","colText","obj","newValue","emit","every","templateSrv","categoryColIndex","measureColIndex","uniq","rowIndex","baseColors","log","colorColIndex","altBaseColors","sort","b","measure","newCategories","newMeasures","bgColors","borderColors","dataset","chartConfig","i","elements","keep","animation","animateScale","animateRotate","elem","_index","isOpen","some","matchingRows","filter","openDrilldownLink","getContext","scope","attrs","call","debounce","MetricsPanelCtrl","plugins","unregister","ChartDataLabels","templateUrl"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,SAAS,EAAE;AADU,CAAvB;AAIA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,UADM;AAEnBC,EAAAA,kBAAkB,EAAE,IAFD;AAGnBC,EAAAA,gBAAgB,EAAE,IAHC;AAInBC,EAAAA,eAAe,EAAE,IAJE;AAKnBC,EAAAA,iBAAiB,EAAE,IALA;AAMnBC,EAAAA,cAAc,EAAE,EANG;AAOnBC,EAAAA,WAAW,EAAE,MAPM;AAQnBC,EAAAA,eAAe,EAAE,IARE;AASnBC,EAAAA,YAAY,EAAE,EATK;AAUnBC,EAAAA,SAAS,EAAE,KAVQ;AAWnBC,EAAAA,gBAAgB,EAAE,IAXC;AAYnBC,EAAAA,oBAAoB,EAAE,CAZH;AAanBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,IADL;AAENC,IAAAA,QAAQ,EAAE,KAFJ;AAGNC,IAAAA,WAAW,EAAE,KAHP;AAINC,IAAAA,SAAS,EAAE;AAJL,GAbW;AAmBnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,WAAW,EAAE,CAFR;AAGLC,QAAAA,WAAW,EAAE;AAHR,OADF;AAMLC,MAAAA,eAAe,EAAE;AANZ,KADD;AASNC,IAAAA,KAAK,EAAE;AACLL,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,WAAW,EAAE,CAFR;AAGLC,QAAAA,WAAW,EAAE;AAHR,OADF;AAMLC,MAAAA,eAAe,EAAE;AANZ;AATD;AAnBW,CAArB;AAsCA,IAAME,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYC,gBAAGC,WAAH,CAAe9B,YAAf,EAA6B,IAA7B,CAAZ,CAApB;AAEA,IAAM+B,eAAe,GAAG;AACtBC,EAAAA,MAAM,EAAE,QADc;AAEtBC,EAAAA,SAAS,EAAE,KAFW;AAGtB/B,EAAAA,kBAAkB,EAAE,IAHE;AAItBG,EAAAA,iBAAiB,EAAE,IAJG;AAKtBC,EAAAA,cAAc,EAAE,EALM;AAMtBC,EAAAA,WAAW,EAAE,MANS;AAOtBC,EAAAA,eAAe,EAAE,IAPK;AAQtBC,EAAAA,YAAY,EAAE,EARQ;AAStBE,EAAAA,gBAAgB,EAAE,IATI;AAUtBC,EAAAA,oBAAoB,EAAE,CAVA;AAWtBsB,EAAAA,GAAG,EAAE,CAXiB;AAYtBrB,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,IADL;AAENC,IAAAA,QAAQ,EAAE,KAFJ;AAGNC,IAAAA,WAAW,EAAE,KAHP;AAINC,IAAAA,SAAS,EAAE;AAJL;AAZc,CAAxB;AAmBA,IAAMkB,cAAc,GAAGR,MAAM,CAACC,IAAP,CAAYC,gBAAGC,WAAH,CAAeC,eAAf,EAAgC,IAAhC,CAAZ,CAAvB;AAEA,IAAMK,eAAe,GAAG;AACtBC,EAAAA,GAAG,EAAEX,WADiB;AAEtBY,EAAAA,MAAM,EAAEH;AAFc,CAAxB;;AAKA,SAASI,WAAT,OAAoI;AAAA,MAA9GC,MAA8G,QAA9GA,MAA8G;AAAA,uBAAtGC,IAAsG;AAAA,MAAxFC,QAAwF,aAA9FC,IAA8F;AAAA,MAA9EC,OAA8E,aAA9EA,OAA8E;AAAA,MAArEC,IAAqE,aAArEA,IAAqE;AAAA,MAA/DC,WAA+D,aAA/DA,WAA+D;AAAA,MAAlDC,gBAAkD,aAAlDA,gBAAkD;AAAA,MAAvBC,SAAuB,QAA9BC,KAA8B;AAAA,MAAZC,SAAY,QAAZA,SAAY;;AAClI,MAAI,CAACJ,WAAL,EAAkB;AAChB,UAAM,IAAIK,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,MAAIT,QAAQ,KAAK,OAAjB,EAA0B;AACxB,UAAM,IAAIS,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,MAAIF,KAAK,GAAGD,SAAS,CAACX,GAAtB;;AAEA,MAAI,CAACe,gBAAEC,GAAF,CAAMN,gBAAN,EAAwBE,KAAK,CAAC/C,kBAA9B,CAAL,EAAwD;AACtD,UAAM,IAAIiD,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,MAAIG,aAAa,GAAGP,gBAAgB,CAACE,KAAK,CAAC/C,kBAAP,CAApC;;AAEA,MAAI+C,KAAK,CAAC9C,gBAAN,IAA0BoD,SAA1B,IAAuC,CAACH,gBAAEC,GAAF,CAAMN,gBAAN,EAAwBE,KAAK,CAAC9C,gBAA9B,CAA5C,EAA6F;AAC3F,UAAM,IAAIgD,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,MAAIK,WAAW,GAAGP,KAAK,CAAC9C,gBAAN,IAA0BoD,SAA1B,GACdR,gBAAgB,CAACE,KAAK,CAAC9C,gBAAP,CADF,GAEd,CAAC,CAFL;;AAIA,MAAI8C,KAAK,CAAC7C,eAAN,IAAyBmD,SAAzB,IAAsC,CAACH,gBAAEC,GAAF,CAAMN,gBAAN,EAAwBE,KAAK,CAAC7C,eAA9B,CAA3C,EAA2F;AACzF,UAAM,IAAI+C,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,MAAIM,UAAU,GAAGR,KAAK,CAAC7C,eAAN,IAAyBmD,SAAzB,GACbR,gBAAgB,CAACE,KAAK,CAAC7C,eAAP,CADH,GAEb,CAAC,CAFL;;AAIA,MAAI,CAACgD,gBAAEC,GAAF,CAAMN,gBAAN,EAAwBE,KAAK,CAAC5C,iBAA9B,CAAL,EAAuD;AACrD,UAAM,IAAI8C,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,MAAIO,YAAY,GAAGX,gBAAgB,CAACE,KAAK,CAAC5C,iBAAP,CAAnC;AAEA,MAAIsD,OAAO,GAAGd,IAAI,CAACe,GAAL,CACZ,UAAAC,GAAG;AAAA,WACDA,GAAG,CAACC,WAAJ,CACE,UAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB;AAAA,aACEtC,MAAM,CAACuC,MAAP,CAAcH,MAAd,sBAAyBjB,WAAW,CAACmB,KAAD,CAApC,EAA8CD,KAA9C,EADF;AAAA,KADF,EAGE,EAHF,CADC;AAAA,GADS,CAAd;;AASA,MAAIG,UAAU,sBAAO,IAAIC,GAAJ,CAAQvB,IAAI,CAACe,GAAL,CAAS,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACP,aAAD,CAAP;AAAA,GAAZ,CAAR,CAAP,CAAd;;AA5CkI,qBA6CnGT,IAAI,CAACwB,MAAL,CAC7B,UAACC,KAAD,EAAQT,GAAR,EAAgB;AACd,QAAIU,UAAU,GAAGV,GAAG,CAACL,WAAD,CAApB;;AACA,QAAI,CAACc,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBF,UAAtB,CAAL,EAAwC;AACtCD,MAAAA,KAAK,CAACE,MAAN,CAAaE,IAAb,CAAkBH,UAAlB;AACAD,MAAAA,KAAK,CAACK,YAAN,CAAmBD,IAAnB,CAAwBb,GAAG,CAACJ,UAAD,CAA3B;AACD;;AACD,WAAOa,KAAP;AACD,GAR4B,EAS7B;AAAEE,IAAAA,MAAM,EAAE,EAAV;AAAcG,IAAAA,YAAY,EAAE;AAA5B,GAT6B,CA7CmG;AAAA,MA6C5HH,MA7C4H,gBA6C5HA,MA7C4H;AAAA,MA6CpHG,YA7CoH,gBA6CpHA,YA7CoH;;AAyDlI,MAAIC,SAAS,GAAG3B,KAAK,CAACxC,YAAN,CAAmBoE,KAAnB,EAAhB;AACA,MAAIC,SAAS,GAAGN,MAAM,CAACZ,GAAP,CAAW,UAACW,UAAD,EAAaN,KAAb,EAAoBO,MAApB,EAA+B;AACxD,QAAIO,QAAQ,GAAGH,SAAS,CAACI,SAAV,CAAoB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,KAAWX,UAAf;AAAA,KAArB,CAAf;AACA,WAAO;AACLW,MAAAA,IAAI,EAAEX,UADD;AAELY,MAAAA,KAAK,EAAEJ,QAAQ,GAAG,CAAX,GACHK,kBAAMC,GAAN,CAAU,CAAC,EAAE,MAAMpB,KAAN,GAAcO,MAAM,CAACc,MAAvB,CAAX,EAA2C,CAA3C,EAA8C,GAA9C,IAAqD,EADlD,GAEHV,SAAS,CAACG,QAAD,CAAT,CAAoBI;AAJnB,KAAP;AAMD,GARe,CAAhB;AASAlC,EAAAA,KAAK,CAACxC,YAAN,GAAqBqE,SAArB,CAnEkI,CAqElI;;AACA,MAAIS,QAAQ,GAAG,EAAf;AAEA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAEtB,UADS;AAEjBuB,IAAAA,QAAQ,EAAElB,MAAM,CAACZ,GAAP,CAAW,UAACW,UAAD,EAAaoB,eAAb;AAAA,aAAkC;AACrDC,QAAAA,KAAK,EAAErB,UAAU,IAAIhB,SAAd,GAA0B,aAAaoC,eAAe,GAAG,CAA/B,CAA1B,GAA8DpB,UADhB;AAErDsB,QAAAA,eAAe,EAAE,uBAAMf,SAAS,CAACa,eAAD,CAAT,CAA2BR,KAAjC,EAAwCW,CAAxC,CAA0C7C,KAAK,CAACtC,gBAAhD,EAAkEoF,IAAlE,EAFoC;AAGrDC,QAAAA,WAAW,EAAE,uBAAMlB,SAAS,CAACa,eAAD,CAAT,CAA2BR,KAAjC,EAAwCW,CAAxC,CAA0C7C,KAAK,CAACrC,oBAAhD,EAAsEmF,IAAtE,EAHwC;AAIrDE,QAAAA,WAAW,EAAE,CAJwC;AAKrDC,QAAAA,KAAK,EAAEjD,KAAK,CAACvC,SAAN,GAAkBiE,YAAY,CAACgB,eAAD,CAA9B,GAAkDA,eALJ;AAMrDlD,QAAAA,IAAI,EAAE0B,UAAU,CAACP,GAAX,CAAe,UAAAuC,QAAQ,EAAI;AAC/B,cAAIC,GAAG,GAAGvD,IAAI,CAACwB,MAAL,CAAY,UAAC+B,GAAD,EAAMvC,GAAN,EAAc;AAClC,gBAAIwC,OAAO,GAAGxC,GAAG,CAACP,aAAD,CAAH,KAAuB6C,QAAvB,KACR3C,WAAW,GAAG,CAAd,IAAmBK,GAAG,CAACL,WAAD,CAAH,KAAqBe,UADhC,CAAd;AAEA,mBAAO6B,GAAG,IAAIC,OAAO,GAAG,CAACxC,GAAG,CAACH,YAAD,CAAJ,IAAsB,CAAzB,GAA6B,CAAxC,CAAV;AACD,WAJS,EAIP,CAJO,CAAV;AAKA,iBAAO,CAAC6B,QAAQ,CAACY,QAAD,CAAR,GAAqBZ,QAAQ,CAACY,QAAD,CAAR,IAAsB,EAA5C,EAAgD5B,UAAhD,IAA8D6B,GAArE;AACD,SAPK;AAN+C,OAAlC;AAAA,KAAX;AAFO,GAAnB;AAmBA,MAAIE,YAAY,GAAGC,gBAAOC,KAAP,CAAa7D,IAAb,KAAsB,OAAzC;AAEA,MAAI8D,OAAO,GAAG,IAAIC,KAAJ,CAAUlE,MAAV,EAAkB;AAC9BG,IAAAA,IAAI,EAAEM,KAAK,CAAChD,WAAN,KAAsB,YAAtB,GAAqC,eAArC,GAAsD,KAD9B;AAE9BwC,IAAAA,IAAI,EAAE+C,YAFwB;AAG9B;AACAmB,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAE,IADL;AAEP/F,MAAAA,MAAM,EAAE;AACNgG,QAAAA,OAAO,EAAE5D,KAAK,CAACpC,MAAN,CAAaC,SADhB;AAENC,QAAAA,QAAQ,EAAEkC,KAAK,CAACpC,MAAN,CAAaE,QAFjB;AAGN+F,QAAAA,SAAS,EAAE7D,KAAK,CAACpC,MAAN,CAAaG,WAHlB;AAIN+F,QAAAA,OAAO,EAAE9D,KAAK,CAACpC,MAAN,CAAaI,SAJhB;AAKNwE,QAAAA,MAAM,EAAE;AACNuB,UAAAA,SAAS,EAAEV,YAAY,GAAG,MAAH,GAAY;AAD7B;AALF,OAFD;AAWPpF,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE4B,KAAK,CAAC/B,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyBC,QAD9B;AAELC,YAAAA,WAAW,EAAE2B,KAAK,CAAC/B,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyBE,WAFjC;AAGLC,YAAAA,WAAW,EAAE0B,KAAK,CAAC/B,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyBG,WAHjC;AAILyF,YAAAA,SAAS,EAAEV,YAAY,GAAG,MAAH,GAAY;AAJ9B,WADT;AAOEW,UAAAA,OAAO,EAAE,IAPX;AAQEC,UAAAA,SAAS,EAAE;AACTL,YAAAA,OAAO,EAAE,CAAC,CAAC5D,KAAK,CAAC/B,MAAN,CAAaC,KAAb,CAAmBK,eADrB;AAET2D,YAAAA,KAAK,EAAEmB,YAAY,wBAAiB,CAACrD,KAAK,CAAC/B,MAAN,CAAaC,KAAb,CAAmBK,eAArC,oCAA8E,CAACyB,KAAK,CAAC/B,MAAN,CAAaC,KAAb,CAAmBK,eAAlG;AAFV;AARb,SADK,CADD;AAgBNC,QAAAA,KAAK,EAAE,CACL;AACEL,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE4B,KAAK,CAAC/B,MAAN,CAAaO,KAAb,CAAmBL,KAAnB,CAAyBC,QAD9B;AAELC,YAAAA,WAAW,EAAE2B,KAAK,CAAC/B,MAAN,CAAaO,KAAb,CAAmBL,KAAnB,CAAyBE,WAFjC;AAGLC,YAAAA,WAAW,EAAE0B,KAAK,CAAC/B,MAAN,CAAaO,KAAb,CAAmBL,KAAnB,CAAyBG,WAHjC;AAILyF,YAAAA,SAAS,EAAEV,YAAY,GAAG,MAAH,GAAY;AAJ9B,WADT;AAOEW,UAAAA,OAAO,EAAE,IAPX;AAQEC,UAAAA,SAAS,EAAE;AACTL,YAAAA,OAAO,EAAE,CAAC,CAAC5D,KAAK,CAAC/B,MAAN,CAAaO,KAAb,CAAmBD,eADrB;AAET2D,YAAAA,KAAK,EAAEmB,YAAY,wBAAiB,CAACrD,KAAK,CAAC/B,MAAN,CAAaO,KAAb,CAAmBD,eAArC,oCAA8E,CAACyB,KAAK,CAAC/B,MAAN,CAAaO,KAAb,CAAmBD,eAAlG;AAFV;AARb,SADK;AAhBD,OAXD;AA2CP2F,MAAAA,OAAO,EAAE,iBAASC,CAAT,EAAY;AACnB,YAAIC,MAAM,GAAGZ,OAAO,CAACa,iBAAR,CAA0BF,CAA1B,EAA6B,CAA7B,CAAb;AAAA,YACIG,KAAK,GAAGF,MAAM,IAAIA,MAAM,CAACG,MAD7B;;AAEA,YAAID,KAAJ,EAAW;AACT,cAAIpB,QAAQ,GAAGoB,KAAK,CAAC3B,KAArB;AACA,cAAIpB,OAAM,GAAG+C,KAAK,CAACE,YAAnB;AAEAxE,UAAAA,KAAK,CAAC3C,cAAN,CAAqB+D,MAArB,CAA4B,UAAUqD,MAAV,EAAkBC,aAAlB,EAAiC;AAC3D;AACA,gBAAID,MAAJ,EAAY;AACV,qBAAOA,MAAP;AACD,aAJ0D,CAM3D;;;AACA,gBAAIE,GAAG,GAAGD,aAAa,CAACC,GAAxB;;AACA,gBAAIA,GAAJ,EAAS;AACP,kBAAIC,WAAW,GAAGC,WAAW,CAACH,aAAa,CAACxB,QAAf,CAA7B;AACA,kBAAI4B,SAAS,GAAGD,WAAW,CAACH,aAAa,CAACnD,MAAf,CAA3B;;AACA,kBAAIqD,WAAW,CAACG,IAAZ,CAAiB7B,QAAjB,MAA+B3B,OAAM,IAAIjB,SAAV,IAAuBwE,SAAS,CAACC,IAAV,CAAexD,OAAf,CAAtD,CAAJ,EAAmF;AACjFoD,gBAAAA,GAAG,GAAGA,GAAG,CAACK,OAAJ,CACJ,sFADI,EAEJ,UAASC,KAAT,EAAgBvF,IAAhB,EAAsBwF,IAAtB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,SAA5C,EAAuD;AACrD,sBAAIC,MAAM,sBAAO,IAAInE,GAAJ,CACfzB,IAAI,IAAI,KAAR,GACI6F,eAAe,CAACzF,gBAAgB,CAACoF,IAAD,CAAjB,EAAyBhC,QAAzB,EAAmC3B,OAAnC,EAA2ClB,aAA3C,EAA0DE,WAA1D,EAAuEX,IAAvE,CADnB,GAEI4F,eAAe,CAACN,IAAD,EAAOjF,SAAP,CAHJ,CAAP,CAAV;;AAKA,yBAAOqF,MAAM,CAACjD,MAAP,GAAgB,CAAhB,GACH4C,KADG,GAEHE,KAAK,GACHG,MAAM,CAACG,IAAP,CAAY,GAAZ,CADG,GAEHL,OAAO,GACLE,MAAM,CAAC3E,GAAP,CAAW,UAAA+E,CAAC;AAAA,2BAAIC,kBAAkB,CAACN,SAAS,IAAI/E,SAAb,GAAyB4E,IAAzB,GAAgCG,SAAjC,CAAlB,GAAgE,GAAhE,GAAsEM,kBAAkB,CAACD,CAAD,CAA5F;AAAA,mBAAZ,EAA6GD,IAA7G,CAAkH,GAAlH,CADK,GAELE,kBAAkB,CAACL,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAD,CAN1B;AAOD,iBAfG,CAAN;AAiBAG,gBAAAA,MAAM,CAACC,IAAP,CAAYlB,GAAZ,EAAiBD,aAAa,CAACoB,WAAd,GAA4B,QAA5B,GAAuC,OAAxD;AACA,uBAAO,IAAP;AACD;AACF;AACF,WAjCD,EAiCG,KAjCH;AAkCD;AACF;AArFM;AAJqB,GAAlB,CAAd;AA4FD;;AAED,SAASP,eAAT,CAAyBQ,QAAzB,EAAmC7C,QAAnC,EAA6C3B,MAA7C,EAAqDyE,WAArD,EAAkEC,cAAlE,EAAkFrG,IAAlF,EAAwF;AACtF,MAAImG,QAAQ,IAAI,CAAhB,EAAmB;AACjB,WAAOnG,IAAI,CAACwB,MAAL,CAAY,UAAC8E,MAAD,EAAStF,GAAT,EAAiB;AAClC,UAAIsC,QAAQ,KAAKtC,GAAG,CAACoF,WAAD,CAAhB,KAAkCC,cAAc,GAAG,CAAjB,IAAsBrF,GAAG,CAACqF,cAAD,CAAH,KAAwB1E,MAAhF,CAAJ,EAA6F;AAC3F2E,QAAAA,MAAM,CAACzE,IAAP,CAAYb,GAAG,CAACmF,QAAD,CAAf;AACD;;AACD,aAAOG,MAAP;AACD,KALM,EAKJ,EALI,CAAP;AAMD;;AACD,SAAO,EAAP;AACD;;AAED,SAASV,eAAT,CAAyBW,OAAzB,EAAkClG,SAAlC,EAA6C;AAC3C,SAAOA,SAAS,CAACmB,MAAV,CACL,UAAC8E,MAAD,EAASE,QAAT,EAAsB;AACpB;AACA,QAAIC,SAAS,GAAGzH,gBAAG0H,OAAH,CAAWF,QAAQ,CAACG,OAAT,CAAiBxF,KAA5B,CAAhB;;AACA,QAAIyF,KAAK,GAAGJ,QAAQ,CAACK,UAAT,IAAuBJ,SAAS,CAAChE,MAAV,KAAqB,CAA5C,IAAiDgE,SAAS,CAAC,CAAD,CAAT,KAAiB,QAA9E;AACA,WAAOD,QAAQ,CAAClB,IAAT,KAAkBiB,OAAlB,GACHD,MAAM,CAACQ,MAAP,CAAcF,KAAK,GAAG,CAACJ,QAAQ,CAACG,OAAT,CAAiBtE,IAAlB,CAAH,GAA6BoE,SAAhD,CADG,GAEHH,MAFJ;AAGD,GARI,EASL,EATK,CAAP;AAWD;;AAED,SAASrB,WAAT,CAAqB8B,UAArB,EAAiC;AAC/B,MAAIC,KAAK,GAAG,kBAAkBC,IAAlB,CAAuBF,UAAvB,CAAZ;AACA,SAAOC,KAAK,GAAG,IAAIE,MAAJ,CAAWF,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAA1B,CAAH,GAAoC,IAAIE,MAAJ,CAAW,MAAM3G,gBAAE4G,YAAF,CAAeJ,UAAf,CAAN,GAAmC,GAA9C,EAAmD,GAAnD,CAAhD;AACD;;AAED,SAASK,SAAT,CAAmB7C,CAAnB,EAAsB8C,KAAtB,EAA6B;AAC3B,MAAIC,KAAJ;AAAA,MACIC,OAAO,GAAG,KADd;AAAA,MAEIC,IAAI,GAAG,IAFX;AAAA,MAGItK,SAAS,GAAGsK,IAAI,CAACpH,KAAL,CAAWlD,SAH3B;AAAA,MAII0C,IAAI,GAAG4H,IAAI,CAAC5H,IAJhB;AAAA,MAKI6H,QAAQ,GAAGJ,KAAK,CAACK,IAAN,CAAW,gBAAX,EAA6BC,GAA7B,CAAiC,UAAjC,EAA6C,UAA7C,EAAyDC,IAAzD,CAA8D,EAA9D,CALf;AAAA,MAMIC,WAAW,GAAGJ,QAAQ,CAAC,CAAD,CAN1B;AAAA,MAOIK,OAAO,GAAGC,MAAM,CAAC,UAAD,CAAN,CAAmBC,QAAnB,CAA4BP,QAA5B,CAPd;AAAA,MAQI9H,MAAM,GAAGmI,OAAO,CAAC,CAAD,CARpB;;AAUA,MAAIlI,IAAI,IAAIA,IAAI,CAACI,IAAb,IAAqBJ,IAAI,CAACI,IAAL,CAAUyC,MAAnC,EAA2C;AACzC,QAAI7C,IAAI,CAACE,IAAL,KAAc,OAAlB,EAA2B;AACzBgI,MAAAA,OAAO,CAACG,IAAR,CAAa;AAAEC,QAAAA,KAAK,EAAET,QAAQ,CAACS,KAAT,EAAT;AAA2BC,QAAAA,MAAM,EAAEV,QAAQ,CAACU,MAAT;AAAnC,OAAb;;AACA,UAAI;AACF,YAAI,UAAUjL,SAAd,EAAyB;AACvBsK,UAAAA,IAAI,CAACY,YAAL,CAAkBzI,MAAlB;AACD,SAFD,MAGK,IAAI,aAAazC,SAAjB,EAA4B;AAC/BsK,UAAAA,IAAI,CAACa,eAAL,CAAqB1I,MAArB;AACD;;AACD4H,QAAAA,OAAO,GAAG,IAAV;AACD,OARD,CASA,OAAMhD,CAAN,EAAS;AACP+D,QAAAA,OAAO,CAAChB,KAAR,CAAc,cAAd,EAA8BA,KAAK,GAAG/C,CAAtC;AACD;AACF;AACF;;AACD,MAAI,CAACgD,OAAL,EAAc;AACZ,QAAIgB,GAAG,GAAG,aAAajB,KAAK,GAAG,YAAYA,KAAK,CAACkB,OAArB,GAA+B,GAAjD,CAAV;;AACA,QAAIC,OAAO,GAAGzJ,gBAAG0J,GAAH,CAAO;AAAEnI,MAAAA,CAAC,EAAE,KAAL;AAAYoI,MAAAA,KAAK,EAAE;AAAE3E,QAAAA,OAAO,EAAE,MAAX;AAAmB4E,QAAAA,UAAU,EAAE,QAA/B;AAAyCC,QAAAA,SAAS,EAAE,QAApD;AAA8DV,QAAAA,MAAM,EAAE;AAAtE,OAAnB;AAAmGW,MAAAA,CAAC,EAAE,CACzH;AAAEvI,QAAAA,CAAC,EAAE,KAAL;AAAYwI,QAAAA,GAAG,EAAE,mBAAjB;AAAsCJ,QAAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAA7C;AAAqE3G,QAAAA,IAAI,EAAEkG;AAA3E,OADyH;AAAtG,KAAP,CAAd;;AAGAd,IAAAA,QAAQ,CAACG,IAAT,CAAc,EAAd,EAAkBqB,MAAlB,CAAyBR,OAAzB;AACD;AACF;;IAEYS,gB;;;;;AACX,4BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA;;AACzC,0FAAMF,MAAN,EAAcC,SAAd;AAEA,UAAKE,mBAAL,GAA2B,CACzB;AAAEnI,MAAAA,KAAK,EAAE,KAAT;AAAgBkB,MAAAA,IAAI,EAAE;AAAtB,KADyB,EAEzB;AAAElB,MAAAA,KAAK,EAAE,IAAT;AAAekB,MAAAA,IAAI,EAAE;AAArB,KAFyB,EAGzB;AAAElB,MAAAA,KAAK,EAAE,IAAT;AAAekB,MAAAA,IAAI,EAAE;AAArB,KAHyB,CAA3B;AAKA,UAAKkH,mBAAL,GAA2B,CACzB;AAAEpI,MAAAA,KAAK,EAAE,QAAT;AAAmBkB,MAAAA,IAAI,EAAE;AAAzB,KADyB,EAEzB;AAAElB,MAAAA,KAAK,EAAE,MAAT;AAAiBkB,MAAAA,IAAI,EAAE;AAAvB,KAFyB,EAGzB;AAAElB,MAAAA,KAAK,EAAE,QAAT;AAAmBkB,MAAAA,IAAI,EAAE;AAAzB,KAHyB,CAA3B;AAKA,UAAKmH,WAAL,GAAmB,CACjB;AAAErI,MAAAA,KAAK,EAAE,IAAT;AAAe,cAAQ;AAAvB,KADiB,EAEjB;AAAEA,MAAAA,KAAK,EAAE,KAAT;AAAgBkB,MAAAA,IAAI,EAAE;AAAtB,KAFiB,EAGjB;AAAElB,MAAAA,KAAK,EAAE,QAAT;AAAmBkB,MAAAA,IAAI,EAAE;AAAzB,KAHiB,CAAnB;AAKA,UAAKoH,kBAAL,GAA0B,CACxB;AAAEtI,MAAAA,KAAK,EAAE,YAAT;AAAuBkB,MAAAA,IAAI,EAAE;AAA7B,KADwB,EAExB;AAAElB,MAAAA,KAAK,EAAE,UAAT;AAAqBkB,MAAAA,IAAI,EAAE;AAA3B,KAFwB,CAA1B;AAIA,UAAKqH,kBAAL,GAA0B,CACxB;AAAEvI,MAAAA,KAAK,EAAE,MAAT;AAAiBkB,MAAAA,IAAI,EAAE;AAAvB,KADwB,EAExB;AAAElB,MAAAA,KAAK,EAAE,QAAT;AAAmBkB,MAAAA,IAAI,EAAE;AAAzB,KAFwB,EAGxB;AAAElB,MAAAA,KAAK,EAAE,OAAT;AAAkBkB,MAAAA,IAAI,EAAE;AAAxB,KAHwB,CAA1B;AAKA,UAAKsH,WAAL,GAAmB,CACjB;AAAExI,MAAAA,KAAK,EAAE,KAAT;AAAgBkB,MAAAA,IAAI,EAAE;AAAtB,KADiB,EAEjB;AAAElB,MAAAA,KAAK,EAAE,MAAT;AAAiBkB,MAAAA,IAAI,EAAE;AAAvB,KAFiB,CAAnB;AAIA,UAAKuH,YAAL,GAAoBrJ,gBAAEsJ,KAAF,CAAQ,CAAR,EAAW,GAAX,EAAgB,CAAhB,EAAmB9I,GAAnB,CAAuB,UAAA+I,CAAC;AAAA,aAAK;AAC/C3I,QAAAA,KAAK,EAAE2I,CAAC,GAAG,GADoC;AAC/BzH,QAAAA,IAAI,EAAE,UAAGyH,CAAH,UAAWA,CAAC,GAAGA,CAAC,KAAK,GAAN,GAAY,UAAZ,GAAyB,EAA5B,GAAiC,cAA7C;AADyB,OAAL;AAAA,KAAxB,CAApB;AAGA,UAAKC,cAAL,GAAsBxJ,gBAAEsJ,KAAF,CAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB9I,GAAlB,CAAsB,UAAA+I,CAAC;AAAA,aAAK;AAChD3I,QAAAA,KAAK,EAAE2I,CADyC;AACtCzH,QAAAA,IAAI,EAAE,UAAGyH,CAAH,aAAcA,CAAC,GAAGA,CAAC,KAAK,EAAN,GAAW,aAAX,GAA2B,EAA9B,GAAmC,eAAlD;AADgC,OAAL;AAAA,KAAvB,CAAtB;AAIA,UAAKT,UAAL,GAAkBA,UAAlB;AACA,UAAKzJ,IAAL,GAAY,IAAZ;;AAEA,UAAKoK,gBAAL;;AAEA,UAAKC,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,+BAAjC;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,+BAAhC;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKG,cAAL,CAAoBD,IAApB,+BAArC;;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKI,WAAL,CAAiBF,IAAjB,+BAA7B;;AA9CyC;AA+C1C,G,CAED;AACA;;;;;uCACmB;AACjB,UAAIhK,KAAK,GAAG,KAAKA,KAAjB;;AACAG,sBAAEgK,YAAF,CAAenK,KAAf,EAAsBnD,cAAtB;;AACA,cAAQmD,KAAK,CAAClD,SAAd;AACE,aAAK,eAAL;AACEkD,UAAAA,KAAK,CAAClD,SAAN,GAAkB,KAAlB;AACAkD,UAAAA,KAAK,CAAChD,WAAN,GAAoB,YAApB;;AACF,aAAK,KAAL;AACE,cAAI,CAACgD,KAAK,CAACZ,GAAX,EAAgB;AACdY,YAAAA,KAAK,CAACZ,GAAN,GAAY,EAAZ;AACD;;AACDe,0BAAEgK,YAAF,CAAenK,KAAK,CAACZ,GAArB,EAA0BrC,YAA1B;;AACA2B,UAAAA,MAAM,CAACC,IAAP,CAAY5B,YAAZ,EAA0BqN,OAA1B,CAAkC,UAAAC,GAAG,EAAI;AACvC,gBAAIlK,gBAAEC,GAAF,CAAMJ,KAAN,EAAaqK,GAAb,CAAJ,EAAuB;AACrBrK,cAAAA,KAAK,CAACZ,GAAN,CAAUiL,GAAV,IAAiBrK,KAAK,CAACqK,GAAD,CAAtB;AACA,qBAAOrK,KAAK,CAACqK,GAAD,CAAZ;AACD;AACF,WALD;AAMA;;AAEF,aAAK,QAAL;AACElK,0BAAEgK,YAAF,CAAenK,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACX,MAAN,IAAgB,EAA9C,EAAkDP,eAAlD;;AACA;AAnBJ;AAqBD;;;mCAEcwL,S,EAAW;AACxB,UAAItK,KAAK,GAAG,KAAKA,KAAjB;AACA,UAAIuK,MAAM,GAAGvK,KAAK,CAACA,KAAK,CAAClD,SAAP,CAAL,CAAuBU,YAApC;AACA+M,MAAAA,MAAM,CAACC,MAAP,CAAcF,SAAS,IAAI,IAAb,GAAoBC,MAAM,CAAClI,MAA3B,GAAoCiI,SAAlD,EAA6D,CAA7D,EAAgE,uBAAM,OAAN,IAAiB,EAAjF;AACA,WAAKtD,SAAL;AACD;;;sCAEiBsD,S,EAAW;AAC3B,UAAItK,KAAK,GAAG,KAAKA,KAAjB;AACA,UAAIxC,YAAY,GAAGwC,KAAK,CAACA,KAAK,CAAClD,SAAP,CAAL,CAAuBU,YAA1C;AACA,UAAIiN,KAAK,GAAGjN,YAAY,CAAC6E,MAAzB;;AACA,UAAIoI,KAAJ,EAAW;AACTjN,QAAAA,YAAY,CAACgN,MAAb,CAAoBF,SAAS,IAAI,IAAb,GAAoBG,KAAK,GAAG,CAA5B,GAAgCH,SAApD,EAA+D,CAA/D;AACA,aAAKtD,SAAL;AACD;AACF;;;uCAEkB;AACjB,UAAItC,aAAa,GAAG;AAClBC,QAAAA,GAAG,EAAE,EADa;AAElBmB,QAAAA,WAAW,EAAE;AAFK,OAApB;;AAKA,UAAI,KAAK4E,cAAL,CAAoB,oBAApB,CAAJ,EAA+C;AAC7ChG,QAAAA,aAAa,CAACxB,QAAd,GAAyB,QAAzB;AACD;;AACD,UAAI,KAAKwH,cAAL,CAAoB,kBAApB,CAAJ,EAA6C;AAC3ChG,QAAAA,aAAa,CAACnD,MAAd,GAAuB,QAAvB;AACD;;AAED,WAAKoJ,aAAL,GAAqBtN,cAArB,CAAoCoE,IAApC,CAAyCiD,aAAzC;AACD;;;wCAEmBA,a,EAAe;AACjC,UAAIkG,KAAK,GAAG,KAAKD,aAAL,GAAqBtN,cAAjC;AACAuN,MAAAA,KAAK,CAACJ,MAAN,CAAaI,KAAK,CAACC,OAAN,CAAcnG,aAAd,CAAb,EAA2C,CAA3C;AACD;;;qCAEgB;AACf,UAAIoG,IAAI,GAAG,8CAAX;AACA,WAAKC,YAAL,CAAkB,SAAlB,YAAgCD,IAAhC,kBAAmD,CAAnD;AACA,WAAKC,YAAL,CAAkB,eAAlB,YAAsCD,IAAtC,yBAAgE,CAAhE;AACA,WAAKC,YAAL,CAAkB,kBAAlB,YAAyCD,IAAzC,2BAAqE,CAArE;AACD;;;kCAEa;AACZ,WAAK9D,SAAL;AACD;;;mCAEcgE,Q,EAAU;AACvB,UAAIA,QAAQ,IAAIA,QAAQ,CAAC3I,MAAzB,EAAiC;AAC/B,YAAI7C,IAAI,GAAGwL,QAAQ,CAAC,CAAD,CAAnB;AAD+B,YAEzBtL,IAFyB,GAEDF,IAFC,CAEzBE,IAFyB;AAAA,YAEnBC,OAFmB,GAEDH,IAFC,CAEnBG,OAFmB;AAAA,YAEVC,IAFU,GAEDJ,IAFC,CAEVI,IAFU;AAG/B,YAAIC,WAAW,GAAGF,OAAO,CAACgB,GAAR,CAAY,UAAAsK,GAAG;AAAA,iBAAI,aAAa,OAAOA,GAApB,GAA0BA,GAA1B,GAAgCA,GAAG,CAAChJ,IAAxC;AAAA,SAAf,CAAlB;AACA,YAAInC,gBAAgB,GAAGD,WAAW,CAACgB,WAAZ,CACrB,UAACqK,OAAD,EAAUC,OAAV,EAAmBnK,KAAnB;AAAA,iBACEtC,MAAM,CAACuC,MAAP,CAAciK,OAAd,sBAA0BC,OAA1B,EAAoCnK,KAApC,EADF;AAAA,SADqB,EAGrB,EAHqB,CAAvB;AAKA,aAAKxB,IAAL,GAAY;AAAEE,UAAAA,IAAI,EAAJA,IAAF;AAAQC,UAAAA,OAAO,EAAPA,OAAR;AAAiBC,UAAAA,IAAI,EAAJA,IAAjB;AAAuBC,UAAAA,WAAW,EAAXA,WAAvB;AAAoCC,UAAAA,gBAAgB,EAAhBA;AAApC,SAAZ;AACD,OAVD,MAWK;AACH,aAAKN,IAAL,GAAY,EAAZ;AACD;;AAED,WAAKwH,SAAL;AACD;;;qCAEgBoE,G,EAAKf,G,EAAK;AAAA;;AACzB,aAAO,UAAAgB,QAAQ,EAAI;AACjBD,QAAAA,GAAG,CAACf,GAAD,CAAH,GAAWgB,QAAX;;AACA,QAAA,MAAI,CAACrE,SAAL;AACD,OAHD;AAID;;;gCAEW;AACV,WAAK6C,MAAL,CAAYyB,IAAZ,CAAiB,WAAjB;AACD;;;qCAEuB;AAAA;;AAAA,wCAAN3M,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACtB,aAAOA,IAAI,CAAC4M,KAAL,CAAW,UAAAlB,GAAG;AAAA,eAAI,CAAClL,eAAe,CAAC,MAAI,CAACa,KAAL,CAAWlD,SAAZ,CAAf,IAAyC,EAA1C,EAA8C0E,QAA9C,CAAuD6I,GAAvD,CAAJ;AAAA,OAAd,CAAP;AACD;;;oCAEe;AACd,aAAO,KAAKrK,KAAL,CAAW,KAAKA,KAAL,CAAWlD,SAAtB,CAAP;AACD;;;iCAEYyC,M,EAAQ;AACnBD,MAAAA,WAAW,CAAC;AACVC,QAAAA,MAAM,EAANA,MADU;AAEVC,QAAAA,IAAI,EAAE,KAAKA,IAFD;AAGVQ,QAAAA,KAAK,EAAE,KAAKA,KAHF;AAIVC,QAAAA,SAAS,EAAE,KAAKuL,WAAL,CAAiBvL;AAJlB,OAAD,CAAX;AAMD;;;oCAEeV,M,EAAQ;AACtB,UAAI6H,IAAI,GAAG,IAAX;AACA,UAAI5H,IAAI,GAAG4H,IAAI,CAAC5H,IAAhB;AAFsB,UAGhBI,IAHgB,GAGWJ,IAHX,CAGhBI,IAHgB;AAAA,UAGVE,gBAHU,GAGWN,IAHX,CAGVM,gBAHU;AAItB,UAAIC,SAAS,GAAGqH,IAAI,CAACpH,KAArB;AACA,UAAIA,KAAK,GAAGD,SAAS,CAACV,MAAtB;;AAEA,UAAI,CAACc,gBAAEC,GAAF,CAAMN,gBAAN,EAAwBE,KAAK,CAAC/C,kBAA9B,CAAL,EAAwD;AACtD,cAAM,IAAIiD,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,UAAIuL,gBAAgB,GAAG3L,gBAAgB,CAACE,KAAK,CAAC/C,kBAAP,CAAvC;;AAEA,UAAI,CAACkD,gBAAEC,GAAF,CAAMN,gBAAN,EAAwBE,KAAK,CAAC5C,iBAA9B,CAAL,EAAuD;AACrD,cAAM,IAAI8C,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,UAAIwL,eAAe,GAAG5L,gBAAgB,CAACE,KAAK,CAAC5C,iBAAP,CAAtC;;AAEA,UAAI8D,UAAU,GAAGf,gBAAEwL,IAAF,CAAO/L,IAAI,CAACe,GAAL,CAAS,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAAC6K,gBAAD,CAAP;AAAA,OAAZ,CAAP,CAAjB;;AACA,UAAInJ,QAAQ,GAAG1C,IAAI,CAACwB,MAAL,CAAY,UAACkB,QAAD,EAAW1B,GAAX,EAAgBgL,QAAhB,EAA6B;AACtD,YAAInL,YAAY,GAAGS,UAAU,CAAC2J,OAAX,CAAmBjK,GAAG,CAAC6K,gBAAD,CAAtB,CAAnB;AACAnJ,QAAAA,QAAQ,CAAC7B,YAAD,CAAR,GAAyB,CAAC6B,QAAQ,CAAC7B,YAAD,CAAR,IAA0B,CAA3B,IAAgCG,GAAG,CAAC8K,eAAD,CAA5D;AACA,eAAOpJ,QAAP;AACD,OAJc,EAIZ,EAJY,CAAf;AAMA,UAAIuJ,UAAJ;AAxBsB,UAyBhBvO,WAzBgB,GAyB0C0C,KAzB1C,CAyBhB1C,WAzBgB;AAAA,UAyBHE,YAzBG,GAyB0CwC,KAzB1C,CAyBHxC,YAzBG;AAAA,UAyBWD,eAzBX,GAyB0CyC,KAzB1C,CAyBWzC,eAzBX;AAAA,UAyB4ByB,SAzB5B,GAyB0CgB,KAzB1C,CAyB4BhB,SAzB5B;AA0BtBkJ,MAAAA,OAAO,CAAC4D,GAAR,CAAY;AAAExO,QAAAA,WAAW,EAAXA,WAAF;AAAeE,QAAAA,YAAY,EAAZA,YAAf;AAA6BD,QAAAA,eAAe,EAAfA,eAA7B;AAA8CyB,QAAAA,SAAS,EAATA;AAA9C,OAAZ;;AACA,UAAI1B,WAAW,KAAK,QAApB,EAA8B;AAC5B,YAAI,CAAC6C,gBAAEC,GAAF,CAAMN,gBAAN,EAAwBvC,eAAxB,CAAL,EAA+C;AAC7C,gBAAM,IAAI2C,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAI6L,aAAa,GAAGjM,gBAAgB,CAACvC,eAAD,CAApC;AACAsO,QAAAA,UAAU,GAAG3K,UAAU,CAACP,GAAX,CAAe,UAAAuC,QAAQ;AAAA,iBAAI,uBAAMtD,IAAI,CAAC0H,IAAL,CAAU,UAAA1G,GAAG;AAAA,mBAAIA,GAAG,CAAC6K,gBAAD,CAAH,KAA0BvI,QAA9B;AAAA,WAAb,EAAqD6I,aAArD,CAAN,CAAJ;AAAA,SAAvB,CAAb;AACD,OAND,MAOK,IAAIzO,WAAW,KAAK,QAApB,EAA8B;AACjCuO,QAAAA,UAAU,GAAG3K,UAAU,CAACP,GAAX,CAAe,UAACuC,QAAD,EAAWlC,KAAX,EAAkBE,UAAlB,EAAiC;AAC3D,iBAAO,uBAAM1D,YAAY,CAACwD,KAAK,GAAGxD,YAAY,CAAC6E,MAAtB,CAAlB,CAAP;AACD,SAFY,CAAb;AAGD,OAJI,MAKA;AACHwJ,QAAAA,UAAU,GAAG3K,UAAU,CAACP,GAAX,CAAe,UAACuC,QAAD,EAAWlC,KAAX,EAAkBE,UAAlB,EAAiC;AAC3D,iBAAOiB,kBAAMC,GAAN,CAAU,CAAC,EAAE,MAAMpB,KAAN,GAAcE,UAAU,CAACmB,MAA3B,CAAX,EAA+C,CAA/C,EAAkD,GAAlD,CAAP;AACD,SAFY,CAAb;AAGD;;AAED,UAAIgB,YAAY,GAAGC,gBAAOC,KAAP,CAAa7D,IAAb,KAAsB,OAAzC,CA7CsB,CA+CtB;;AACA,UAAIsM,aAAJ;AACA1J,MAAAA,QAAQ,GAAGA,QAAQ,CAAC3B,GAAT,CAAa,UAACI,KAAD,EAAQC,KAAR;AAAA,eAAmB;AAAEA,UAAAA,KAAK,EAALA,KAAF;AAASD,UAAAA,KAAK,EAALA;AAAT,SAAnB;AAAA,OAAb,CAAX;AACAuB,MAAAA,QAAQ,CAAC2J,IAAT,CAAcjN,SAAS,KAAK,MAAd,GAAuB,UAAC6D,CAAD,EAAIqJ,CAAJ;AAAA,eAAUA,CAAC,CAACnL,KAAF,GAAU8B,CAAC,CAAC9B,KAAtB;AAAA,OAAvB,GAAqD,UAAC8B,CAAD,EAAIqJ,CAAJ;AAAA,eAAUrJ,CAAC,CAAC9B,KAAF,GAAUmL,CAAC,CAACnL,KAAtB;AAAA,OAAnE;;AAlDsB,6BAmDkBuB,QAAQ,CAAClB,MAAT,CAAgB,UAACC,KAAD,EAAQ8K,OAAR,EAAiBnL,KAAjB,EAA2B;AAAA,oCAC/BK,KAD+B;AAAA,YAC5E2K,aAD4E;AAAA,YAC7DI,aAD6D;AAAA,YAC9CC,WAD8C;;AAEjFL,QAAAA,aAAa,CAACvK,IAAd,CAAmBoK,UAAU,CAACM,OAAO,CAACnL,KAAT,CAA7B;AACAoL,QAAAA,aAAa,CAAC3K,IAAd,CAAmBP,UAAU,CAACiL,OAAO,CAACnL,KAAT,CAA7B;AACAqL,QAAAA,WAAW,CAAC5K,IAAZ,CAAiB0K,OAAO,CAACpL,KAAzB;AACA,eAAOM,KAAP;AACD,OANuC,EAMrC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CANqC,CAnDlB;;AAAA;;AAmDrB2K,MAAAA,aAnDqB;AAmDN9K,MAAAA,UAnDM;AAmDMoB,MAAAA,QAnDN;;AA2DtB;AACA,UAAIhF,WAAW,KAAK,QAApB,EAA8B;AAC5BuO,QAAAA,UAAU,GAAGG,aAAb;AACD,OA9DqB,CAgEtB;;;AACA,UAAIM,QAAQ,GAAGT,UAAU,CAAClL,GAAX,CAAe,UAAAuB,KAAK;AAAA,eAAIA,KAAK,CAACW,CAAN,CAAQ7C,KAAK,CAACtC,gBAAd,EAAgCoF,IAAhC,EAAJ;AAAA,OAApB,CAAf;AACA,UAAIyJ,YAAY,GAAGV,UAAU,CAAClL,GAAX,CAAe,UAAAuB,KAAK;AAAA,eAAIA,KAAK,CAACW,CAAN,CAAQ7C,KAAK,CAACrC,oBAAd,EAAoCmF,IAApC,EAAJ;AAAA,OAApB,CAAnB;AAEA,UAAI0J,OAAO,GAAG;AACZ7J,QAAAA,KAAK,EAAEzB,UADK;AAEZ1B,QAAAA,IAAI,EAAE8C,QAFM;AAGZU,QAAAA,WAAW,EAAE,CAHD;AAIZD,QAAAA,WAAW,EAAEwJ,YAJD;AAKZ3J,QAAAA,eAAe,EAAE0J;AALL,OAAd;AAQA,UAAIG,WAAW,GAAG;AAChB/M,QAAAA,IAAI,EAAE,QADU;AAEhB;AACAiE,QAAAA,UAAU,EAAE,IAHI;AAIhBnE,QAAAA,IAAI,EAAE;AACJiD,UAAAA,QAAQ,EAAE,CAAE+J,OAAF,CADN;AAEJhK,UAAAA,MAAM,EAAE,aAAa,OAAOgK,OAAO,CAAC7J,KAA5B,GACJ6J,OAAO,CAAChN,IAAR,CAAamB,GAAb,CAAiB,UAAC+I,CAAD,EAAIgD,CAAJ;AAAA,6BAAaF,OAAO,CAAC7J,KAArB,eAA+B+J,CAAC,GAAG,CAAnC;AAAA,WAAjB,CADI,GAEJF,OAAO,CAAC7J;AAJR,SAJU;AAUhBe,QAAAA,OAAO,EAAE;AACPuI,UAAAA,IAAI,EAAEjM,KAAK,CAAChB,SADL;AAEP2N,UAAAA,QAAQ,EAAE;AAAE3J,YAAAA,WAAW,EAAE;AAAf,WAFH;AAGP/D,UAAAA,GAAG,EAAEe,KAAK,CAACf,GAHJ;AAIP2N,UAAAA,IAAI,EAAE,iBAAiB7H,IAAjB,CAAsB/E,KAAK,CAACjB,MAAN,IAAgB,EAAtC,IAA4CiB,KAAK,CAACjB,MAAlD,GAA2D,MAJ1D;AAKPnB,UAAAA,MAAM,EAAE;AACNgG,YAAAA,OAAO,EAAE5D,KAAK,CAACpC,MAAN,CAAaC,SADhB;AAENC,YAAAA,QAAQ,EAAEkC,KAAK,CAACpC,MAAN,CAAaE,QAFjB;AAGN+F,YAAAA,SAAS,EAAE7D,KAAK,CAACpC,MAAN,CAAaG,WAHlB;AAIN+F,YAAAA,OAAO,EAAE9D,KAAK,CAACpC,MAAN,CAAaI,SAJhB;AAKNwE,YAAAA,MAAM,EAAE;AACNuB,cAAAA,SAAS,EAAEV,YAAY,GAAG,MAAH,GAAY;AAD7B;AALF,WALD;AAcPwJ,UAAAA,SAAS,EAAE;AACTC,YAAAA,YAAY,EAAE,IADL;AAETC,YAAAA,aAAa,EAAE;AAFN,WAdJ;AAkBP7I,UAAAA,OAlBO,mBAkBEC,CAlBF,EAkBK;AACV,gBAAI6I,IAAI,GAAG,KAAK3I,iBAAL,CAAuBF,CAAvB,EAA0B,CAA1B,CAAX;;AACA,gBAAI6I,IAAJ,EAAU;AACR,kBAAI9J,QAAQ,GAAGhC,UAAU,CAAC8L,IAAI,CAACC,MAAN,CAAzB;AACA,kBAAIC,MAAM,GAAGlN,KAAK,CAAC3C,cAAN,CAAqB8P,IAArB,CAA0B,UAAAzI,aAAa,EAAI;AACtD;AADsD,oBAEhDC,GAFgD,GAEjBD,aAFiB,CAEhDC,GAFgD;AAAA,oBAEjCC,WAFiC,GAEjBF,aAFiB,CAE3CxB,QAF2C;;AAGtD,oBAAIyB,GAAJ,EAAS;AACPC,kBAAAA,WAAW,GAAGC,WAAW,CAACD,WAAD,CAAzB;;AACA,sBAAIA,WAAW,CAACG,IAAZ,CAAiB7B,QAAjB,CAAJ,EAAgC;AAC9B,wBAAIkK,YAAY,GAAGxN,IAAI,CAACyN,MAAL,CAAY,UAAAzM,GAAG;AAAA,6BAAIA,GAAG,CAAC6K,gBAAD,CAAH,KAA0BvI,QAA9B;AAAA,qBAAf,CAAnB;AACAkE,oBAAAA,IAAI,CAACkG,iBAAL,CAAuB5I,aAAvB,EAAsC0I,YAAtC;AACA,2BAAO,IAAP;AACD;AACF;AACF,eAXY,CAAb;;AAaA,kBAAI,CAACF,MAAL,EAAa;AACXhF,gBAAAA,OAAO,CAAC4D,GAAR,CAAY,oDAAZ,EAAkE5I,QAAlE,EAA4EtD,IAA5E;AACD;AACF;AACF;AAvCM;AAVO,OAAlB;AAqDA,UAAI4D,OAAO,GAAG,IAAIC,KAAJ,CAAUlE,MAAM,CAACgO,UAAP,CAAkB,IAAlB,CAAV,EAAmCd,WAAnC,CAAd;AACD;;;sCAEiB/H,a,EAAe0I,Y,EAAc;AAAA,UAC/BtN,gBAD+B,GACoB,IADpB,CACvCN,IADuC,CAC/BM,gBAD+B;AAAA,UACIG,SADJ,GACoB,IADpB,CACXuL,WADW,CACIvL,SADJ;AAAA,UAEvC0E,GAFuC,GAElBD,aAFkB,CAEvCC,GAFuC;AAAA,UAElCmB,WAFkC,GAElBpB,aAFkB,CAElCoB,WAFkC;AAG7CnB,MAAAA,GAAG,GAAGA,GAAG,CAACK,OAAJ,CACJ,sFADI,EAEJ,UAAUC,KAAV,EAAiBvF,IAAjB,EAAuBwF,IAAvB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6CC,SAA7C,EAAwD;AACtDH,QAAAA,IAAI,GAAGA,IAAI,IAAIA,IAAI,CAACF,OAAL,CAAa,QAAb,EAAuB,IAAvB,CAAf;AACAK,QAAAA,SAAS,GAAGA,SAAS,IAAIA,SAAS,CAACL,OAAV,CAAkB,QAAlB,EAA4B,IAA5B,CAAzB;;AACA,YAAIM,MAAM,GAAGnF,gBAAEwL,IAAF,CACXjM,IAAI,IAAI,KAAR,GACI0N,YAAY,CAACzM,GAAb,CAAiB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACd,gBAAgB,CAACoF,IAAD,CAAjB,CAAP;AAAA,SAApB,CADJ,GAEIjF,SAAS,CAACmB,MAAV,CACA,UAAC8E,MAAD,EAASE,QAAT,EAAsB;AACpB;AACA,cAAIC,SAAS,GAAGzH,gBAAG0H,OAAH,CAAWF,QAAQ,CAACG,OAAT,CAAiBxF,KAA5B,CAAhB;;AACA,cAAIyF,KAAK,GAAGJ,QAAQ,CAACK,UAAT,IAAuBJ,SAAS,CAAChE,MAAV,KAAqB,CAA5C,IAAiDgE,SAAS,CAAC,CAAD,CAAT,KAAiB,QAA9E;AACA,iBAAOD,QAAQ,CAAClB,IAAT,KAAkBA,IAAlB,GACHgB,MAAM,CAACQ,MAAP,CAAcF,KAAK,GAAG,CAACJ,QAAQ,CAACG,OAAT,CAAiBtE,IAAlB,CAAH,GAA6BoE,SAAhD,CADG,GAEHH,MAFJ;AAGD,SARD,EASA,EATA,CAHO,CAAb;;AAeA,eAAOZ,MAAM,CAACjD,MAAP,GAAgB,CAAhB,GACH4C,KADG,GAEHE,KAAK,GACHG,MAAM,CAACG,IAAP,CAAY,GAAZ,CADG,GAEHL,OAAO,GACLE,MAAM,CAAC3E,GAAP,CAAW,UAAA+E,CAAC;AAAA,iBAAIC,kBAAkB,CAACN,SAAS,IAAI/E,SAAb,GAAyB4E,IAAzB,GAAgCG,SAAjC,CAAlB,GAAgE,GAAhE,GAAsEM,kBAAkB,CAACD,CAAD,CAA5F;AAAA,SAAZ,EAA6GD,IAA7G,CAAkH,GAAlH,CADK,GAELE,kBAAkB,CAACL,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAD,CAN1B;AAOD,OA3BG,CAAN;AA6BAG,MAAAA,MAAM,CAACC,IAAP,CAAYlB,GAAZ,EAAiBD,aAAa,CAACoB,WAAd,GAA4B,QAA5B,GAAuC,OAAxD;AACD;;;yBAEI0H,K,EAAOR,I,EAAMS,K,EAAOrG,I,EAAM;AAAA;;AAC7B,WAAKyC,MAAL,CAAYC,EAAZ,CAAe,WAAf,EAA4B,UAAA3F,CAAC;AAAA,eAAI6C,SAAS,CAAC0G,IAAV,CAAe,MAAf,EAAqBvJ,CAArB,EAAwB6I,IAAxB,CAAJ;AAAA,OAA7B;AACA,WAAKnD,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB3J,gBAAEwN,QAAF,CAAW,UAAAxJ,CAAC;AAAA,eAAI6C,SAAS,CAAC0G,IAAV,CAAe,MAAf,EAAqBvJ,CAArB,EAAwB6I,IAAxB,CAAJ;AAAA,OAAZ,EAA+C,GAA/C,CAAzB;AACD;;;;EAxVmCY,qB,GA2VtC;;;;AACAnK,KAAK,CAACoK,OAAN,CAAcC,UAAd,CAAyBC,eAAzB;AAEAjF,gBAAgB,CAACkF,WAAjB,GAA+B,sBAA/B","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport config from 'app/core/config';\nimport {Color} from './external/CWest-Color.min';\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\nconst BAR_OPTIONS = Object.keys(JS.flattenKeys(BAR_DEFAULTS, true));\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'asc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  gap: 1,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\nconst FUNNEL_OPTIONS = Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true));\n\nconst OPTIONS_BY_TYPE = {\n  bar: BAR_OPTIONS,\n  funnel: FUNNEL_OPTIONS\n};\n\nfunction renderChart({canvas, data: { type: dataType, columns, rows, columnTexts, colIndexesByText }, panel: fullPanel, variables}) {\n  if (!columnTexts) {\n    throw new Error('No source data has been specified.');\n  }\n\n  if (dataType !== 'table') {\n    throw new Error('Data type must be \"table\".');\n  }\n\n  let panel = fullPanel.bar;\n\n  if (!_.has(colIndexesByText, panel.categoryColumnName)) {\n    throw new Error('Invalid category column.');\n  }\n  let categoryIndex = colIndexesByText[panel.categoryColumnName];\n\n  if (panel.seriesColumnName != undefined && !_.has(colIndexesByText, panel.seriesColumnName)) {\n    throw new Error('Invalid series column.');\n  }\n  let seriesIndex = panel.seriesColumnName != undefined\n    ? colIndexesByText[panel.seriesColumnName]\n    : -1;\n\n  if (panel.stackColumnName != undefined && !_.has(colIndexesByText, panel.stackColumnName)) {\n    throw new Error('Invalid stack column.');\n  }\n  let stackIndex = panel.stackColumnName != undefined\n    ? colIndexesByText[panel.stackColumnName]\n    : -1;\n\n  if (!_.has(colIndexesByText, panel.measureColumnName)) {\n    throw new Error('Invalid measure column.');\n  }\n  let measureIndex = colIndexesByText[panel.measureColumnName];\n\n  let colRows = rows.map(\n    row =>\n      row.reduceRight(\n        (colRow, value, index) =>\n          Object.assign(colRow, { [columnTexts[index]]: value }),\n        {}\n      )\n  );\n\n  let categories = [...new Set(rows.map(row => row[categoryIndex]))];\n  let { series, seriesStacks } = rows.reduce(\n    (carry, row) => {\n      let seriesName = row[seriesIndex];\n      if (!carry.series.includes(seriesName)) {\n        carry.series.push(seriesName);\n        carry.seriesStacks.push(row[stackIndex]);\n      }\n      return carry;\n    },\n    { series: [], seriesStacks: [] }\n  );\n\n  let oldColors = panel.seriesColors.slice();\n  let newColors = series.map((seriesName, index, series) => {\n    let oldIndex = oldColors.findIndex(c => c.text === seriesName);\n    return {\n      text: seriesName,\n      color: oldIndex < 0\n        ? Color.hsl(~~(360 * index / series.length), 1, 0.5) + ''\n        : oldColors[oldIndex].color\n    };\n  });\n  panel.seriesColors = newColors;\n\n  // Defined with barChartData.data is defined...\n  let measures = {};\n\n  let barChartData = {\n    labels: categories,\n    datasets: series.map((seriesName, seriesNameIndex) => ({\n      label: seriesName == undefined ? 'Series ' + (seriesNameIndex + 1) : seriesName,\n      backgroundColor: Color(newColors[seriesNameIndex].color).a(panel.dataBgColorAlpha).rgba(),\n      borderColor: Color(newColors[seriesNameIndex].color).a(panel.dataBorderColorAlpha).rgba(),\n      borderWidth: 1,\n      stack: panel.isStacked ? seriesStacks[seriesNameIndex] : seriesNameIndex,\n      data: categories.map(category => {\n        let sum = rows.reduce((sum, row) => {\n          let isMatch = row[categoryIndex] === category\n            && (seriesIndex < 0 || row[seriesIndex] === seriesName);\n          return sum + (isMatch ? +row[measureIndex] || 0 : 0);\n        }, 0);\n        return (measures[category] = measures[category] || {})[seriesName] = sum;\n      })\n    }))\n  };\n\n  let isLightTheme = config.theme.type === 'light';\n\n  let myChart = new Chart(canvas, {\n    type: panel.orientation === 'horizontal' ? 'horizontalBar': 'bar',\n    data: barChartData,\n    //plugins: [ChartDataLabels],\n    options: {\n      responsive: true,\n      legend: {\n        display: panel.legend.isShowing,\n        position: panel.legend.position,\n        fullWidth: panel.legend.isFullWidth,\n        reverse: panel.legend.isReverse,\n        labels: {\n          fontColor: isLightTheme ? '#333' : '#CCC'\n        }\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: panel.scales.xAxes.ticks.autoSkip,\n              minRotation: panel.scales.xAxes.ticks.minRotation,\n              maxRotation: panel.scales.xAxes.ticks.maxRotation,\n              fontColor: isLightTheme ? '#333' : '#CCC'\n            },\n            stacked: true,\n            gridLines: {\n              display: !!panel.scales.xAxes.gridLineOpacity,\n              color: isLightTheme ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: {\n              autoSkip: panel.scales.yAxes.ticks.autoSkip,\n              minRotation: panel.scales.yAxes.ticks.minRotation,\n              maxRotation: panel.scales.yAxes.ticks.maxRotation,\n              fontColor: isLightTheme ? '#333' : '#CCC'\n            },\n            stacked: true,\n            gridLines: {\n              display: !!panel.scales.yAxes.gridLineOpacity,\n              color: isLightTheme ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n            }\n          }\n        ]\n      },\n      onClick: function(e) {\n        let target = myChart.getElementAtEvent(e)[0],\n            model = target && target._model;\n        if (model) {\n          let category = model.label;\n          let series = model.datasetLabel;\n\n          panel.drilldownLinks.reduce(function (isDone, drilldownLink) {\n            // If a link has already been opened dont check the other links.\n            if (isDone) {\n              return isDone;\n            }\n\n            // Check this link to see if it matches...\n            let url = drilldownLink.url;\n            if (url) {\n              let rgxCategory = parseRegExp(drilldownLink.category);\n              let rgxSeries = parseRegExp(drilldownLink.series);\n              if (rgxCategory.test(category) && (series == undefined || rgxSeries.test(series))) {\n                url = url.replace(\n                  /\\${(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?}/g,\n                  function(match, type, name, isRaw, isParam, paramName) {\n                    let result = [...new Set(\n                      type == 'col'\n                        ? getColValuesFor(colIndexesByText[name], category, series, categoryIndex, seriesIndex, rows)\n                        : getVarValuesFor(name, variables)\n                    )];\n                    return result.length < 1\n                      ? match\n                      : isRaw\n                        ? result.join(',')\n                        : isParam\n                          ? result.map(v => encodeURIComponent(paramName == undefined ? name : paramName) + '=' + encodeURIComponent(v)).join('&')\n                          : encodeURIComponent(result.join(','));\n                  }\n                );\n                window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');\n                return true;\n              }\n            }\n          }, false);\n        }\n      }\n    }\n  });\n}\n\nfunction getColValuesFor(colIndex, category, series, catColIndex, seriesColIndex, rows) {\n  if (colIndex >= 0) {\n    return rows.reduce((values, row) => {\n      if (category === row[catColIndex] && (seriesColIndex < 0 || row[seriesColIndex] === series)) {\n        values.push(row[colIndex]);\n      }\n      return values;\n    }, []);\n  }\n  return [];\n}\n\nfunction getVarValuesFor(varName, variables) {\n  return variables.reduce(\n    (values, variable) => {\n      // At times current.value is a string and at times it is an array.\n      let varValues = JS.toArray(variable.current.value);\n      let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n      return variable.name === varName\n        ? values.concat(isAll ? [variable.current.text] : varValues)\n        : values;\n    },\n    []\n  );\n}\n\nfunction parseRegExp(strPattern) {\n  var parts = /^\\/(.+)\\/(\\w*)$/.exec(strPattern);\n  return parts ? new RegExp(parts[1], parts[2]) : new RegExp('^' + _.escapeRegExp(strPattern) + '$', 'i');\n}\n\nfunction renderNow(e, jElem) {\n  let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n  \n  if (data && data.rows && data.rows.length) {\n    if (data.type === 'table') {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        isValid = true;\n      }\n      catch(e) {\n        console.error('renderChart:', error = e);\n      }\n    }\n  }\n  if (!isValid) {\n    let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n    let elemMsg = JS.dom({ _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n      { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n    ]});\n    jContent.html('').append(elemMsg);\n  }\n}\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' }\n    ];\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n    }\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let seriesColors = panel[panel.chartType].seriesColors;\n    let count = seriesColors.length;\n    if (count) {\n      seriesColors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      let { type, columns, rows } = data;\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      let colIndexesByText = columnTexts.reduceRight(\n        (indexes, colText, index) =>\n          Object.assign(indexes, { [colText]: index }),\n        {}\n      );\n      this.data = { type, columns, rows, columnTexts, colIndexesByText };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...keys) {\n    return keys.every(key => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(key));\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  drawBarChart(canvas) {\n    renderChart({\n      canvas,\n      data: this.data,\n      panel: this.panel,\n      variables: this.templateSrv.variables\n    });\n  }\n\n  drawFunnelChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.funnel;\n\n    if (!_.has(colIndexesByText, panel.categoryColumnName)) {\n      throw new Error('Invalid category column.');\n    }\n    let categoryColIndex = colIndexesByText[panel.categoryColumnName];\n\n    if (!_.has(colIndexesByText, panel.measureColumnName)) {\n      throw new Error('Invalid measure column.');\n    }\n    let measureColIndex = colIndexesByText[panel.measureColumnName];\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let measures = rows.reduce((measures, row, rowIndex) => {\n      let measureIndex = categories.indexOf(row[categoryColIndex]);\n      measures[measureIndex] = (measures[measureIndex] || 0) + row[measureColIndex];\n      return measures;\n    }, []);\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, sortOrder } = panel;\n    console.log({ colorSource, seriesColors, colorColumnName, sortOrder });\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      let colorColIndex = colIndexesByText[colorColumnName];\n      baseColors = categories.map(category => Color(rows.find(row => row[categoryColIndex] === category)[colorColIndex]));\n    }\n    else if (colorSource === 'custom') {\n      baseColors = categories.map((category, index, categories) => {\n        return Color(seriesColors[index % seriesColors.length]);\n      });\n    }\n    else {\n      baseColors = categories.map((category, index, categories) => {\n        return Color.hsl(~~(360 * index / categories.length), 1, 0.5);\n      });\n    }\n\n    let isLightTheme = config.theme.type === 'light';\n\n    // Sort the measures and then the categories accordingly.\n    let altBaseColors;\n    measures = measures.map((value, index) => ({ index, value }));\n    measures.sort(sortOrder === 'desc' ? (a, b) => b.value - a.value : (a, b) => a.value - b.value);\n    [altBaseColors, categories, measures] = measures.reduce((carry, measure, index) => {\n      let [altBaseColors, newCategories, newMeasures] = carry;\n      altBaseColors.push(baseColors[measure.index]);\n      newCategories.push(categories[measure.index]);\n      newMeasures.push(measure.value);\n      return carry;\n    }, [[], [], []]);\n\n    // If using a column as the source of the colors make sure to order them according to the categories.\n    if (colorSource === 'column') {\n      baseColors = altBaseColors;\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.a(panel.dataBorderColorAlpha).rgba());\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      // plugins: [ChartDataLabels],\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        sort: panel.sortOrder,\n        elements: { borderWidth: 1 },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick (e) {\n          let elem = this.getElementAtEvent(e)[0];\n          if (elem) {\n            let category = categories[elem._index];\n            let isOpen = panel.drilldownLinks.some(drilldownLink => {\n              // Check this link to see if it matches...\n              let { url, category: rgxCategory } = drilldownLink;\n              if (url) {\n                rgxCategory = parseRegExp(rgxCategory);\n                if (rgxCategory.test(category)) {\n                  let matchingRows = rows.filter(row => row[categoryColIndex] === category);\n                  ctrl.openDrilldownLink(drilldownLink, matchingRows);\n                  return true;\n                }\n              }\n            });\n\n            if (!isOpen) {\n              console.log('No matching drilldown link was found for category:', category, rows);\n            }\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(\n      /\\${(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?}/g,\n      function (match, type, name, isRaw, isParam, paramName) {\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => renderNow.call(this, e, elem));\n    this.events.on('render', _.debounce(e => renderNow.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}