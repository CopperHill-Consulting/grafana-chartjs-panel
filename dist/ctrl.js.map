{"version":3,"sources":["../src/ctrl.js"],"names":["RGX_CELL_PLACEHOLDER","RGX_OLD_VAR_WORKAROUND","PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","borderWidth","colorBy","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","dataBorderBrightness","numberFormat","numberFormatDecimals","tooltip","isCustom","titleFormat","labelFormat","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","BAR_OPTIONS","Object","keys","JS","flattenKeys","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","startWidthPct","FUNNEL_OPTIONS","PIE_DEFAULTS","pieType","isSemiCircle","labelColumnName","labels","isBlackText","wrapAfter","PIE_OPTIONS","OPTIONS_BY_TYPE","bar","pie","funnel","ChartJsPanelCtrl","$scope","$injector","$rootScope","UNIT_FORMATS","GRID_LINE_OPACITIES","value","text","CHART_START_WIDTH_PERCENTAGES","CHART_BORDER_WIDTHS","CHART_GAP_SIZES","CHART_COLOR_BY","CHART_COLOR_SOURCES","CHART_TYPES","PIE_TYPES","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","_","range","map","x","BRIGHTNESSES","TICK_ROTATIONS","data","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","panel","defaultsDeep","forEach","key","has","strFormat","rowsByColName","series","category","measure","replace","match","isEscapedDollar","isSeries","isCategory","colName","colFnName","row","reduce","a","b","length","Set","size","sort","c","d","Array","from","join","toFixed","opt_index","colors","splice","renderNow","fromIndex","toIndex","getChartPanel","count","drilldownLink","url","openInBlank","isActiveOption","push","links","indexOf","path","addEditorTab","dataList","type","columns","rows","columnTexts","col","colIndexesByText","reduceRight","indexes","colText","index","assign","cells","rowIndex","carry","cellValue","cellIndex","obj","newValue","emit","paths","every","includes","set","name","opt_isOptional","isRequired","undefined","Error","e","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","canvas","prop","width","height","drawBarChart","drawFunnelChart","drawPieChart","console","msg","message","elemMsg","dom","style","display","alignItems","textAlign","$","cls","margin","append","fullPanel","categoryColIndex","getColIndex","seriesColIndex","measureColIndex","labelColIndex","colorColIndex","ignoreSeries","categories","uniq","reverse","categoryCount","seriesCount","measureCount","categoryIndex","seriesName","seriesIndex","measures","baseColors","seriesColorCount","isLightTheme","config","theme","colorIndex","colorCount","Color","hsl","Math","round","testChartEvent","callback","elem","getElementAtEvent","isOpen","_index","some","drilldownLinkIndex","rgxCategory","test","filter","bgColors","color","rgba","borderColors","l","datasets","label","measureIndex","borderColor","backgroundColor","datalabels","anchor","rgb","borderRadius","formatter","dataIndex","datasetIndex","result","chartConfig","responsive","i","options","circumference","PI","rotation","elements","tooltips","callbacks","title","tooltipItem","fullWidth","fontColor","animation","animateScale","animateRotate","onClick","call","matchingRows","openDrilldownLink","hover","onHover","target","cursor","plugins","ChartDataLabels","ctx","getContext","Chart","PolarArea","stackColIndex","seriesStacks","rowCount","catName","catIndex","model","_model","datasetLabel","rgxSeries","seriesNameIndex","stack","filteredRows","sum","isMatch","mode","dataset","formatTooltipText","strValue","userCallback","values","stacked","gridLines","myChart","altBaseColors","newCategories","newMeasures","startWidthPercent","keep","variables","templateSrv","timeVars","timeSrv","time","isTime","opt_timePart","isRaw","isParam","paramName","encodeURIComponent","to","variable","varValues","toArray","current","isAll","includeAll","concat","v","window","open","apply","arguments","scope","attrs","drawChart","debounce","MetricsPanelCtrl","unregister","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormat, getValueFormats } from '@grafana/ui';\nimport config from 'app/core/config';\nimport _ from 'lodash';\n\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport { Color } from './external/CWest-Color.min';\n\nimport { parseRegExp, wrapText } from './helper-functions';\n\nconst RGX_CELL_PLACEHOLDER = /\\$\\{(time)(?:-(to|from))?\\}|\\$\\{(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?\\}/g;\nconst RGX_OLD_VAR_WORKAROUND = /([\\?&])var-(\\$\\{var:(?:[^\\}:\\\\]*|\\\\.)+:param\\})/g;\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'series',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  dataBorderBrightness: 0.5,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  tooltip: {\n    isCustom: false,\n    titleFormat:  null,\n    labelFormat: null\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\nconst BAR_OPTIONS = Object.keys(JS.flattenKeys(BAR_DEFAULTS, true));\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'desc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  dataBorderBrightness: 0.5,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  gap: 1,\n  startWidthPct: 0.5,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\nconst FUNNEL_OPTIONS = Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true));\n\nconst PIE_DEFAULTS = {\n  pieType: 'pie',\n  isSemiCircle: false,\n  categoryColumnName: null,\n  seriesColumnName: null,\n  measureColumnName: null,\n  labelColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'both',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderBrightness: 0.5,\n  dataBorderColorAlpha: 1,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  labels: {\n    isShowing: true,\n    isBlackText: false,\n    wrapAfter: 25\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\nconst PIE_OPTIONS = Object.keys(JS.flattenKeys(PIE_DEFAULTS, true));\n\nconst OPTIONS_BY_TYPE = {\n  bar: BAR_OPTIONS,\n  pie: PIE_OPTIONS,\n  funnel: FUNNEL_OPTIONS\n};\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    \n    this.UNIT_FORMATS = getValueFormats();\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_START_WIDTH_PERCENTAGES = [\n      { value: 0, text: '0% (Point)' },\n      { value: 0.25, text: '25%' },\n      { value: 0.5, text: '50% (Half)' },\n      { value: 0.75, text: '75%' },\n      { value: 1, text: '100% (Full)' }\n    ];\n    this.CHART_BORDER_WIDTHS = [\n      { value: 0, text: '0px (NO BORDER)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' }\n    ];\n    this.CHART_GAP_SIZES = [\n      { value: 0, text: '0px (NO GAP)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' },\n      { value: 4, text: '4px' },\n      { value: 5, text: '5px' }\n    ];\n    this.CHART_COLOR_BY = [\n      { value: 'series', text: 'Series' },\n      { value: 'category', text: 'Category' },\n      { value: 'both', text: 'Series & Category' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' },\n      { value: 'pie', text: 'Pie' }\n    ];\n    this.PIE_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'pie', text: 'Default' },\n      { value: 'polar', text: 'Polar' },\n      { value: 'doughnut', text: 'Doughnut' }\n    ];\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.BRIGHTNESSES = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (White)' : '' : ' (Black)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n\n      case 'pie':\n        _.defaultsDeep(panel.pie = panel.pie || {}, PIE_DEFAULTS);\n        break;\n    }\n  }\n\n  formatTooltipText(strFormat, rowsByColName, series, category, measure) {\n    return strFormat.replace(\n      /(\\\\\\$)|\\$\\{(?:(series)|(category)|measure|col:((?:[^\\\\\\}:]+|\\\\.)+)(?::([\\-\\w]+))?)\\}/g,\n      function (match, isEscapedDollar, isSeries, isCategory, colName, colFnName) {\n        if (isEscapedDollar) {\n          match = '$';\n        }\n        else if (colName) {\n          colName = colName.replace(/\\\\(.)/g, '$1');\n          if (_.has(rowsByColName[0], colName)) {\n            match = rowsByColName.map(row => row[colName]);\n            match = colFnName === 'sum'\n              ? match.reduce((a, b) => a + b)\n              : colFnName === 'avg'\n                ? match.reduce((a, b) => a + b) / match.length\n                : colFnName === 'max'\n                  ? match.reduce((a, b) => a > b ? a : b)\n                  : colFnName === 'min'\n                    ? match.reduce((a, b) => a < b ? a : b)\n                    : colFnName === 'first'\n                      ? match[0]\n                      : colFnName === 'last'\n                        ? match[match.length - 1]\n                        : colFnName === 'count'\n                          ? match.length\n                          : colFnName === 'unique-count'\n                            ? new Set(match).size\n                            : colFnName === 'list'\n                              ? match.sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                              : colFnName === 'unique-list'\n                                ? Array.from(new Set(match)).sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                                : match.join(',');\n          }\n        }\n        else {\n          match = isSeries ? series : isCategory ? category : measure;\n        }\n        return 'number' === typeof match\n          ? +match.toFixed(5)\n          : match;\n      }\n    )\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  moveSeriesColor(fromIndex, toIndex) {\n    let colors = this.getChartPanel().seriesColors;\n    colors.splice(toIndex, 0, colors.splice(fromIndex, 1)[0]);\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    let count = colors.length;\n    if (count) {\n      colors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      let { type, columns, rows } = data;\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      let colIndexesByText = columnTexts.reduceRight(\n        (indexes, colText, index) =>\n          Object.assign(indexes, { [colText]: index }),\n        {}\n      );\n      let rowsByColName = rows.map(\n        (cells, rowIndex) =>\n          cells.reduce(\n            (carry, cellValue, cellIndex) => Object.assign(carry, { [columnTexts[cellIndex]]: cellValue }),\n            {}\n          )\n      );\n      this.data = { type, columns, rows, columnTexts, colIndexesByText, rowsByColName };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...paths) {\n    return paths.every(path => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(path));\n  }\n\n  setActiveOption(path, value) {\n    let panel = this.getChartPanel();\n    if (_.has(panel, path)) {\n      _.set(panel, path, value);\n      this.renderNow();\n    }\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  getColIndex(name, panel, opt_isOptional) {\n    let { colIndexesByText } = this.data;\n    let key = name + 'ColumnName';\n    let isRequired = !opt_isOptional || panel[key] != undefined;\n    if (isRequired && !_.has(colIndexesByText, panel[key])) {\n      throw new Error(`Invalid ${name} column.`);\n    }\n    return isRequired ? colIndexesByText[panel[key]] : -1;\n  }\n\n  drawChart(e, jElem) {\n    let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n\n    if (data && data.rows && data.rows.length) {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if (!data.columnTexts) {\n          throw new Error('No source data has been specified.');\n        }\n\n        if (data.type !== 'table') {\n          throw new Error('Data type must be \"table\".');\n        }\n\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        else if ('pie' === chartType) {\n          ctrl.drawPieChart(canvas);\n        }\n        isValid = true;\n      }\n      catch (e) {\n        console.error('drawChart:', error = e);\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n    }\n  }\n\n  drawPieChart(canvas) {\n    let ctrl = this;\n    let { data } = ctrl;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.pie;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = panel.pieType === 'polar' ? -1 : ctrl.getColIndex('series', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let labelColIndex = ctrl.getColIndex('label', panel, true);\n    let colorColIndex = ctrl.getColIndex('color', panel, true);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex])).reverse();\n    let series = _.uniq(rows.map(row => row[seriesColIndex])).reverse();\n    let categoryCount = categories.length;\n    let seriesCount = series.length;\n    let measureCount = categoryCount * seriesCount;\n    let { measures, labels, colors } = rows.reduce((carry, row, rowIndex) => {\n      let category = row[categoryColIndex];\n      let categoryIndex = categories.indexOf(category);\n      let seriesName = row[seriesColIndex];\n      let seriesIndex = series.indexOf(seriesName);\n      let index = categoryIndex + seriesIndex * categoryCount;\n      carry.measures[index] = (carry.measures[index] || 0) + row[measureColIndex];\n      carry.labels[index] = carry.labels[index] || row[labelColIndex];\n      carry.colors[index] = carry.colors[index] || row[colorColIndex];\n      return carry;\n    }, { measures: [], labels: [], colors: [] });\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, colorBy, sortOrder } = panel;\n    let seriesColorCount = seriesColors.length;\n    let isLightTheme = config.theme.type === 'light';\n\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      baseColors = colors.map(x => Color(x));\n    }\n    else {\n      baseColors = [];\n      if (colorSource === 'custom') {\n        if (!seriesColorCount) {\n          throw new Error('No base colors have been added.');\n        }\n        seriesColors = seriesColors.map(x => Color(x));\n        series.forEach(function(seriesName, seriesIndex) {\n          categories.forEach(function(category, categoryIndex) {\n            let index = categoryIndex + seriesIndex * categoryCount;\n            let colorIndex = colorBy === 'series' ? seriesIndex : colorBy === 'both' ? index : categoryIndex;\n            baseColors[index] = seriesColors[colorIndex % seriesColorCount];\n          });\n        });\n      }\n      else {\n        series.forEach(function(seriesName, seriesIndex) {\n          categories.forEach(function(category, categoryIndex) {\n            let index = categoryIndex + seriesIndex * categoryCount;\n            let colorIndex = colorBy === 'series' ? seriesIndex : colorBy === 'both' ? index : categoryIndex;\n            let colorCount = colorBy === 'series' ? seriesCount : colorBy === 'both' ? measureCount : categoryCount;\n            baseColors[index] = Color.hsl(Math.round(360 * colorIndex / colorCount), 1, 0.5);\n          });\n        });\n      }\n    }\n\n    function testChartEvent(e, callback) {\n      let elem = this.getElementAtEvent(e)[0];\n      let isOpen;\n      if (elem) {\n        let category = categories[elem._index];\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            if (rgxCategory.test(category)) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category)\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.l(panel.dataBorderBrightness).a(panel.dataBorderColorAlpha).rgba());\n\n    let datasets = series.map((seriesName, seriesIndex) => ({\n      label: categories,\n      data: measures.filter((measure, measureIndex) => ~~(measureIndex / categoryCount) === seriesIndex),\n      borderWidth: panel.borderWidth,\n      borderColor: borderColors.filter((measure, measureIndex) => ~~(measureIndex / categoryCount) === seriesIndex),\n      backgroundColor: bgColors.filter((measure, measureIndex) => ~~(measureIndex / categoryCount) === seriesIndex),\n      datalabels: {\n        anchor: 'center',\n        display: 'auto',\n        backgroundColor: Color(panel.labels.isBlackText ? 'white' : 'black').a(0.75).rgba(),\n        color: Color(panel.labels.isBlackText ? 'black' : 'white').rgb(),\n        borderRadius: 5,\n        formatter(value, { dataIndex, datasetIndex }) {\n          let result = labels[dataIndex + datasetIndex * categoryCount];\n          if (labelColIndex < 0) {\n            let { numberFormat, numberFormatDecimals } = panel;\n            result = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n              ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n              : value;\n          }\n          return wrapText(`${result}`, panel.labels.wrapAfter);\n        },\n        textAlign: 'center'\n      }\n    }));\n\n    let chartConfig = {\n      responsive: true,\n      data: {\n        datasets,\n        labels: 'string' === typeof datasets[0].label\n          ? datasets[0].data.map((x, i) => `${datasets[0].label} #${i + 1}`)\n          : datasets[0].label\n      },\n      options: {\n        circumference: (panel.isSemiCircle ? 1 : 2) * Math.PI,\n        rotation: -Math.PI / (panel.isSemiCircle ? 1 : 2),\n        elements: { borderWidth: panel.borderWidth },\n        tooltips: {\n          callbacks: {\n            title: function ([tooltipItem], data) {\n              return series[tooltipItem.datasetIndex];\n            },\n            label: function (tooltipItem, data) {\n              let { numberFormat, numberFormatDecimals } = panel;\n              let label = data.datasets[tooltipItem.datasetIndex].label[tooltipItem.index];\n              let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n              value = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                : value;\n              return label + ': ' + value;\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    if (panel.labels.isShowing) {\n      chartConfig.plugins = [ChartDataLabels];\n    }\n\n    let ctx = canvas.getContext('2d');\n    if (panel.pieType === 'polar') {\n      Chart.PolarArea(ctx, chartConfig);\n    }\n    else {\n      chartConfig.type = panel.pieType === 'doughnut' ? 'doughnut' : 'pie';\n      new Chart(ctx, chartConfig);\n    }\n  }\n\n  drawBarChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, rowsByColName, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.bar;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = ctrl.getColIndex('series', panel, true);\n    let stackColIndex = ctrl.getColIndex('stack', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let { series, seriesStacks } = rows.reduce(\n      (carry, row) => {\n        let seriesName = row[seriesColIndex];\n        if (!carry.series.includes(seriesName)) {\n          carry.series.push(seriesName);\n          carry.seriesStacks.push(row[stackColIndex]);\n        }\n        return carry;\n      },\n      { series: [], seriesStacks: [] }\n    );\n\n    series = series.map(name => name === undefined ? 'Series' : name);\n    seriesStacks = seriesStacks.map(name => name === undefined ? 'Stack' : name);\n\n    // If legacy bar chart colors exist convert them to new color setup\n    if (_.has(panel, ['seriesColors', 0, 'text'])) {\n      panel.seriesColors = panel.seriesColors.map(color => color.color);\n      panel.colorSource = 'custom';\n    }\n\n    let { colorSource, seriesColors, colorColumnName, colorBy } = panel;\n\n    let colorColIndex;\n    if (colorSource === 'column') {\n       colorColIndex = ctrl.getColIndex('color', panel);\n    }\n\n    let rowCount = rows.length;\n    \n    let colorCount = colorBy === 'category'\n      ? categories.length\n      : colorBy === 'both'\n        ? categories.length * series.length\n        : series.length;\n    let baseColors = series.map((seriesName, seriesIndex) => {\n      return categories.map((catName, catIndex) => {\n        if (colorSource === 'column' && colorColIndex >= 0) { // column\n          for (let row, rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n            row = rows[rowIndex];\n            if ((seriesColIndex < 0 || row[seriesColIndex] === seriesName) && row[categoryColIndex] === catName) {\n              return Color(row[colorColIndex]);\n            }\n          }\n        }\n        else {\n          let index = colorBy === 'category'\n            ? catIndex\n            : colorBy === 'both'\n              ? catIndex + categories.length * seriesIndex\n              : seriesIndex;\n          if (colorSource === 'custom') { // user-defined\n            return Color(seriesColors[index % seriesColors.length]);\n          }\n          else { // rainbow (default)\n            return Color.hsl(~~(360 * index / colorCount), 1, 0.5);\n          }\n        }\n      });\n    });\n\n    function testChartEvent(e, callback) {\n      let target = this.getElementAtEvent(e)[0];\n      let model = target && target._model;\n      let isOpen;\n      if (model) {\n        let category = model.label;\n        let seriesName = model.datasetLabel;\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory, series: rgxSeries } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            rgxSeries = !ignoreSeries && parseRegExp(rgxSeries);\n            if (rgxCategory.test(category) && (ignoreSeries || rgxSeries.test(seriesName))) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category && (ignoreSeries || row[seriesColIndex] === seriesName))\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n    \n    let isLightTheme = config.theme.type === 'light';\n    \n    let measures = {};\n    let chartConfig = {\n      type: panel.orientation === 'horizontal' ? 'horizontalBar' : 'bar',\n      data: {\n        labels: categories,\n        datasets: series.map((seriesName, seriesNameIndex) => ({\n          label: seriesName,\n          backgroundColor: baseColors[seriesNameIndex].map(color => color.a(panel.dataBgColorAlpha).rgba()),\n          borderColor: baseColors[seriesNameIndex].map(color => color.l(panel.dataBorderBrightness).a(panel.dataBorderColorAlpha).rgba()),\n          borderWidth: panel.borderWidth,\n          stack: panel.isStacked ? seriesStacks[seriesNameIndex] : seriesNameIndex,\n          filteredRows: categories.map(category => {\n            return rows.reduce(\n              (carry, row, rowIndex) => {\n                if (row[categoryColIndex] === category && (seriesColIndex < 0 || row[seriesColIndex] === seriesName)) {\n                  carry.push(rowsByColName[rowIndex]);\n                }\n                return carry;\n              },\n              []\n            );\n          }),\n          data: categories.map(category => {\n            let sum = rows.reduce((sum, row) => {\n              let isMatch = row[categoryColIndex] === category\n                && (seriesColIndex < 0 || row[seriesColIndex] === seriesName);\n              return sum + (isMatch ? +row[measureColIndex] || 0 : 0);\n            }, 0);\n            return (measures[category] = measures[category] || {})[seriesName] = sum;\n          })\n        }))\n      },\n      //plugins: [ChartDataLabels],\n      options: {\n        responsive: true,\n        tooltips: {\n          mode: 'point',\n          callbacks: {\n            title: function ([tooltipItem], data) {\n              if (!ignoreSeries) {\n                let { datasets, labels } = data;\n                let dataset = datasets[tooltipItem.datasetIndex];\n                let catName = labels[tooltipItem.index];\n                let seriesName = dataset.label;\n                let value = tooltipItem[panel.orientation === 'horizontal' ? 'xLabel' : 'yLabel'];\n                let filteredRows = dataset.filteredRows[tooltipItem.index];\n                let { isCustom, titleFormat } = panel.tooltip;\n\n                return (isCustom)\n                  ? titleFormat\n                    ? ctrl.formatTooltipText(titleFormat, filteredRows, seriesName, catName, value)\n                    : null\n                  : tooltipItem[panel.orientation === 'horizontal' ? 'yLabel' : 'xLabel'];\n              }\n            },\n            label: function (tooltipItem, data) {\n              let { datasets, labels } = data;\n              let dataset = datasets[tooltipItem.datasetIndex];\n              let catName = labels[tooltipItem.index];\n              let seriesName = dataset.label;\n              let { numberFormat, numberFormatDecimals } = panel;\n              let { isCustom, labelFormat } = panel.tooltip;\n              let label = ignoreSeries\n                ? tooltipItem[panel.orientation === 'horizontal' ? 'yLabel' : 'xLabel']\n                : seriesName;\n              let value = tooltipItem[panel.orientation === 'horizontal' ? 'xLabel' : 'yLabel'];\n              let strValue = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                  ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                  : value;\n              let filteredRows = dataset.filteredRows[tooltipItem.index];\n              \n              return (isCustom && labelFormat)\n                ? ctrl.formatTooltipText(labelFormat, filteredRows, seriesName, catName, value)\n                : (label + ': ' + strValue);\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.xAxes.ticks.autoSkip,\n                minRotation: panel.scales.xAxes.ticks.minRotation,\n                maxRotation: panel.scales.xAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.xAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.yAxes.ticks.autoSkip,\n                minRotation: panel.scales.yAxes.ticks.minRotation,\n                maxRotation: panel.scales.yAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.yAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n              }\n            }\n          ]\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  drawFunnelChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.funnel;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let measures = rows.reduce((measures, row, rowIndex) => {\n      let measureIndex = categories.indexOf(row[categoryColIndex]);\n      measures[measureIndex] = (measures[measureIndex] || 0) + row[measureColIndex];\n      return measures;\n    }, []);\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, sortOrder } = panel;\n    let isLightTheme = config.theme.type === 'light';\n\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      baseColors = categories.map(category => Color(rows.find(row => row[categoryColIndex] === category)[colIndexesByText[colorColumnName]]));\n    }\n    else if (colorSource === 'custom') {\n      baseColors = categories.map((category, index, categories) => {\n        return Color(seriesColors[index % seriesColors.length]);\n      });\n    }\n    else {\n      baseColors = categories.map((category, index, categories) => {\n        return Color.hsl(~~(360 * index / categories.length), 1, 0.5);\n      });\n    }\n\n    // Sort the measures and then the categories accordingly.\n    let altBaseColors;\n    measures = measures.map((value, index) => ({ index, value }));\n    measures.sort(sortOrder === 'desc' ? (a, b) => b.value - a.value : (a, b) => a.value - b.value);\n    [altBaseColors, categories, measures] = measures.reduce((carry, measure, index) => {\n      let [altBaseColors, newCategories, newMeasures] = carry;\n      altBaseColors.push(baseColors[measure.index]);\n      newCategories.push(categories[measure.index]);\n      newMeasures.push(measure.value);\n      return carry;\n    }, [[], [], []]);\n\n    // If using a column as the source of the colors make sure to order them according to the categories.\n    if (colorSource === 'column') {\n      baseColors = altBaseColors;\n    }\n\n    function testChartEvent(e, callback) {\n      let elem = this.getElementAtEvent(e)[0];\n      let isOpen;\n      if (elem) {\n        let category = categories[elem._index];\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            if (rgxCategory.test(category)) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category)\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.l(panel.dataBorderBrightness).a(panel.dataBorderColorAlpha).rgba());\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      // plugins: [ChartDataLabels],\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        startWidthPercent: panel.startWidthPct,\n        sort: panel.sortOrder,\n        elements: { borderWidth: panel.borderWidth },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              let { numberFormat, numberFormatDecimals } = panel;\n              let label = data.datasets[tooltipItem.datasetIndex].label[tooltipItem.index];\n              let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n              value = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                : value;\n              return label + ': ' + value;\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables }, timeSrv: { time: timeVars } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(RGX_OLD_VAR_WORKAROUND, '$1$2').replace(\n      RGX_CELL_PLACEHOLDER,\n      function (match, isTime, opt_timePart, type, name, isRaw, isParam, paramName) {\n        if (isTime) {\n          return (opt_timePart != 'to' ? 'from=' + encodeURIComponent(timeVars.from) : '')\n            + (opt_timePart ? '' : '&')\n            + (opt_timePart != 'from' ? 'to=' + encodeURIComponent(timeVars.to) : '');\n        }\n\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? type === 'var' ? `var-${name}` : name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  getRange() {\n    return _.range.apply(this, arguments);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => this.drawChart.call(this, e, elem));\n    this.events.on('render', _.debounce(e => this.drawChart.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}