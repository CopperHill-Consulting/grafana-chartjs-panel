{"version":3,"sources":["../src/ctrl.js"],"names":["IS_LIGHT_THEME","config","theme","type","RGX_CELL_PLACEHOLDER","RGX_OLD_VAR_WORKAROUND","COUNT_TYPE_MAP","sum","_","avg","mean","min","max","count","arr","length","first","last","PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","borderWidth","colorBy","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","dataBorderBrightness","countType","numberFormat","numberFormatDecimals","tooltip","isCustom","titleFormat","labelFormat","labels","isShowing","format","isBlackText","wrapAfter","legend","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","startWidthPct","PIE_DEFAULTS","pieType","isSemiCircle","labelColumnName","OPTIONS_BY_TYPE","bar","Object","keys","JS","flattenKeys","pie","funnel","ChartJsPanelCtrl","$scope","$injector","$rootScope","UNIT_FORMATS","GRID_LINE_OPACITIES","value","text","CHART_START_WIDTH_PERCENTAGES","CHART_BORDER_WIDTHS","CHART_GAP_SIZES","CHART_COLOR_BY","CHART_COLOR_SOURCES","CHART_LABEL_SOURCES","CHART_TYPES","PIE_TYPES","COUNT_TYPES","concat","map","t","titleCase","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","range","x","BRIGHTNESSES","TICK_ROTATIONS","data","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","panel","defaultsDeep","forEach","key","has","opt_index","colors","splice","renderNow","fromIndex","toIndex","getChartPanel","drilldownLink","url","openInBlank","isActiveOption","category","series","push","links","indexOf","path","addEditorTab","dataList","columns","rows","columnTexts","col","row","assign","byColName","reduce","carry","cellValue","cellIndex","colIndexesByText","reduceRight","indexes","colText","index","obj","newValue","emit","paths","every","includes","set","name","opt_isOptional","isRequired","undefined","Error","e","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","canvas","prop","width","height","drawBarChart","drawFunnelChart","drawPieChart","console","msg","message","elemMsg","dom","style","display","alignItems","textAlign","$","cls","margin","append","fullPanel","labelOptions","categoryColIndex","getColIndex","seriesColIndex","measureColIndex","labelColIndex","colorColIndex","stackColIndex","ignoreSeries","categories","uniq","reverse","categoryCount","seriesCount","measureCount","rowIndex","seriesIndex","measureIndex","measures","rowGroups","seriesStacks","countMeasures","i","sortMap","v","sort","a","b","remap","baseColors","seriesColorCount","seriesName","categoryIndex","colorIndex","colorCount","Color","hsl","Math","round","bgColors","color","rgba","borderColors","l","formatLabelText","strFormat","measure","replace","match","isEscapedDollar","isSeries","isCategory","colName","colFnName","Set","size","c","d","Array","from","join","toFixed","getLabelFormatter","defaultFormat","labelType","toLowerCase","isForChart","isForTooltip","tooltipItems","arguments","isForTitle","isArray","datasetIndex","labelItem","dataIndex","strMeasure","strResult","toUpperCase","formatLabel","tooltipCallbacks","title","label","testChartEvent","callback","elem","getElementAtEvent","isOpen","_datasetIndex","_index","some","drilldownLinkIndex","rgxCategory","rgxSeries","test","getChartOptions","datasets","fnFilter","filter","borderColor","backgroundColor","datalabels","anchor","rgb","borderRadius","formatter","chartConfig","responsive","options","circumference","PI","rotation","elements","tooltips","callbacks","fullWidth","fontColor","animation","animateScale","animateRotate","onClick","call","matchingRows","openDrilldownLink","hover","onHover","target","cursor","plugins","ChartDataLabels","ctx","getContext","Chart","PolarArea","stack","mode","userCallback","values","stacked","gridLines","myChart","dataset","startWidthPercent","keep","variables","templateSrv","timeVars","timeSrv","time","isTime","opt_timePart","isRaw","isParam","paramName","encodeURIComponent","to","result","variable","varValues","toArray","current","isAll","includeAll","window","open","apply","scope","attrs","drawChart","debounce","MetricsPanelCtrl","unregister","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormat, getValueFormats } from '@grafana/ui';\nimport config from 'app/core/config';\nimport _ from 'lodash';\n\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport { Color } from './external/CWest-Color.min';\n\nimport { parseRegExp, wrapText } from './helper-functions';\n\nconst IS_LIGHT_THEME = config.theme.type === 'light'\n\nconst RGX_CELL_PLACEHOLDER = /\\$\\{(time)(?:-(to|from))?\\}|\\$\\{(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?\\}/g;\nconst RGX_OLD_VAR_WORKAROUND = /([\\?&])var-(\\$\\{var:(?:[^\\}:\\\\]*|\\\\.)+:param\\})/g;\n\nconst COUNT_TYPE_MAP = {\n  sum: _.sum,\n  avg: _.mean,\n  min: _.min,\n  max: _.max,\n  count: arr => arr.length,\n  first: arr => arr[0],\n  last: arr => arr[arr.length - 1],\n};\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'series',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  dataBorderBrightness: 0.5,\n  countType: 'sum',\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  tooltip: {\n    isCustom: false,\n    titleFormat:  null,\n    labelFormat: null\n  },\n  labels: {\n    isShowing: false,\n    format: '${measure}',\n    isBlackText: IS_LIGHT_THEME,\n    wrapAfter: 25\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'desc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  dataBorderBrightness: 0.5,\n  countType: 'sum',\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  tooltip: {\n    isCustom: false,\n    titleFormat:  null,\n    labelFormat: null\n  },\n  // labels: {\n  //   isShowing: false,\n  //   format: '${measure}',\n  //   isBlackText: IS_LIGHT_THEME,\n  //   wrapAfter: 25\n  // },\n  gap: 1,\n  startWidthPct: 0.5,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\n\nconst PIE_DEFAULTS = {\n  pieType: 'pie',\n  isSemiCircle: false,\n  categoryColumnName: null,\n  seriesColumnName: null,\n  measureColumnName: null,\n  labelColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'both',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderBrightness: 0.5,\n  dataBorderColorAlpha: 1,\n  countType: 'sum',\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  tooltip: {\n    isCustom: false,\n    titleFormat:  null,\n    labelFormat: null\n  },\n  labels: {\n    isShowing: false,\n    format: '${measure}',\n    isBlackText: IS_LIGHT_THEME,\n    wrapAfter: 25\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\n\nconst OPTIONS_BY_TYPE = {\n  bar: Object.keys(JS.flattenKeys(BAR_DEFAULTS, true)),\n  pie: Object.keys(JS.flattenKeys(PIE_DEFAULTS, true)),\n  funnel: Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true))\n};\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    \n    this.UNIT_FORMATS = getValueFormats();\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_START_WIDTH_PERCENTAGES = [\n      { value: 0, text: '0% (Point)' },\n      { value: 0.25, text: '25%' },\n      { value: 0.5, text: '50% (Half)' },\n      { value: 0.75, text: '75%' },\n      { value: 1, text: '100% (Full)' }\n    ];\n    this.CHART_BORDER_WIDTHS = [\n      { value: 0, text: '0px (NO BORDER)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' }\n    ];\n    this.CHART_GAP_SIZES = [\n      { value: 0, text: '0px (NO GAP)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' },\n      { value: 4, text: '4px' },\n      { value: 5, text: '5px' }\n    ];\n    this.CHART_COLOR_BY = [\n      { value: 'series', text: 'Series' },\n      { value: 'category', text: 'Category' },\n      { value: 'both', text: 'Series & Category' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_LABEL_SOURCES = [\n      { value: null, text: 'None' },\n      { value: 'column', text: 'Column' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' },\n      { value: 'pie', text: 'Pie' }\n    ];\n    this.PIE_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'pie', text: 'Default' },\n      { value: 'polar', text: 'Polar' },\n      { value: 'doughnut', text: 'Doughnut' }\n    ];\n    this.COUNT_TYPES = [{ value: null, text: '--- PICK ONE ---' }].concat(\n      Object.keys(COUNT_TYPE_MAP).map(t => ({ value: t, text: JS.titleCase(t) }))\n    );\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.BRIGHTNESSES = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (White)' : '' : ' (Black)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n\n      case 'pie':\n        _.defaultsDeep(panel.pie = panel.pie || {}, PIE_DEFAULTS);\n        break;\n    }\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  moveSeriesColor(fromIndex, toIndex) {\n    let colors = this.getChartPanel().seriesColors;\n    colors.splice(toIndex, 0, colors.splice(fromIndex, 1)[0]);\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    let count = colors.length;\n    if (count) {\n      colors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let { type, columns, rows } = dataList[0];\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      rows.map(\n        row => Object.assign(row, {\n          byColName: row.reduce(\n            (carry, cellValue, cellIndex) => Object.assign(carry, { [columnTexts[cellIndex]]: cellValue }),\n            {}\n          )\n        })\n      );\n      this.data = {\n        type,\n        columns,\n        rows,\n        columnTexts,\n        colIndexesByText: columnTexts.reduceRight(\n          (indexes, colText, index) =>\n            Object.assign(indexes, { [colText]: index }),\n          {}\n        )\n      };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...paths) {\n    return paths.every(path => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(path));\n  }\n\n  setActiveOption(path, value) {\n    let panel = this.getChartPanel();\n    if (_.has(panel, path)) {\n      _.set(panel, path, value);\n      this.renderNow();\n    }\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  getColIndex(name, panel, opt_isOptional) {\n    let { colIndexesByText } = this.data;\n    let key = name + 'ColumnName';\n    let isRequired = !opt_isOptional || panel[key] != undefined;\n    if (isRequired && !_.has(colIndexesByText, panel[key])) {\n      throw new Error(`Invalid ${name} column.`);\n    }\n    return isRequired ? colIndexesByText[panel[key]] : -1;\n  }\n\n  drawChart(e, jElem) {\n    let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n\n    if (data && data.rows && data.rows.length) {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if (!data.columnTexts) {\n          throw new Error('No source data has been specified.');\n        }\n\n        if (data.type !== 'table') {\n          throw new Error('Data type must be \"table\".');\n        }\n\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        else if ('pie' === chartType) {\n          ctrl.drawPieChart(canvas);\n        }\n        isValid = true;\n      }\n      catch (e) {\n        console.error('drawChart:', error = e);\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n    }\n  }\n\n  getChartOptions(chartType) {\n    let ctrl = this;\n    let { data } = ctrl;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel[chartType];\n    let { colorSource, seriesColors, colorColumnName, colorBy, sortOrder, countType, labels: labelOptions } = panel;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = panel.pieType === 'polar' ? -1 : ctrl.getColIndex('series', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let labelColIndex = ctrl.getColIndex('label', panel, true);\n    let colorColIndex = colorSource === 'column' ? ctrl.getColIndex('color', panel, true) : -1;\n    let stackColIndex = ctrl.getColIndex('stack', panel, true);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let series = _.uniq(rows.map(row => row[seriesColIndex]));\n    if (chartType === 'pie') {\n      categories.reverse();\n      series.reverse();\n    }\n\n    let categoryCount = categories.length;\n    let seriesCount = series.length;\n    let measureCount = categoryCount * seriesCount;\n    let { measures, labels, colors, rowGroups, seriesStacks } = rows.reduce((carry, row, rowIndex) => {\n      let seriesIndex = series.indexOf(row[seriesColIndex]);\n      let measureIndex = categories.indexOf(row[categoryColIndex]) + seriesIndex * categoryCount;\n      (carry.measures[measureIndex] = carry.measures[measureIndex] || []).push(row[measureColIndex]);\n      (carry.rowGroups[measureIndex] = carry.rowGroups[measureIndex] || []).push(row);\n      carry.labels[measureIndex] = carry.labels[measureIndex] || row[labelColIndex];\n      carry.colors[measureIndex] = carry.colors[measureIndex] || row[colorColIndex];\n      carry.seriesStacks[seriesIndex] = carry.seriesStacks[seriesIndex] || row[stackColIndex];\n      return carry;\n    }, { measures: [], labels: [], colors: [], rowGroups: [], seriesStacks: [] });\n\n    let countMeasures = COUNT_TYPE_MAP[countType];\n    if (!countMeasures) {\n      throw new Error(`Unknown count type:\\t${countType}`);\n    }\n    for (let i = measureCount; i--; ) {\n      measures[i] = countMeasures(measures[i] || [0]);\n      rowGroups[i] = rowGroups[i] || [];\n    }\n\n    if (chartType === 'funnel') {\n      let sortMap = measures.map((v, i) => ({ v, i })).sort(sortOrder === 'desc' ? (a, b) => b.v - a.v : (a, b) => a.v - b.v).map(({ i }) => i);\n      let remap = (v, i, a) => a[sortMap[i]];\n      measures = measures.map(remap);\n      labels = labels.map(remap);\n      colors = colors.map(remap);\n      rowGroups = rowGroups.map(remap);\n    }\n\n    let baseColors;\n    let seriesColorCount = seriesColors.length;\n\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      baseColors = colors.map(x => Color(x));\n    }\n    else {\n      baseColors = [];\n      if (colorSource === 'custom') {\n        if (!seriesColorCount) {\n          throw new Error('No base colors have been added.');\n        }\n        seriesColors = seriesColors.map(x => Color(x));\n        series.forEach(function(seriesName, seriesIndex) {\n          categories.forEach(function(category, categoryIndex) {\n            let index = categoryIndex + seriesIndex * categoryCount;\n            let colorIndex = colorBy === 'series' ? seriesIndex : colorBy === 'both' ? index : categoryIndex;\n            baseColors[index] = seriesColors[colorIndex % seriesColorCount];\n          });\n        });\n      }\n      else {\n        series.forEach(function(seriesName, seriesIndex) {\n          categories.forEach(function(category, categoryIndex) {\n            let index = categoryIndex + seriesIndex * categoryCount;\n            let colorIndex = colorBy === 'series' ? seriesIndex : colorBy === 'both' ? index : categoryIndex;\n            let colorCount = colorBy === 'series' ? seriesCount : colorBy === 'both' ? measureCount : categoryCount;\n            baseColors[index] = Color.hsl(Math.round(360 * colorIndex / colorCount), 1, 0.5);\n          });\n        });\n      }\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => Color(color).a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => Color(color).l(panel.dataBorderBrightness).a(panel.dataBorderColorAlpha).rgba());\n\n    function formatLabelText(strFormat, rows, series, category, measure) {\n      return strFormat.replace(\n        /(\\\\\\$)|\\$\\{(?:(series)|(category)|measure|col:((?:[^\\\\\\}:]+|\\\\.)+)(?::([\\-\\w]+))?)\\}/g,\n        function (match, isEscapedDollar, isSeries, isCategory, colName, colFnName) {\n          if (isEscapedDollar) {\n            match = '$';\n          }\n          else if (colName) {\n            colName = colName.replace(/\\\\(.)/g, '$1');\n            if (_.has(rows[0].byColName, colName)) {\n              match = rows.map(row => row.byColName[colName]);\n              match = colFnName === 'sum'\n                ? match.reduce((a, b) => a + b)\n                : colFnName === 'avg'\n                  ? match.reduce((a, b) => a + b) / match.length\n                  : colFnName === 'max'\n                    ? match.reduce((a, b) => a > b ? a : b)\n                    : colFnName === 'min'\n                      ? match.reduce((a, b) => a < b ? a : b)\n                      : colFnName === 'first'\n                        ? match[0]\n                        : colFnName === 'last'\n                          ? match[match.length - 1]\n                          : colFnName === 'count'\n                            ? match.length\n                            : colFnName === 'unique-count'\n                              ? new Set(match).size\n                              : colFnName === 'list'\n                                ? match.sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                                : colFnName === 'unique-list'\n                                  ? Array.from(new Set(match)).sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                                  : match.join(',');\n            }\n          }\n          else {\n            match = isSeries ? series : isCategory ? category : measure;\n          }\n          return 'number' === typeof match\n            ? +match.toFixed(5)\n            : match;\n        }\n      )\n    }\n\n    function getLabelFormatter(defaultFormat, labelType = 'tooltip') {\n      labelType = labelType.toLowerCase();\n      let isForChart = labelType === 'chart';\n      let isForTooltip = labelType === 'tooltip';\n      if (!(isForChart || isForTooltip)) {\n        throw new Error(`Unknown label format:\\t${labelType}`);\n      }\n      return function () {\n        if (isForTooltip) {\n          let tooltipItems = arguments[0];\n          var isForTitle = Array.isArray(tooltipItems);\n          var { datasetIndex: seriesIndex, index: categoryIndex } = isForTitle ? tooltipItems[0] : tooltipItems;\n        }\n        else {\n          let labelItem = arguments[1];\n          var isForTitle = false;\n          var { datasetIndex: seriesIndex, dataIndex: categoryIndex } = labelItem;\n        }\n        let category = categories[categoryIndex];\n        let seriesName = series[seriesIndex];\n        let measureIndex = categoryIndex + seriesIndex * categoryCount;\n\n        let measure = measures[measureIndex];\n        let rows = rowGroups[measureIndex];\n        let { numberFormat, numberFormatDecimals } = panel;\n        let { isCustom, titleFormat, labelFormat } = panel.tooltip;\n        let strMeasure = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof measure)\n            ? getValueFormat(numberFormat)(measure, numberFormatDecimals, null)\n            : measure;\n        let strFormat = (\n          isForTooltip\n          ? (isCustom && (isForTitle ? titleFormat : labelFormat))\n          : labelOptions.format\n        ) || defaultFormat;\n\n        let strResult = strFormat.replace(\n          /(\\\\\\$)|\\$\\{(?:(series)|(category)|measure|col:((?:[^\\\\\\}:]+|\\\\.)+)(?::([\\-\\w]+))?)\\}/g,\n          function (match, isEscapedDollar, isSeries, isCategory, colName, colFnName) {\n            if (isEscapedDollar) {\n              match = '$';\n            }\n            else if (colName) {\n              colName = colName.replace(/\\\\(.)/g, '$1');\n              if (_.has(rows[0].byColName, colName)) {\n                match = rows.map(row => row.byColName[colName]);\n                match = colFnName === 'sum'\n                  ? match.reduce((a, b) => a + b)\n                  : colFnName === 'avg'\n                    ? match.reduce((a, b) => a + b) / match.length\n                    : colFnName === 'max'\n                      ? match.reduce((a, b) => a > b ? a : b)\n                      : colFnName === 'min'\n                        ? match.reduce((a, b) => a < b ? a : b)\n                        : colFnName === 'first'\n                          ? match[0]\n                          : colFnName === 'last'\n                            ? match[match.length - 1]\n                            : colFnName === 'count'\n                              ? match.length\n                              : colFnName === 'unique-count'\n                                ? new Set(match).size\n                                : colFnName === 'list'\n                                  ? match.sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                                  : colFnName === 'unique-list'\n                                    ? Array.from(new Set(match)).sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                                    : colFnName === 'titlecase'\n                                      ? JS.titleCase(match[0] + '')\n                                      : colFnName === 'uppercase'\n                                        ? (match[0] + '').toUpperCase()\n                                        : colFnName === 'lowercase'\n                                          ? (match[0] + '').toLowerCase()\n                                          : match.join(',');\n              }\n            }\n            else {\n              // coerces to strings while making sure that undefined and null become empty strings\n              match = [] + [isSeries ? seriesName : isCategory ? category : strMeasure];\n            }\n            return 'number' === typeof match\n              ? +match.toFixed(5)\n              : match;\n          }\n        ) || '';\n        \n        return isForChart\n          ? wrapText(strResult, labelOptions.wrapAfter)\n          : strResult;\n      }\n    }\n\n    return {\n      ctrl,\n      data,\n      rows,\n      colIndexesByText,\n      fullPanel,\n      panel,\n      countType,\n      categoryColIndex,\n      seriesColIndex,\n      measureColIndex,\n      labelColIndex,\n      colorColIndex,\n      stackColIndex,\n      seriesStacks,\n      ignoreSeries,\n      categories,\n      series,\n      categoryCount,\n      seriesCount,\n      measures,\n      measureCount,\n      labels,\n      rowGroups,\n      baseColors,\n      bgColors,\n      borderColors,\n      sortOrder,\n      formatLabel: getLabelFormatter('${category}: ${measure}', 'chart'),\n      tooltipCallbacks: {\n        title: getLabelFormatter('${series}'),\n        label: getLabelFormatter('${category}: ${measure}')\n      },\n      testChartEvent(e, callback) {\n        let elem = this.getElementAtEvent(e)[0];\n        let isOpen;\n        if (elem) {\n          let { _datasetIndex: seriesIndex, _index: categoryIndex } = elem;\n          let category = categories[categoryIndex];\n          let seriesName = series[seriesIndex];\n          isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n            // Check this link to see if it matches...\n            let { url, category: rgxCategory, series: rgxSeries } = drilldownLink;\n            if (url) {\n              if (parseRegExp(rgxCategory).test(category) && (ignoreSeries || parseRegExp(rgxSeries).test(seriesName))) {\n                callback(\n                  drilldownLinkIndex,\n                  rowGroups[categoryIndex + seriesIndex * categoryCount]\n                );\n                return true;\n              }\n            }\n          });\n        }\n\n        if (!isOpen) {\n          callback(-1, []);\n        }\n      }\n    };\n  }\n\n  drawPieChart(canvas) {\n    let {\n      ctrl,\n      panel,\n      labelColIndex,\n      colorColIndex,\n      categories,\n      series,\n      categoryCount,\n      measures,\n      bgColors,\n      borderColors,\n      tooltipCallbacks,\n      formatLabel,\n      testChartEvent\n    } = this.getChartOptions('pie');\n\n    let datasets = series.map((seriesName, seriesIndex) => {\n      let fnFilter = (measure, measureIndex) => ~~(measureIndex / categoryCount) === seriesIndex;\n      return {\n        label: categories,\n        data: measures.filter(fnFilter),\n        borderWidth: panel.borderWidth,\n        borderColor: borderColors.filter(fnFilter),\n        backgroundColor: bgColors.filter(fnFilter),\n        datalabels: {\n          anchor: 'center',\n          display: 'auto',\n          backgroundColor: Color(panel.labels.isBlackText ? 'white' : 'black').a(0.75).rgba(),\n          color: Color(panel.labels.isBlackText ? 'black' : 'white').rgb(),\n          borderRadius: 5,\n          formatter: formatLabel,\n          textAlign: 'center'\n        }\n      };\n    });\n\n    let chartConfig = {\n      responsive: true,\n      data: {\n        datasets,\n        labels: datasets[0].label\n      },\n      options: {\n        circumference: (panel.isSemiCircle ? 1 : 2) * Math.PI,\n        rotation: -Math.PI / (panel.isSemiCircle ? 1 : 2),\n        elements: { borderWidth: panel.borderWidth },\n        tooltips: {\n          callbacks: tooltipCallbacks\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: IS_LIGHT_THEME ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    if (panel.labels.isShowing) {\n      chartConfig.plugins = [ChartDataLabels];\n    }\n\n    let ctx = canvas.getContext('2d');\n    if (panel.pieType === 'polar') {\n      Chart.PolarArea(ctx, chartConfig);\n    }\n    else {\n      chartConfig.type = panel.pieType === 'doughnut' ? 'doughnut' : 'pie';\n      new Chart(ctx, chartConfig);\n    }\n  }\n\n  drawBarChart(canvas) {\n    let {\n      ctrl,\n      panel,\n      seriesStacks,\n      ignoreSeries,\n      categories,\n      series,\n      categoryCount,\n      measures,\n      rowGroups,\n      bgColors,\n      borderColors,\n      tooltipCallbacks,\n      formatLabel,\n      testChartEvent\n    } = this.getChartOptions('bar');\n\n    // If legacy bar chart colors exist convert them to new color setup\n    if (_.has(panel, ['seriesColors', 0, 'text'])) {\n      panel.seriesColors = panel.seriesColors.map(color => color.color);\n      panel.colorSource = 'custom';\n    }\n    \n    let datasets = series.map((seriesName, seriesIndex) => {\n      let fnFilter = (measure, measureIndex) => ~~(measureIndex / categoryCount) === seriesIndex;\n      return {\n        label: seriesName,\n        data: measures.filter(fnFilter),\n        borderWidth: panel.borderWidth,\n        borderColor: borderColors.filter(fnFilter),\n        backgroundColor: bgColors.filter(fnFilter),\n        stack: panel.isStacked ? seriesStacks[seriesIndex] : seriesIndex,\n        datalabels: {\n          anchor: 'center',\n          display: 'auto',\n          backgroundColor: Color(panel.labels.isBlackText ? 'white' : 'black').a(0.75).rgba(),\n          color: Color(panel.labels.isBlackText ? 'black' : 'white').rgb(),\n          borderRadius: 5,\n          formatter: formatLabel,\n          textAlign: 'center'\n        }\n      };\n    });\n    \n    let chartConfig = {\n      type: panel.orientation === 'horizontal' ? 'horizontalBar' : 'bar',\n      data: {\n        datasets,\n        labels: categories\n      },\n      //plugins: [ChartDataLabels],\n      options: {\n        responsive: true,\n        tooltips: {\n          mode: 'point',\n          callbacks: tooltipCallbacks\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: IS_LIGHT_THEME ? '#333' : '#CCC'\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.xAxes.ticks.autoSkip,\n                minRotation: panel.scales.xAxes.ticks.minRotation,\n                maxRotation: panel.scales.xAxes.ticks.maxRotation,\n                fontColor: IS_LIGHT_THEME ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.xAxes.gridLineOpacity,\n                color: IS_LIGHT_THEME ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.yAxes.ticks.autoSkip,\n                minRotation: panel.scales.yAxes.ticks.minRotation,\n                maxRotation: panel.scales.yAxes.ticks.maxRotation,\n                fontColor: IS_LIGHT_THEME ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.yAxes.gridLineOpacity,\n                color: IS_LIGHT_THEME ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n              }\n            }\n          ]\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    if (panel.labels.isShowing) {\n      chartConfig.plugins = [ChartDataLabels];\n    }\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  drawFunnelChart(canvas) {\n    let {\n      ctrl,\n      panel,\n      ignoreSeries,\n      categories,\n      series,\n      categoryCount,\n      measures,\n      rowGroups,\n      bgColors,\n      borderColors,\n      tooltipCallbacks,\n      formatLabel,\n      testChartEvent\n    } = this.getChartOptions('funnel');\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors,\n      datalabels: panel.labels\n        ? {\n          anchor: 'center',\n          display: 'auto',\n          backgroundColor: Color(panel.labels.isBlackText ? 'white' : 'black').a(0.75).rgba(),\n          color: Color(panel.labels.isBlackText ? 'black' : 'white').rgb(),\n          borderRadius: 5,\n          formatter: formatLabel,\n          textAlign: 'center'\n        }\n        : null\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        startWidthPercent: panel.startWidthPct,\n        sort: panel.sortOrder,\n        elements: { borderWidth: panel.borderWidth },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        tooltips: {\n          callbacks: tooltipCallbacks\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: IS_LIGHT_THEME ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    // if (panel.labels.isShowing) {\n    //   chartConfig.plugins = [ChartDataLabels];\n    // }\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables }, timeSrv: { time: timeVars } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(RGX_OLD_VAR_WORKAROUND, '$1$2').replace(\n      RGX_CELL_PLACEHOLDER,\n      function (match, isTime, opt_timePart, type, name, isRaw, isParam, paramName) {\n        if (isTime) {\n          return (opt_timePart != 'to' ? 'from=' + encodeURIComponent(timeVars.from) : '')\n            + (opt_timePart ? '' : '&')\n            + (opt_timePart != 'from' ? 'to=' + encodeURIComponent(timeVars.to) : '');\n        }\n\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? type === 'var' ? `var-${name}` : name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  getRange() {\n    return _.range.apply(this, arguments);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => this.drawChart.call(this, e, elem));\n    this.events.on('render', _.debounce(e => this.drawChart.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}