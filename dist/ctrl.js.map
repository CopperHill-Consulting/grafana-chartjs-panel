{"version":3,"sources":["../src/ctrl.js"],"names":["panelDefaults","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","chartType","drilldownLinks","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","renderChart","canvas","data","dataType","type","columns","rows","columnTexts","panel","variables","Error","colIndexesByText","reduceRight","indexes","colText","index","Object","assign","_","has","categoryIndex","undefined","seriesIndex","stackIndex","measureIndex","colRows","map","row","colRow","value","categories","Set","reduce","carry","seriesName","series","includes","push","seriesStacks","oldColors","slice","newColors","oldIndex","findIndex","c","text","color","Color","hsl","length","measures","barChartData","labels","datasets","seriesNameIndex","label","backgroundColor","a","rgba","borderColor","borderWidth","stack","category","sum","isMatch","isLightTheme","config","theme","myChart","Chart","options","responsive","display","fullWidth","reverse","fontColor","stacked","gridLines","onClick","e","target","getElementAtEvent","model","_model","datasetLabel","isDone","drilldownLink","url","rgxCategory","parseRegExp","rgxSeries","test","replace","match","name","isRaw","isParam","paramName","result","getColValuesFor","getVarValuesFor","join","v","encodeURIComponent","window","open","openInBlank","colIndex","catColIndex","seriesColIndex","values","varName","variable","varValues","JS","toArray","current","isAll","includeAll","concat","strPattern","parts","exec","RegExp","escapeRegExp","renderNow","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","prop","width","height","templateSrv","console","msg","message","elemMsg","dom","style","alignItems","textAlign","$","cls","margin","append","ChartJsPanelCtrl","$scope","$injector","$rootScope","GRID_LINE_OPACITIES","CHART_TYPES","COLOR_ALPHAS","range","x","TICK_ROTATIONS","defaultsDeep","events","on","onInitEditMode","bind","onDataReceived","onDataError","links","splice","indexOf","path","addEditorTab","dataList","col","obj","key","newValue","emit","scope","elem","attrs","call","debounce","MetricsPanelCtrl","plugins","unregister","ChartDataLabels","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport config from 'app/core/config';\nimport {Color} from './external/CWest-Color.min';\n\nconst panelDefaults = {\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  chartType: 'bar',\n  drilldownLinks: [],\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\n\nfunction renderChart({canvas, data: { type: dataType, columns, rows, columnTexts }, panel, variables}) {\n  if (!columnTexts) {\n    throw new Error('No source data has been specified.');\n  }\n\n  if (dataType !== 'table') {\n    throw new Error('Data type must be \"table\".');\n  }\n\n  let colIndexesByText = columnTexts.reduceRight(\n    (indexes, colText, index) =>\n      Object.assign(indexes, { [colText]: index }),\n    {}\n  );\n\n  if (!_.has(colIndexesByText, panel.categoryColumnName)) {\n    throw new Error('Invalid category column.');\n  }\n  let categoryIndex = colIndexesByText[panel.categoryColumnName];\n\n  if (panel.seriesColumnName != undefined && !_.has(colIndexesByText, panel.seriesColumnName)) {\n    throw new Error('Invalid series column.');\n  }\n  let seriesIndex = panel.seriesColumnName != undefined\n    ? colIndexesByText[panel.seriesColumnName]\n    : -1;\n\n  if (panel.stackColumnName != undefined && !_.has(colIndexesByText, panel.stackColumnName)) {\n    throw new Error('Invalid stack column.');\n  }\n  let stackIndex = panel.stackColumnName != undefined\n    ? colIndexesByText[panel.stackColumnName]\n    : -1;\n\n  if (!_.has(colIndexesByText, panel.measureColumnName)) {\n    throw new Error('Invalid measure column.');\n  }\n  let measureIndex = colIndexesByText[panel.measureColumnName];\n\n  let colRows = rows.map(\n    row =>\n      row.reduceRight(\n        (colRow, value, index) =>\n          Object.assign(colRow, { [columnTexts[index]]: value }),\n        {}\n      )\n  );\n\n  let categories = [...new Set(rows.map(row => row[categoryIndex]))];\n  let { series, seriesStacks } = rows.reduce(\n    (carry, row) => {\n      let seriesName = row[seriesIndex];\n      if (!carry.series.includes(seriesName)) {\n        carry.series.push(seriesName);\n        carry.seriesStacks.push(row[stackIndex]);\n      }\n      return carry;\n    },\n    { series: [], seriesStacks: [] }\n  );\n\n  let oldColors = panel.seriesColors.slice();\n  let newColors = series.map((seriesName, index, series) => {\n    let oldIndex = oldColors.findIndex(c => c.text === seriesName);\n    return {\n      text: seriesName,\n      color: oldIndex < 0\n        ? Color.hsl(~~(360 * index / series.length), 1, 0.5) + ''\n        : oldColors[oldIndex].color\n    };\n  });\n  panel.seriesColors = newColors;\n\n  // Defined with barChartData.data is defined...\n  let measures = {};\n\n  let barChartData = {\n    labels: categories,\n    datasets: series.map((seriesName, seriesNameIndex) => ({\n      label: seriesName == undefined ? 'Series ' + (seriesNameIndex + 1) : seriesName,\n      backgroundColor: Color(newColors[seriesNameIndex].color).a(panel.dataBgColorAlpha).rgba(),\n      borderColor: Color(newColors[seriesNameIndex].color).a(panel.dataBorderColorAlpha).rgba(),\n      borderWidth: 1,\n      stack: panel.isStacked ? seriesStacks[seriesNameIndex] : seriesNameIndex,\n      data: categories.map(category => {\n        let sum = rows.reduce((sum, row) => {\n          let isMatch = row[categoryIndex] === category\n            && (seriesIndex < 0 || row[seriesIndex] === seriesName);\n          return sum + (isMatch ? +row[measureIndex] || 0 : 0);\n        }, 0);\n        return (measures[category] = measures[category] || {})[seriesName] = sum;\n      })\n    }))\n  };\n\n  let isLightTheme = config.theme.type === 'light';\n\n  let myChart = new Chart(canvas, {\n    type: panel.chartType,\n    data: barChartData,\n    //plugins: [ChartDataLabels],\n    options: {\n      responsive: true,\n      legend: {\n        display: panel.legend.isShowing,\n        position: panel.legend.position,\n        fullWidth: panel.legend.isFullWidth,\n        reverse: panel.legend.isReverse,\n        labels: {\n          fontColor: isLightTheme ? '#333' : '#CCC'\n        }\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: panel.scales.xAxes.ticks.autoSkip,\n              minRotation: panel.scales.xAxes.ticks.minRotation,\n              maxRotation: panel.scales.xAxes.ticks.maxRotation,\n              fontColor: isLightTheme ? '#333' : '#CCC'\n            },\n            stacked: true,\n            gridLines: {\n              display: !!panel.scales.xAxes.gridLineOpacity,\n              color: isLightTheme ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: {\n              autoSkip: panel.scales.yAxes.ticks.autoSkip,\n              minRotation: panel.scales.yAxes.ticks.minRotation,\n              maxRotation: panel.scales.yAxes.ticks.maxRotation,\n              fontColor: isLightTheme ? '#333' : '#CCC'\n            },\n            stacked: true,\n            gridLines: {\n              display: !!panel.scales.yAxes.gridLineOpacity,\n              color: isLightTheme ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n            }\n          }\n        ]\n      },\n      onClick: function(e) {\n        let target = myChart.getElementAtEvent(e)[0],\n            model = target && target._model;\n        if (model) {\n          let category = model.label;\n          let series = model.datasetLabel;\n\n          panel.drilldownLinks.reduce(function (isDone, drilldownLink) {\n            // If a link has already been opened dont check the other links.\n            if (isDone) {\n              return isDone;\n            }\n\n            // Check this link to see if it matches...\n            let url = drilldownLink.url;\n            if (url) {\n              let rgxCategory = parseRegExp(drilldownLink.category);\n              let rgxSeries = parseRegExp(drilldownLink.series);\n              if (rgxCategory.test(category) && (series == undefined || rgxSeries.test(series))) {\n                url = url.replace(\n                  /\\${(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?}/g,\n                  function(match, type, name, isRaw, isParam, paramName) {\n                    let result = [...new Set(\n                      type == 'col'\n                        ? getColValuesFor(colIndexesByText[name], category, series, categoryIndex, seriesIndex, rows)\n                        : getVarValuesFor(name, variables)\n                    )];\n                    return result.length < 1\n                      ? match\n                      : isRaw\n                        ? result.join(',')\n                        : isParam\n                          ? result.map(v => encodeURIComponent(paramName == undefined ? name : paramName) + '=' + encodeURIComponent(v)).join('&')\n                          : encodeURIComponent(result.join(','));\n                  }\n                );\n                window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');\n                return true;\n              }\n            }\n          }, false);\n        }\n      }\n    }\n  });\n}\n\nfunction getColValuesFor(colIndex, category, series, catColIndex, seriesColIndex, rows) {\n  if (colIndex >= 0) {\n    return rows.reduce((values, row) => {\n      if (category === row[catColIndex] && (seriesColIndex < 0 || row[seriesColIndex] === series)) {\n        values.push(row[colIndex]);\n      }\n      return values;\n    }, []);\n  }\n  return [];\n}\n\nfunction getVarValuesFor(varName, variables) {\n  return variables.reduce(\n    (values, variable) => {\n      // At times current.value is a string and at times it is an array.\n      let varValues = JS.toArray(variable.current.value);\n      let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n      return variable.name === varName\n        ? values.concat(isAll ? [variable.current.text] : varValues)\n        : values;\n    },\n    []\n  );\n}\n\nfunction parseRegExp(strPattern) {\n  var parts = /^\\/(.+)\\/(\\w*)$/.exec(strPattern);\n  return parts ? new RegExp(parts[1], parts[2]) : new RegExp('^' + _.escapeRegExp(strPattern) + '$', 'i');\n}\n\nfunction renderNow(e, jElem) {\n  let error,\n      isValid = false,\n      ctrl = this,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent);\n  \n  if (data && data.rows && data.rows.length) {\n    if (data.type === 'table') {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        renderChart({\n          canvas: jCanvas[0],\n          data,\n          panel: ctrl.panel,\n          variables: ctrl.templateSrv.variables\n        });\n        isValid = true;\n      }\n      catch(e) {\n        console.error('renderChart:', error = e);\n      }\n    }\n  }\n  if (!isValid) {\n    let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n    let elemMsg = JS.dom({ _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n      { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n    ]});\n    jContent.html('').append(elemMsg);\n  }\n}\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_TYPES = [\n      { value: 'horizontalBar', text: 'Horizontal Bar' },\n      { value: 'bar', text: 'Vertical Bar' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  addDrilldownLink() {\n    this.panel.drilldownLinks.push({\n      category: '/[^]*/',\n      series: '/[^]*/',\n      url: '',\n      openInBlank: true\n    });\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.panel.drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      this.data = {\n        type: data.type,\n        columns: data.columns,\n        rows: data.rows,\n        columnTexts: data.columns.map(col => 'string' === typeof col ? col : col.text)\n      };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => renderNow.call(this, e, elem));\n    this.events.on('render', _.debounce(e => renderNow.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}