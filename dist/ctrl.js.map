{"version":3,"sources":["../src/ctrl.js"],"names":["PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","colorBy","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","BAR_OPTIONS","Object","keys","JS","flattenKeys","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","FUNNEL_OPTIONS","OPTIONS_BY_TYPE","bar","funnel","ChartJsPanelCtrl","$scope","$injector","$rootScope","GRID_LINE_OPACITIES","value","text","CHART_COLOR_BY","CHART_COLOR_SOURCES","CHART_TYPES","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","_","range","map","x","TICK_ROTATIONS","data","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","panel","defaultsDeep","forEach","key","has","opt_index","colors","splice","length","renderNow","fromIndex","toIndex","getChartPanel","count","drilldownLink","url","openInBlank","isActiveOption","category","series","push","links","indexOf","path","addEditorTab","dataList","type","columns","rows","columnTexts","col","colIndexesByText","reduceRight","indexes","colText","index","assign","obj","newValue","emit","every","includes","name","opt_isOptional","isRequired","undefined","Error","e","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","canvas","prop","width","height","drawBarChart","drawFunnelChart","console","msg","message","elemMsg","dom","style","display","alignItems","textAlign","$","cls","margin","append","fullPanel","categoryColIndex","getColIndex","seriesColIndex","stackColIndex","measureColIndex","ignoreSeries","categories","uniq","row","reduce","carry","seriesName","seriesStacks","color","colorColIndex","baseColors","c","rowSeries","rowCategory","i","colorIndexLimit","a","Color","hsl","isLightTheme","config","theme","measures","chartConfig","labels","datasets","seriesNameIndex","label","backgroundColor","cat","rgba","borderColor","borderWidth","stack","sum","isMatch","options","responsive","fullWidth","reverse","fontColor","stacked","gridLines","onClick","target","myChart","getElementAtEvent","model","_model","datasetLabel","isOpen","some","rgxCategory","rgxSeries","test","matchingRows","filter","openDrilldownLink","log","Chart","getContext","rowIndex","measureIndex","altBaseColors","sort","b","measure","newCategories","newMeasures","bgColors","borderColors","dataset","elements","keep","animation","animateScale","animateRotate","elem","_index","variables","templateSrv","replace","match","isRaw","isParam","paramName","result","values","variable","varValues","toArray","current","isAll","includeAll","concat","join","v","encodeURIComponent","window","open","apply","arguments","scope","attrs","drawChart","call","debounce","MetricsPanelCtrl","plugins","unregister","ChartDataLabels","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport config from 'app/core/config';\nimport {Color} from './external/CWest-Color.min';\nimport { parseRegExp } from './helper-functions';\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  colorBy: 'series',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\nconst BAR_OPTIONS = Object.keys(JS.flattenKeys(BAR_DEFAULTS, true));\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'asc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  gap: 1,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\nconst FUNNEL_OPTIONS = Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true));\n\nconst OPTIONS_BY_TYPE = {\n  bar: BAR_OPTIONS,\n  funnel: FUNNEL_OPTIONS\n};\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_COLOR_BY = [\n      { value: 'series', text: 'Series' },\n      { value: 'category', text: 'Category' },\n      { value: 'both', text: 'Series & Category' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' }\n    ];\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n    }\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  moveSeriesColor(fromIndex, toIndex) {\n    let colors = this.getChartPanel().seriesColors;\n    colors.splice(toIndex, 0, colors.splice(fromIndex, 1)[0]);\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    let count = colors.length;\n    if (count) {\n      colors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      let { type, columns, rows } = data;\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      let colIndexesByText = columnTexts.reduceRight(\n        (indexes, colText, index) =>\n          Object.assign(indexes, { [colText]: index }),\n        {}\n      );\n      this.data = { type, columns, rows, columnTexts, colIndexesByText };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...keys) {\n    return keys.every(key => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(key));\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  getColIndex(name, panel, opt_isOptional) {\n    let { colIndexesByText } = this.data;\n    let key = name + 'ColumnName';\n    let isRequired = !opt_isOptional || panel[key] != undefined;\n    if (isRequired && !_.has(colIndexesByText, panel[key])) {\n      throw new Error(`Invalid ${name} column.`);\n    }\n    return isRequired ? colIndexesByText[panel[key]] : -1;\n  }\n\n  drawChart(e, jElem) {\n    let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n\n    if (data && data.rows && data.rows.length) {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if (!data.columnTexts) {\n          throw new Error('No source data has been specified.');\n        }\n\n        if (data.type !== 'table') {\n          throw new Error('Data type must be \"table\".');\n        }\n\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        isValid = true;\n      }\n      catch (e) {\n        console.error('drawChart:', error = e);\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n    }\n  }\n\n  drawBarChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.bar;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = ctrl.getColIndex('series', panel, true);\n    let stackColIndex = ctrl.getColIndex('stack', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let { series, seriesStacks } = rows.reduce(\n      (carry, row) => {\n        let seriesName = row[seriesColIndex];\n        if (!carry.series.includes(seriesName)) {\n          carry.series.push(seriesName);\n          carry.seriesStacks.push(row[stackColIndex]);\n        }\n        return carry;\n      },\n      { series: [], seriesStacks: [] }\n    );\n\n    series = series.map(name => name === undefined ? 'Series' : name);\n    seriesStacks = series.map(name => name === undefined ? 'Stack' : name);\n\n    // If legacy bar chart colors exist convert them to new color setup\n    if (_.has(panel, ['seriesColors', 0, 'text'])) {\n      panel.seriesColors = panel.seriesColors.map(color => color.color);\n      panel.colorSource = 'custom';\n    }\n\n    let { colorSource, seriesColors, colorColumnName, colorBy } = panel;\n\n    let colorColIndex;\n    if (colorSource === 'column') {\n       colorColIndex = ctrl.getColIndex('color', panel);\n    }\n\n    let baseColors = rows.reduce((colors, row) => {\n      let color = colors.find(c => seriesColIndex >= 0 ? c.series === row[seriesColIndex] : true && c.category === row[categoryColIndex]);\n      let rowSeries = ignoreSeries ? series[0] : row[seriesColIndex];\n      let rowCategory = row[categoryColIndex];\n      if (!colors.find(c => (ignoreSeries || c.series === rowSeries) && c.category === rowCategory)) {\n        let color = { series: rowSeries, category: rowCategory };\n        if (colorColIndex >= 0) {\n          color.value = Color(row[colorColIndex]);\n        }\n        else {\n          color.index = colorBy === 'both'\n            ? colors.length\n            : colorBy === 'category'\n              ? categories.indexOf(rowCategory)\n              : series.indexOf(rowSeries);\n        }\n        colors.push(color);\n      }\n      return colors;\n    }, []);\n    if (colorSource === 'custom') { // user-defined\n      baseColors.forEach((c, i) => {\n        c.value = Color(seriesColors[c.index % seriesColors.length]);\n      });\n    }\n    else if (colorSource !== 'column') { // rainbow\n      let colorIndexLimit = colorBy === 'both'\n        ? baseColors.length\n        : colorBy === 'category'\n          ? categories.length\n          : series.length;\n      baseColors.forEach((c, i, a) => {\n        c.value = Color.hsl(~~(360 * c.index / colorIndexLimit), 1, 0.5);\n      });\n    }\n    \n    let isLightTheme = config.theme.type === 'light';\n    \n    let measures = {};\n    let chartConfig = {\n      type: panel.orientation === 'horizontal' ? 'horizontalBar' : 'bar',\n      data: {\n        labels: categories,\n        datasets: series.map((seriesName, seriesNameIndex) => ({\n          label: seriesName,\n          backgroundColor: categories.map(cat => Color((baseColors.find(color => color.category === cat && color.series === seriesName) || {}).value).a(panel.dataBgColorAlpha).rgba()),\n          borderColor: categories.map(cat => Color((baseColors.find(color => color.category === cat && color.series === seriesName) || {}).value).a(panel.dataBorderColorAlpha).rgba()),\n          borderWidth: 1,\n          stack: panel.isStacked ? seriesStacks[seriesNameIndex] : seriesNameIndex,\n          data: categories.map(category => {\n            let sum = rows.reduce((sum, row) => {\n              let isMatch = row[categoryColIndex] === category\n                && (seriesColIndex < 0 || row[seriesColIndex] === seriesName);\n              return sum + (isMatch ? +row[measureColIndex] || 0 : 0);\n            }, 0);\n            return (measures[category] = measures[category] || {})[seriesName] = sum;\n          })\n        }))\n      },\n      //plugins: [ChartDataLabels],\n      options: {\n        responsive: true,\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.xAxes.ticks.autoSkip,\n                minRotation: panel.scales.xAxes.ticks.minRotation,\n                maxRotation: panel.scales.xAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC'\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.xAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.yAxes.ticks.autoSkip,\n                minRotation: panel.scales.yAxes.ticks.minRotation,\n                maxRotation: panel.scales.yAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC'\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.yAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n              }\n            }\n          ]\n        },\n        onClick: function (e) {\n          let target = myChart.getElementAtEvent(e)[0];\n          let model = target && target._model;\n          if (model) {\n            let category = model.label;\n            let seriesName = model.datasetLabel;\n            let isOpen = panel.drilldownLinks.some(drilldownLink => {\n              // Check this link to see if it matches...\n              let { url, category: rgxCategory, series: rgxSeries } = drilldownLink;\n              if (url) {\n                rgxCategory = parseRegExp(rgxCategory);\n                rgxSeries = !ignoreSeries && parseRegExp(rgxSeries);\n                if (rgxCategory.test(category) && (ignoreSeries || rgxSeries.test(seriesName))) {\n                  let matchingRows = rows.filter(row => row[categoryColIndex] === category && (ignoreSeries || row[seriesColIndex] === seriesName));\n                  ctrl.openDrilldownLink(drilldownLink, matchingRows);\n                  return true;\n                }\n              }\n            });\n\n            if (!isOpen) {\n              console.log('No matching drilldown link was found:', { series: seriesName, category, rows });\n            }\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  drawFunnelChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.funnel;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let measures = rows.reduce((measures, row, rowIndex) => {\n      let measureIndex = categories.indexOf(row[categoryColIndex]);\n      measures[measureIndex] = (measures[measureIndex] || 0) + row[measureColIndex];\n      return measures;\n    }, []);\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, sortOrder } = panel;\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      let colorColIndex = colIndexesByText[colorColumnName];\n      baseColors = categories.map(category => Color(rows.find(row => row[categoryColIndex] === category)[colorColIndex]));\n    }\n    else if (colorSource === 'custom') {\n      baseColors = categories.map((category, index, categories) => {\n        return Color(seriesColors[index % seriesColors.length]);\n      });\n    }\n    else {\n      baseColors = categories.map((category, index, categories) => {\n        return Color.hsl(~~(360 * index / categories.length), 1, 0.5);\n      });\n    }\n\n    let isLightTheme = config.theme.type === 'light';\n\n    // Sort the measures and then the categories accordingly.\n    let altBaseColors;\n    measures = measures.map((value, index) => ({ index, value }));\n    measures.sort(sortOrder === 'desc' ? (a, b) => b.value - a.value : (a, b) => a.value - b.value);\n    [altBaseColors, categories, measures] = measures.reduce((carry, measure, index) => {\n      let [altBaseColors, newCategories, newMeasures] = carry;\n      altBaseColors.push(baseColors[measure.index]);\n      newCategories.push(categories[measure.index]);\n      newMeasures.push(measure.value);\n      return carry;\n    }, [[], [], []]);\n\n    // If using a column as the source of the colors make sure to order them according to the categories.\n    if (colorSource === 'column') {\n      baseColors = altBaseColors;\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.a(panel.dataBorderColorAlpha).rgba());\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      // plugins: [ChartDataLabels],\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        sort: panel.sortOrder,\n        elements: { borderWidth: 1 },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick (e) {\n          let elem = this.getElementAtEvent(e)[0];\n          if (elem) {\n            let category = categories[elem._index];\n            let isOpen = panel.drilldownLinks.some(drilldownLink => {\n              // Check this link to see if it matches...\n              let { url, category: rgxCategory } = drilldownLink;\n              if (url) {\n                rgxCategory = parseRegExp(rgxCategory);\n                if (rgxCategory.test(category)) {\n                  let matchingRows = rows.filter(row => row[categoryColIndex] === category);\n                  ctrl.openDrilldownLink(drilldownLink, matchingRows);\n                  return true;\n                }\n              }\n            });\n\n            if (!isOpen) {\n              console.log('No matching drilldown link was found for category:', category, rows);\n            }\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(\n      /\\${(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?}/g,\n      function (match, type, name, isRaw, isParam, paramName) {\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  getRange() {\n    return _.range.apply(this, arguments);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => this.drawChart.call(this, e, elem));\n    this.events.on('render', _.debounce(e => this.drawChart.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}