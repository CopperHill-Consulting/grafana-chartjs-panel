{"version":3,"sources":["../src/ctrl.js"],"names":["IS_LIGHT_THEME","config","theme","type","RGX_CELL_PLACEHOLDER","RGX_OLD_VAR_WORKAROUND","COUNT_TYPE_MAP","sum","_","avg","mean","min","max","PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","borderWidth","colorBy","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","dataBorderBrightness","numberFormat","numberFormatDecimals","tooltip","isCustom","titleFormat","labelFormat","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","startWidthPct","PIE_DEFAULTS","pieType","isSemiCircle","labelColumnName","labels","isBlackText","wrapAfter","OPTIONS_BY_TYPE","bar","Object","keys","JS","flattenKeys","pie","funnel","ChartJsPanelCtrl","$scope","$injector","$rootScope","UNIT_FORMATS","GRID_LINE_OPACITIES","value","text","CHART_START_WIDTH_PERCENTAGES","CHART_BORDER_WIDTHS","CHART_GAP_SIZES","CHART_COLOR_BY","CHART_COLOR_SOURCES","CHART_TYPES","PIE_TYPES","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","range","map","x","BRIGHTNESSES","TICK_ROTATIONS","data","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","panel","defaultsDeep","forEach","key","has","strFormat","rowsByColName","series","category","measure","replace","match","isEscapedDollar","isSeries","isCategory","colName","colFnName","row","reduce","a","b","length","Set","size","sort","c","d","Array","from","join","toFixed","opt_index","colors","splice","renderNow","fromIndex","toIndex","getChartPanel","count","drilldownLink","url","openInBlank","isActiveOption","push","links","indexOf","path","addEditorTab","dataList","columns","rows","columnTexts","col","colIndexesByText","reduceRight","indexes","colText","index","assign","cells","rowIndex","carry","cellValue","cellIndex","obj","newValue","emit","paths","every","includes","set","name","opt_isOptional","isRequired","undefined","Error","e","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","canvas","prop","width","height","drawBarChart","drawFunnelChart","drawPieChart","console","msg","message","elemMsg","dom","style","display","alignItems","textAlign","$","cls","margin","append","fullPanel","countType","categoryColIndex","getColIndex","seriesColIndex","measureColIndex","labelColIndex","colorColIndex","stackColIndex","ignoreSeries","categories","uniq","reverse","categoryCount","seriesCount","measureCount","seriesIndex","measures","rowsByMeasure","seriesStacks","countMeasures","i","baseColors","seriesColorCount","seriesName","categoryIndex","colorIndex","colorCount","Color","hsl","Math","round","bgColors","color","rgba","borderColors","l","testChartEvent","callback","elem","getElementAtEvent","isOpen","_datasetIndex","_index","some","drilldownLinkIndex","rgxCategory","rgxSeries","test","getChartOptions","datasets","fnFilter","measureIndex","label","filter","borderColor","backgroundColor","datalabels","anchor","rgb","borderRadius","formatter","dataIndex","datasetIndex","result","chartConfig","responsive","options","circumference","PI","rotation","elements","tooltips","callbacks","title","tooltipItem","fullWidth","fontColor","animation","animateScale","animateRotate","onClick","call","matchingRows","openDrilldownLink","hover","onHover","target","cursor","plugins","ChartDataLabels","ctx","getContext","Chart","PolarArea","stack","mode","formatTooltipText","strMeasure","userCallback","values","stacked","gridLines","myChart","altBaseColors","newCategories","newMeasures","dataset","startWidthPercent","keep","variables","templateSrv","timeVars","timeSrv","time","isTime","opt_timePart","isRaw","isParam","paramName","encodeURIComponent","to","variable","varValues","toArray","current","isAll","includeAll","concat","v","window","open","apply","arguments","scope","attrs","drawChart","debounce","MetricsPanelCtrl","unregister","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormat, getValueFormats } from '@grafana/ui';\nimport config from 'app/core/config';\nimport _ from 'lodash';\n\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport { Color } from './external/CWest-Color.min';\n\nimport { parseRegExp, wrapText } from './helper-functions';\n\nconst IS_LIGHT_THEME = config.theme.type === 'light'\n\nconst RGX_CELL_PLACEHOLDER = /\\$\\{(time)(?:-(to|from))?\\}|\\$\\{(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?\\}/g;\nconst RGX_OLD_VAR_WORKAROUND = /([\\?&])var-(\\$\\{var:(?:[^\\}:\\\\]*|\\\\.)+:param\\})/g;\n\nconst COUNT_TYPE_MAP = {\n  sum: _.sum,\n  avg: _.mean,\n  min: _.min,\n  max: _.max\n};\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'series',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  dataBorderBrightness: 0.5,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  tooltip: {\n    isCustom: false,\n    titleFormat:  null,\n    labelFormat: null\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'desc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  dataBorderBrightness: 0.5,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  gap: 1,\n  startWidthPct: 0.5,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\n\nconst PIE_DEFAULTS = {\n  pieType: 'pie',\n  isSemiCircle: false,\n  categoryColumnName: null,\n  seriesColumnName: null,\n  measureColumnName: null,\n  labelColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'both',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderBrightness: 0.5,\n  dataBorderColorAlpha: 1,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  labels: {\n    isShowing: true,\n    isBlackText: false,\n    wrapAfter: 25\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\n\nconst OPTIONS_BY_TYPE = {\n  bar: Object.keys(JS.flattenKeys(BAR_DEFAULTS, true)),\n  pie: Object.keys(JS.flattenKeys(PIE_DEFAULTS, true)),\n  funnel: Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true))\n};\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    \n    this.UNIT_FORMATS = getValueFormats();\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_START_WIDTH_PERCENTAGES = [\n      { value: 0, text: '0% (Point)' },\n      { value: 0.25, text: '25%' },\n      { value: 0.5, text: '50% (Half)' },\n      { value: 0.75, text: '75%' },\n      { value: 1, text: '100% (Full)' }\n    ];\n    this.CHART_BORDER_WIDTHS = [\n      { value: 0, text: '0px (NO BORDER)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' }\n    ];\n    this.CHART_GAP_SIZES = [\n      { value: 0, text: '0px (NO GAP)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' },\n      { value: 4, text: '4px' },\n      { value: 5, text: '5px' }\n    ];\n    this.CHART_COLOR_BY = [\n      { value: 'series', text: 'Series' },\n      { value: 'category', text: 'Category' },\n      { value: 'both', text: 'Series & Category' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' },\n      { value: 'pie', text: 'Pie' }\n    ];\n    this.PIE_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'pie', text: 'Default' },\n      { value: 'polar', text: 'Polar' },\n      { value: 'doughnut', text: 'Doughnut' }\n    ];\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.BRIGHTNESSES = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (White)' : '' : ' (Black)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n\n      case 'pie':\n        _.defaultsDeep(panel.pie = panel.pie || {}, PIE_DEFAULTS);\n        break;\n    }\n  }\n\n  formatTooltipText(strFormat, rowsByColName, series, category, measure) {\n    return strFormat.replace(\n      /(\\\\\\$)|\\$\\{(?:(series)|(category)|measure|col:((?:[^\\\\\\}:]+|\\\\.)+)(?::([\\-\\w]+))?)\\}/g,\n      function (match, isEscapedDollar, isSeries, isCategory, colName, colFnName) {\n        if (isEscapedDollar) {\n          match = '$';\n        }\n        else if (colName) {\n          colName = colName.replace(/\\\\(.)/g, '$1');\n          if (_.has(rowsByColName[0], colName)) {\n            match = rowsByColName.map(row => row[colName]);\n            match = colFnName === 'sum'\n              ? match.reduce((a, b) => a + b)\n              : colFnName === 'avg'\n                ? match.reduce((a, b) => a + b) / match.length\n                : colFnName === 'max'\n                  ? match.reduce((a, b) => a > b ? a : b)\n                  : colFnName === 'min'\n                    ? match.reduce((a, b) => a < b ? a : b)\n                    : colFnName === 'first'\n                      ? match[0]\n                      : colFnName === 'last'\n                        ? match[match.length - 1]\n                        : colFnName === 'count'\n                          ? match.length\n                          : colFnName === 'unique-count'\n                            ? new Set(match).size\n                            : colFnName === 'list'\n                              ? match.sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                              : colFnName === 'unique-list'\n                                ? Array.from(new Set(match)).sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                                : match.join(',');\n          }\n        }\n        else {\n          match = isSeries ? series : isCategory ? category : measure;\n        }\n        return 'number' === typeof match\n          ? +match.toFixed(5)\n          : match;\n      }\n    )\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  moveSeriesColor(fromIndex, toIndex) {\n    let colors = this.getChartPanel().seriesColors;\n    colors.splice(toIndex, 0, colors.splice(fromIndex, 1)[0]);\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    let count = colors.length;\n    if (count) {\n      colors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      let { type, columns, rows } = data;\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      let colIndexesByText = columnTexts.reduceRight(\n        (indexes, colText, index) =>\n          Object.assign(indexes, { [colText]: index }),\n        {}\n      );\n      let rowsByColName = rows.map(\n        (cells, rowIndex) =>\n          cells.reduce(\n            (carry, cellValue, cellIndex) => Object.assign(carry, { [columnTexts[cellIndex]]: cellValue }),\n            {}\n          )\n      );\n      this.data = { type, columns, rows, columnTexts, colIndexesByText, rowsByColName };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...paths) {\n    return paths.every(path => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(path));\n  }\n\n  setActiveOption(path, value) {\n    let panel = this.getChartPanel();\n    if (_.has(panel, path)) {\n      _.set(panel, path, value);\n      this.renderNow();\n    }\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  getColIndex(name, panel, opt_isOptional) {\n    let { colIndexesByText } = this.data;\n    let key = name + 'ColumnName';\n    let isRequired = !opt_isOptional || panel[key] != undefined;\n    if (isRequired && !_.has(colIndexesByText, panel[key])) {\n      throw new Error(`Invalid ${name} column.`);\n    }\n    return isRequired ? colIndexesByText[panel[key]] : -1;\n  }\n\n  drawChart(e, jElem) {\n    let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n\n    if (data && data.rows && data.rows.length) {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if (!data.columnTexts) {\n          throw new Error('No source data has been specified.');\n        }\n\n        if (data.type !== 'table') {\n          throw new Error('Data type must be \"table\".');\n        }\n\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        else if ('pie' === chartType) {\n          ctrl.drawPieChart(canvas);\n        }\n        isValid = true;\n      }\n      catch (e) {\n        console.error('drawChart:', error = e);\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n    }\n  }\n\n  getChartOptions(chartType) {\n    let ctrl = this;\n    let { data } = ctrl;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel[chartType];\n    let { colorSource, seriesColors, colorColumnName, colorBy, sortOrder } = panel;\n\n    let countType = panel.countType || 'sum';\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = panel.pieType === 'polar' ? -1 : ctrl.getColIndex('series', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let labelColIndex = ctrl.getColIndex('label', panel, true);\n    let colorColIndex = colorBy === 'column' ? ctrl.getColIndex('color', panel, true) : -1;\n    let stackColIndex = ctrl.getColIndex('stack', panel, true);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let series = _.uniq(rows.map(row => row[seriesColIndex]));\n    if (chartType === 'pie') {\n      categories.reverse();\n      series.reverse();\n    }\n\n    let categoryCount = categories.length;\n    let seriesCount = series.length;\n    let measureCount = categoryCount * seriesCount;\n    let { measures, labels, colors, rowsByMeasure, seriesStacks } = rows.reduce((carry, row, rowIndex) => {\n      let seriesIndex = series.indexOf(row[seriesColIndex]);\n      let index = categories.indexOf(row[categoryColIndex]) + seriesIndex * categoryCount;\n      (carry.measures[index] = carry.measures[index] || []).push(row[measureColIndex]);\n      (carry.rowsByMeasure[index] = carry.rowsByMeasure[index] || []).push(row);\n      carry.labels[index] = carry.labels[index] || row[labelColIndex];\n      carry.colors[index] = carry.colors[index] || row[colorColIndex];\n      carry.seriesStacks[seriesIndex] = carry.seriesStacks[seriesIndex] || row[stackColIndex];\n      return carry;\n    }, { measures: [], labels: [], colors: [], rowsByMeasure: [], seriesStacks: [] });\n\n    let countMeasures = COUNT_TYPE_MAP[countType];\n    if (!countMeasures) {\n      throw new Error(`Unknown count type:\\t${countType}`);\n    }\n    for (let i = measureCount; i--; ) {\n      measures[i] = countMeasures(measures[i] || [0]);\n      rowsByMeasure[i] = rowsByMeasure[i] || [];\n    }\n\n    let baseColors;\n    let seriesColorCount = seriesColors.length;\n\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      baseColors = colors.map(x => Color(x));\n    }\n    else {\n      baseColors = [];\n      if (colorSource === 'custom') {\n        if (!seriesColorCount) {\n          throw new Error('No base colors have been added.');\n        }\n        seriesColors = seriesColors.map(x => Color(x));\n        series.forEach(function(seriesName, seriesIndex) {\n          categories.forEach(function(category, categoryIndex) {\n            let index = categoryIndex + seriesIndex * categoryCount;\n            let colorIndex = colorBy === 'series' ? seriesIndex : colorBy === 'both' ? index : categoryIndex;\n            baseColors[index] = seriesColors[colorIndex % seriesColorCount];\n          });\n        });\n      }\n      else {\n        series.forEach(function(seriesName, seriesIndex) {\n          categories.forEach(function(category, categoryIndex) {\n            let index = categoryIndex + seriesIndex * categoryCount;\n            let colorIndex = colorBy === 'series' ? seriesIndex : colorBy === 'both' ? index : categoryIndex;\n            let colorCount = colorBy === 'series' ? seriesCount : colorBy === 'both' ? measureCount : categoryCount;\n            baseColors[index] = Color.hsl(Math.round(360 * colorIndex / colorCount), 1, 0.5);\n          });\n        });\n      }\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => Color(color).a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => Color(color).l(panel.dataBorderBrightness).a(panel.dataBorderColorAlpha).rgba());\n\n    return {\n      ctrl,\n      data,\n      rows,\n      colIndexesByText,\n      fullPanel,\n      panel,\n      countType,\n      categoryColIndex,\n      seriesColIndex,\n      measureColIndex,\n      labelColIndex,\n      colorColIndex,\n      stackColIndex,\n      seriesStacks,\n      ignoreSeries,\n      categories,\n      series,\n      categoryCount,\n      seriesCount,\n      measures,\n      measureCount,\n      labels,\n      rowsByMeasure,\n      baseColors,\n      bgColors,\n      borderColors,\n      sortOrder,\n      testChartEvent(e, callback) {\n        let elem = this.getElementAtEvent(e)[0];\n        let isOpen;\n        if (elem) {\n          let { _datasetIndex: seriesIndex, _index: categoryIndex } = elem;\n          let category = categories[categoryIndex];\n          let seriesName = series[seriesIndex];\n          isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n            // Check this link to see if it matches...\n            let { url, category: rgxCategory, series: rgxSeries } = drilldownLink;\n            if (url) {\n              if (parseRegExp(rgxCategory).test(category) && (ignoreSeries || parseRegExp(rgxSeries).test(seriesName))) {\n                callback(\n                  drilldownLinkIndex,\n                  rowsByMeasure[categoryIndex + seriesIndex * categoryCount]\n                );\n                return true;\n              }\n            }\n          });\n        }\n\n        if (!isOpen) {\n          callback(-1, []);\n        }\n      }\n    };\n  }\n\n  drawPieChart(canvas) {\n    let {\n      ctrl,\n      panel,\n      labelColIndex,\n      colorColIndex,\n      categories,\n      series,\n      categoryCount,\n      measures,\n      labels,\n      bgColors,\n      borderColors,\n      testChartEvent\n    } = this.getChartOptions('pie');\n\n    let datasets = series.map((seriesName, seriesIndex) => {\n      let fnFilter = (measure, measureIndex) => ~~(measureIndex / categoryCount) === seriesIndex;\n      return {\n        label: categories,\n        data: measures.filter(fnFilter),\n        borderWidth: panel.borderWidth,\n        borderColor: borderColors.filter(fnFilter),\n        backgroundColor: bgColors.filter(fnFilter),\n        datalabels: {\n          anchor: 'center',\n          display: 'auto',\n          backgroundColor: Color(panel.labels.isBlackText ? 'white' : 'black').a(0.75).rgba(),\n          color: Color(panel.labels.isBlackText ? 'black' : 'white').rgb(),\n          borderRadius: 5,\n          formatter(value, { dataIndex, datasetIndex }) {\n            let result = labels[dataIndex + datasetIndex * categoryCount];\n            if (labelColIndex < 0) {\n              let { numberFormat, numberFormatDecimals } = panel;\n              result = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                : value;\n            }\n            return wrapText(`${result}`, panel.labels.wrapAfter);\n          },\n          textAlign: 'center'\n        }\n      };\n    });\n\n    let chartConfig = {\n      responsive: true,\n      data: {\n        datasets,\n        labels: 'string' === typeof datasets[0].label\n          ? datasets[0].data.map((x, i) => `${datasets[0].label} #${i + 1}`)\n          : datasets[0].label\n      },\n      options: {\n        circumference: (panel.isSemiCircle ? 1 : 2) * Math.PI,\n        rotation: -Math.PI / (panel.isSemiCircle ? 1 : 2),\n        elements: { borderWidth: panel.borderWidth },\n        tooltips: {\n          callbacks: {\n            title: function ([tooltipItem], data) {\n              return series[tooltipItem.datasetIndex];\n            },\n            label: function (tooltipItem, data) {\n              let { numberFormat, numberFormatDecimals } = panel;\n              let label = data.datasets[tooltipItem.datasetIndex].label[tooltipItem.index];\n              let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n              value = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                : value;\n              return label + ': ' + value;\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: IS_LIGHT_THEME ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    if (panel.labels.isShowing) {\n      chartConfig.plugins = [ChartDataLabels];\n    }\n\n    let ctx = canvas.getContext('2d');\n    if (panel.pieType === 'polar') {\n      Chart.PolarArea(ctx, chartConfig);\n    }\n    else {\n      chartConfig.type = panel.pieType === 'doughnut' ? 'doughnut' : 'pie';\n      new Chart(ctx, chartConfig);\n    }\n  }\n\n  drawBarChart(canvas) {\n    // TODO: Remove unused variables\n    let {\n      ctrl,\n      data,\n      rows,\n      colIndexesByText,\n      fullPanel,\n      panel,\n      countType,\n      categoryColIndex,\n      seriesColIndex,\n      measureColIndex,\n      labelColIndex,\n      colorColIndex,\n      stackColIndex,\n      seriesStacks,\n      ignoreSeries,\n      categories,\n      series,\n      categoryCount,\n      seriesCount,\n      measures,\n      measureCount,\n      labels,\n      rowsByMeasure,\n      baseColors,\n      bgColors,\n      borderColors,\n      sortOrder,\n      testChartEvent\n    } = this.getChartOptions('bar');\n\n    // If legacy bar chart colors exist convert them to new color setup\n    if (_.has(panel, ['seriesColors', 0, 'text'])) {\n      panel.seriesColors = panel.seriesColors.map(color => color.color);\n      panel.colorSource = 'custom';\n    }\n    \n    let datasets = series.map((seriesName, seriesIndex) => {\n      let fnFilter = (measure, measureIndex) => ~~(measureIndex / categoryCount) === seriesIndex;\n      return {\n        label: seriesName,\n        data: measures.filter(fnFilter),\n        borderWidth: panel.borderWidth,\n        borderColor: borderColors.filter(fnFilter),\n        backgroundColor: bgColors.filter(fnFilter),\n        stack: panel.isStacked ? seriesStacks[seriesIndex] : seriesIndex\n      };\n    });\n    \n    let chartConfig = {\n      type: panel.orientation === 'horizontal' ? 'horizontalBar' : 'bar',\n      data: {\n        datasets,\n        labels: categories\n      },\n      //plugins: [ChartDataLabels],\n      options: {\n        responsive: true,\n        tooltips: {\n          mode: 'point',\n          callbacks: {\n            title: function ([tooltipItem], data) {\n              if (!ignoreSeries) {\n                let { datasets, labels } = data;\n                let { datasetIndex: seriesIndex, index: categoryIndex } = tooltipItem;\n                let category = categories[categoryIndex];\n                let seriesName = series[seriesIndex];\n                let measureIndex = categoryIndex + seriesIndex * categoryCount;\n                let measure = measures[measureIndex];\n                let rows = rowsByMeasure[measureIndex];\n                let { isCustom, titleFormat } = panel.tooltip;\n\n                return (isCustom)\n                  ? titleFormat\n                    ? ctrl.formatTooltipText(titleFormat, rows, seriesName, category, measure)\n                    : null\n                  : seriesName;\n              }\n            },\n            label: function (tooltipItem, data) {\n              let { datasets, labels } = data;\n              let { datasetIndex: seriesIndex, index: categoryIndex } = tooltipItem;\n              let category = categories[categoryIndex];\n              let seriesName = series[seriesIndex];\n              let measureIndex = categoryIndex + seriesIndex * categoryCount;\n              let measure = measures[measureIndex];\n              let rows = rowsByMeasure[measureIndex];\n              let { numberFormat, numberFormatDecimals } = panel;\n              let { isCustom, labelFormat } = panel.tooltip;\n              let strMeasure = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof measure)\n                  ? getValueFormat(numberFormat)(measure, numberFormatDecimals, null)\n                  : measure;\n              \n              return (isCustom && labelFormat)\n                ? ctrl.formatTooltipText(labelFormat, rows, seriesName, category, measure)\n                : (category + ': ' + strMeasure);\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: IS_LIGHT_THEME ? '#333' : '#CCC'\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.xAxes.ticks.autoSkip,\n                minRotation: panel.scales.xAxes.ticks.minRotation,\n                maxRotation: panel.scales.xAxes.ticks.maxRotation,\n                fontColor: IS_LIGHT_THEME ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.xAxes.gridLineOpacity,\n                color: IS_LIGHT_THEME ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.yAxes.ticks.autoSkip,\n                minRotation: panel.scales.yAxes.ticks.minRotation,\n                maxRotation: panel.scales.yAxes.ticks.maxRotation,\n                fontColor: IS_LIGHT_THEME ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.yAxes.gridLineOpacity,\n                color: IS_LIGHT_THEME ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n              }\n            }\n          ]\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  drawFunnelChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.funnel;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let measures = rows.reduce((measures, row, rowIndex) => {\n      let measureIndex = categories.indexOf(row[categoryColIndex]);\n      measures[measureIndex] = (measures[measureIndex] || 0) + row[measureColIndex];\n      return measures;\n    }, []);\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, sortOrder } = panel;\n\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      baseColors = categories.map(category => Color(rows.find(row => row[categoryColIndex] === category)[colIndexesByText[colorColumnName]]));\n    }\n    else if (colorSource === 'custom') {\n      baseColors = categories.map((category, index, categories) => {\n        return Color(seriesColors[index % seriesColors.length]);\n      });\n    }\n    else {\n      baseColors = categories.map((category, index, categories) => {\n        return Color.hsl(~~(360 * index / categories.length), 1, 0.5);\n      });\n    }\n\n    // Sort the measures and then the categories accordingly.\n    let altBaseColors;\n    measures = measures.map((value, index) => ({ index, value }));\n    measures.sort(sortOrder === 'desc' ? (a, b) => b.value - a.value : (a, b) => a.value - b.value);\n    [altBaseColors, categories, measures] = measures.reduce((carry, measure, index) => {\n      let [altBaseColors, newCategories, newMeasures] = carry;\n      altBaseColors.push(baseColors[measure.index]);\n      newCategories.push(categories[measure.index]);\n      newMeasures.push(measure.value);\n      return carry;\n    }, [[], [], []]);\n\n    // If using a column as the source of the colors make sure to order them according to the categories.\n    if (colorSource === 'column') {\n      baseColors = altBaseColors;\n    }\n\n    function testChartEvent(e, callback) {\n      let elem = this.getElementAtEvent(e)[0];\n      let isOpen;\n      if (elem) {\n        let category = categories[elem._index];\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            if (rgxCategory.test(category)) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category)\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.l(panel.dataBorderBrightness).a(panel.dataBorderColorAlpha).rgba());\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      // plugins: [ChartDataLabels],\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        startWidthPercent: panel.startWidthPct,\n        sort: panel.sortOrder,\n        elements: { borderWidth: panel.borderWidth },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              let { numberFormat, numberFormatDecimals } = panel;\n              let label = data.datasets[tooltipItem.datasetIndex].label[tooltipItem.index];\n              let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n              value = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                : value;\n              return label + ': ' + value;\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: IS_LIGHT_THEME ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables }, timeSrv: { time: timeVars } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(RGX_OLD_VAR_WORKAROUND, '$1$2').replace(\n      RGX_CELL_PLACEHOLDER,\n      function (match, isTime, opt_timePart, type, name, isRaw, isParam, paramName) {\n        if (isTime) {\n          return (opt_timePart != 'to' ? 'from=' + encodeURIComponent(timeVars.from) : '')\n            + (opt_timePart ? '' : '&')\n            + (opt_timePart != 'from' ? 'to=' + encodeURIComponent(timeVars.to) : '');\n        }\n\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? type === 'var' ? `var-${name}` : name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  getRange() {\n    return _.range.apply(this, arguments);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => this.drawChart.call(this, e, elem));\n    this.events.on('render', _.debounce(e => this.drawChart.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}