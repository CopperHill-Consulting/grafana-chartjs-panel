{"version":3,"sources":["../src/ctrl.js"],"names":["PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","borderWidth","colorBy","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","numberFormat","numberFormatDecimals","gridLineOpacity","yAxes","BAR_OPTIONS","Object","keys","JS","flattenKeys","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","startWidthPct","FUNNEL_OPTIONS","OPTIONS_BY_TYPE","bar","funnel","ChartJsPanelCtrl","$scope","$injector","$rootScope","UNIT_FORMATS","GRID_LINE_OPACITIES","value","text","CHART_START_WIDTH_PERCENTAGES","CHART_BORDER_WIDTHS","CHART_GAP_SIZES","CHART_COLOR_BY","CHART_COLOR_SOURCES","CHART_TYPES","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","_","range","map","x","TICK_ROTATIONS","data","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","panel","defaultsDeep","forEach","key","has","opt_index","colors","splice","length","renderNow","fromIndex","toIndex","getChartPanel","count","drilldownLink","url","openInBlank","isActiveOption","category","series","push","links","indexOf","path","addEditorTab","dataList","type","columns","rows","columnTexts","col","colIndexesByText","reduceRight","indexes","colText","index","assign","obj","newValue","emit","paths","every","includes","set","name","opt_isOptional","isRequired","undefined","Error","e","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","canvas","prop","width","height","drawBarChart","drawFunnelChart","console","msg","message","elemMsg","dom","style","display","alignItems","textAlign","$","cls","margin","append","fullPanel","categoryColIndex","getColIndex","seriesColIndex","stackColIndex","measureColIndex","ignoreSeries","categories","uniq","row","reduce","carry","seriesName","seriesStacks","color","colorColIndex","baseColors","c","rowSeries","rowCategory","i","colorIndexLimit","a","Color","hsl","isLightTheme","config","theme","measures","chartConfig","labels","datasets","seriesNameIndex","label","backgroundColor","cat","rgba","borderColor","stack","sum","isMatch","options","responsive","fullWidth","reverse","fontColor","userCallback","values","stacked","gridLines","onClick","target","myChart","getElementAtEvent","model","_model","datasetLabel","isOpen","some","rgxCategory","rgxSeries","test","matchingRows","filter","openDrilldownLink","log","Chart","getContext","rowIndex","measureIndex","altBaseColors","sort","b","measure","newCategories","newMeasures","bgColors","borderColors","dataset","startWidthPercent","elements","keep","animation","animateScale","animateRotate","elem","_index","variables","templateSrv","replace","match","isRaw","isParam","paramName","result","variable","varValues","toArray","current","isAll","includeAll","concat","join","v","encodeURIComponent","window","open","apply","arguments","scope","attrs","drawChart","call","debounce","MetricsPanelCtrl","plugins","unregister","ChartDataLabels","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormat, getValueFormats } from '@grafana/ui';\nimport config from 'app/core/config';\nimport _ from 'lodash';\n\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport { Color } from './external/CWest-Color.min';\n\nimport { parseRegExp } from './helper-functions';\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'series',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90,\n        numberFormat: 'none',\n        numberFormatDecimals: 0\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90,\n        numberFormat: 'none',\n        numberFormatDecimals: 0\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\nconst BAR_OPTIONS = Object.keys(JS.flattenKeys(BAR_DEFAULTS, true));\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'asc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  gap: 1,\n  startWidthPct: 0,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\nconst FUNNEL_OPTIONS = Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true));\n\nconst OPTIONS_BY_TYPE = {\n  bar: BAR_OPTIONS,\n  funnel: FUNNEL_OPTIONS\n};\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    \n    this.UNIT_FORMATS = getValueFormats();\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_START_WIDTH_PERCENTAGES = [\n      { value: 0, text: '0% (Point)' },\n      { value: 0.25, text: '25%' },\n      { value: 0.5, text: '50% (Half)' },\n      { value: 0.75, text: '75%' },\n      { value: 1, text: '100% (Full)' }\n    ];\n    this.CHART_BORDER_WIDTHS = [\n      { value: 0, text: '0px (NO BORDER)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' }\n    ];\n    this.CHART_GAP_SIZES = [\n      { value: 0, text: '0px (NO GAP)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' },\n      { value: 4, text: '4px' },\n      { value: 5, text: '5px' }\n    ];\n    this.CHART_COLOR_BY = [\n      { value: 'series', text: 'Series' },\n      { value: 'category', text: 'Category' },\n      { value: 'both', text: 'Series & Category' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' }\n    ];\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n    }\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  moveSeriesColor(fromIndex, toIndex) {\n    let colors = this.getChartPanel().seriesColors;\n    colors.splice(toIndex, 0, colors.splice(fromIndex, 1)[0]);\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    let count = colors.length;\n    if (count) {\n      colors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      let { type, columns, rows } = data;\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      let colIndexesByText = columnTexts.reduceRight(\n        (indexes, colText, index) =>\n          Object.assign(indexes, { [colText]: index }),\n        {}\n      );\n      this.data = { type, columns, rows, columnTexts, colIndexesByText };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...paths) {\n    return paths.every(path => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(path));\n  }\n\n  setActiveOption(path, value) {\n    let panel = this.getChartPanel();\n    if (_.has(panel, path)) {\n      _.set(panel, path, value);\n      this.renderNow();\n    }\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  getColIndex(name, panel, opt_isOptional) {\n    let { colIndexesByText } = this.data;\n    let key = name + 'ColumnName';\n    let isRequired = !opt_isOptional || panel[key] != undefined;\n    if (isRequired && !_.has(colIndexesByText, panel[key])) {\n      throw new Error(`Invalid ${name} column.`);\n    }\n    return isRequired ? colIndexesByText[panel[key]] : -1;\n  }\n\n  drawChart(e, jElem) {\n    let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n\n    if (data && data.rows && data.rows.length) {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if (!data.columnTexts) {\n          throw new Error('No source data has been specified.');\n        }\n\n        if (data.type !== 'table') {\n          throw new Error('Data type must be \"table\".');\n        }\n\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        isValid = true;\n      }\n      catch (e) {\n        console.error('drawChart:', error = e);\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n    }\n  }\n\n  drawBarChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.bar;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = ctrl.getColIndex('series', panel, true);\n    let stackColIndex = ctrl.getColIndex('stack', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let { series, seriesStacks } = rows.reduce(\n      (carry, row) => {\n        let seriesName = row[seriesColIndex];\n        if (!carry.series.includes(seriesName)) {\n          carry.series.push(seriesName);\n          carry.seriesStacks.push(row[stackColIndex]);\n        }\n        return carry;\n      },\n      { series: [], seriesStacks: [] }\n    );\n\n    series = series.map(name => name === undefined ? 'Series' : name);\n    seriesStacks = seriesStacks.map(name => name === undefined ? 'Stack' : name);\n\n    // If legacy bar chart colors exist convert them to new color setup\n    if (_.has(panel, ['seriesColors', 0, 'text'])) {\n      panel.seriesColors = panel.seriesColors.map(color => color.color);\n      panel.colorSource = 'custom';\n    }\n\n    let { colorSource, seriesColors, colorColumnName, colorBy } = panel;\n\n    let colorColIndex;\n    if (colorSource === 'column') {\n       colorColIndex = ctrl.getColIndex('color', panel);\n    }\n\n    let baseColors = rows.reduce((colors, row) => {\n      let color = colors.find(c => seriesColIndex >= 0 ? c.series === row[seriesColIndex] : true && c.category === row[categoryColIndex]);\n      let rowSeries = ignoreSeries ? series[0] : row[seriesColIndex];\n      let rowCategory = row[categoryColIndex];\n      if (!colors.find(c => (ignoreSeries || c.series === rowSeries) && c.category === rowCategory)) {\n        let color = { series: rowSeries, category: rowCategory };\n        if (colorColIndex >= 0) {\n          color.value = Color(row[colorColIndex]);\n        }\n        else {\n          color.index = colorBy === 'both'\n            ? colors.length\n            : colorBy === 'category'\n              ? categories.indexOf(rowCategory)\n              : series.indexOf(rowSeries);\n        }\n        colors.push(color);\n      }\n      return colors;\n    }, []);\n    if (colorSource === 'custom') { // user-defined\n      baseColors.forEach((c, i) => {\n        c.value = Color(seriesColors[c.index % seriesColors.length]);\n      });\n    }\n    else if (colorSource !== 'column') { // rainbow\n      let colorIndexLimit = colorBy === 'both'\n        ? baseColors.length\n        : colorBy === 'category'\n          ? categories.length\n          : series.length;\n      baseColors.forEach((c, i, a) => {\n        c.value = Color.hsl(~~(360 * c.index / colorIndexLimit), 1, 0.5);\n      });\n    }\n    \n    let isLightTheme = config.theme.type === 'light';\n    \n    let measures = {};\n    let chartConfig = {\n      type: panel.orientation === 'horizontal' ? 'horizontalBar' : 'bar',\n      data: {\n        labels: categories,\n        datasets: series.map((seriesName, seriesNameIndex) => ({\n          label: seriesName,\n          backgroundColor: categories.map(cat => Color((baseColors.find(color => color.category === cat && color.series === seriesName) || {}).value).a(panel.dataBgColorAlpha).rgba()),\n          borderColor: categories.map(cat => Color((baseColors.find(color => color.category === cat && color.series === seriesName) || {}).value).a(panel.dataBorderColorAlpha).rgba()),\n          borderWidth: panel.borderWidth,\n          stack: panel.isStacked ? seriesStacks[seriesNameIndex] : seriesNameIndex,\n          data: categories.map(category => {\n            let sum = rows.reduce((sum, row) => {\n              let isMatch = row[categoryColIndex] === category\n                && (seriesColIndex < 0 || row[seriesColIndex] === seriesName);\n              return sum + (isMatch ? +row[measureColIndex] || 0 : 0);\n            }, 0);\n            return (measures[category] = measures[category] || {})[seriesName] = sum;\n          })\n        }))\n      },\n      //plugins: [ChartDataLabels],\n      options: {\n        responsive: true,\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.xAxes.ticks.autoSkip,\n                minRotation: panel.scales.xAxes.ticks.minRotation,\n                maxRotation: panel.scales.xAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { ticks } = panel.scales.xAxes;\n                  return (ticks.numberFormat !== 'none' && 'number' === typeof value)\n                    ? getValueFormat(ticks.numberFormat)(value, ticks.numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.xAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.yAxes.ticks.autoSkip,\n                minRotation: panel.scales.yAxes.ticks.minRotation,\n                maxRotation: panel.scales.yAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { ticks } = panel.scales.yAxes;\n                  return (ticks.numberFormat !== 'none' && 'number' === typeof value)\n                    ? getValueFormat(ticks.numberFormat)(value, ticks.numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.yAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n              }\n            }\n          ]\n        },\n        onClick: function (e) {\n          let target = myChart.getElementAtEvent(e)[0];\n          let model = target && target._model;\n          if (model) {\n            let category = model.label;\n            let seriesName = model.datasetLabel;\n            let isOpen = panel.drilldownLinks.some(drilldownLink => {\n              // Check this link to see if it matches...\n              let { url, category: rgxCategory, series: rgxSeries } = drilldownLink;\n              if (url) {\n                rgxCategory = parseRegExp(rgxCategory);\n                rgxSeries = !ignoreSeries && parseRegExp(rgxSeries);\n                if (rgxCategory.test(category) && (ignoreSeries || rgxSeries.test(seriesName))) {\n                  let matchingRows = rows.filter(row => row[categoryColIndex] === category && (ignoreSeries || row[seriesColIndex] === seriesName));\n                  ctrl.openDrilldownLink(drilldownLink, matchingRows);\n                  return true;\n                }\n              }\n            });\n\n            if (!isOpen) {\n              console.log('No matching drilldown link was found:', { series: seriesName, category, rows });\n            }\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  drawFunnelChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.funnel;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let measures = rows.reduce((measures, row, rowIndex) => {\n      let measureIndex = categories.indexOf(row[categoryColIndex]);\n      measures[measureIndex] = (measures[measureIndex] || 0) + row[measureColIndex];\n      return measures;\n    }, []);\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, sortOrder } = panel;\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      let colorColIndex = colIndexesByText[colorColumnName];\n      baseColors = categories.map(category => Color(rows.find(row => row[categoryColIndex] === category)[colorColIndex]));\n    }\n    else if (colorSource === 'custom') {\n      baseColors = categories.map((category, index, categories) => {\n        return Color(seriesColors[index % seriesColors.length]);\n      });\n    }\n    else {\n      baseColors = categories.map((category, index, categories) => {\n        return Color.hsl(~~(360 * index / categories.length), 1, 0.5);\n      });\n    }\n\n    let isLightTheme = config.theme.type === 'light';\n\n    // Sort the measures and then the categories accordingly.\n    let altBaseColors;\n    measures = measures.map((value, index) => ({ index, value }));\n    measures.sort(sortOrder === 'desc' ? (a, b) => b.value - a.value : (a, b) => a.value - b.value);\n    [altBaseColors, categories, measures] = measures.reduce((carry, measure, index) => {\n      let [altBaseColors, newCategories, newMeasures] = carry;\n      altBaseColors.push(baseColors[measure.index]);\n      newCategories.push(categories[measure.index]);\n      newMeasures.push(measure.value);\n      return carry;\n    }, [[], [], []]);\n\n    // If using a column as the source of the colors make sure to order them according to the categories.\n    if (colorSource === 'column') {\n      baseColors = altBaseColors;\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.a(panel.dataBorderColorAlpha).rgba());\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      // plugins: [ChartDataLabels],\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        startWidthPercent: panel.startWidthPct,\n        sort: panel.sortOrder,\n        elements: { borderWidth: panel.borderWidth },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick (e) {\n          let elem = this.getElementAtEvent(e)[0];\n          if (elem) {\n            let category = categories[elem._index];\n            let isOpen = panel.drilldownLinks.some(drilldownLink => {\n              // Check this link to see if it matches...\n              let { url, category: rgxCategory } = drilldownLink;\n              if (url) {\n                rgxCategory = parseRegExp(rgxCategory);\n                if (rgxCategory.test(category)) {\n                  let matchingRows = rows.filter(row => row[categoryColIndex] === category);\n                  ctrl.openDrilldownLink(drilldownLink, matchingRows);\n                  return true;\n                }\n              }\n            });\n\n            if (!isOpen) {\n              console.log('No matching drilldown link was found for category:', category, rows);\n            }\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(\n      /\\${(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?}/g,\n      function (match, type, name, isRaw, isParam, paramName) {\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  getRange() {\n    return _.range.apply(this, arguments);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => this.drawChart.call(this, e, elem));\n    this.events.on('render', _.debounce(e => this.drawChart.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}