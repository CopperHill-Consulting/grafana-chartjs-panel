{"version":3,"sources":["../src/ctrl.js"],"names":["RGX_CELL_PLACEHOLDER","RGX_OLD_VAR_WORKAROUND","PANEL_DEFAULTS","chartType","BAR_DEFAULTS","orientation","categoryColumnName","seriesColumnName","stackColumnName","measureColumnName","drilldownLinks","borderWidth","colorBy","colorSource","colorColumnName","seriesColors","isStacked","dataBgColorAlpha","dataBorderColorAlpha","numberFormat","numberFormatDecimals","tooltip","isCustom","titleFormat","labelFormat","legend","isShowing","position","isFullWidth","isReverse","scales","xAxes","ticks","autoSkip","minRotation","maxRotation","gridLineOpacity","yAxes","BAR_OPTIONS","Object","keys","JS","flattenKeys","FUNNEL_DEFAULTS","hAlign","sortOrder","gap","startWidthPct","FUNNEL_OPTIONS","OPTIONS_BY_TYPE","bar","funnel","ChartJsPanelCtrl","$scope","$injector","$rootScope","UNIT_FORMATS","GRID_LINE_OPACITIES","value","text","CHART_START_WIDTH_PERCENTAGES","CHART_BORDER_WIDTHS","CHART_GAP_SIZES","CHART_COLOR_BY","CHART_COLOR_SOURCES","CHART_TYPES","CHART_ORIENTATIONS","CHART_H_ALIGNMENTS","SORT_ORDERS","COLOR_ALPHAS","_","range","map","x","TICK_ROTATIONS","data","setPanelDefaults","events","on","onInitEditMode","bind","onDataReceived","onDataError","panel","defaultsDeep","forEach","key","has","strFormat","rowsByColName","series","category","measure","replace","match","isEscapedDollar","isSeries","isCategory","colName","colFnName","row","reduce","a","b","length","Set","size","sort","c","d","Array","from","join","console","log","toFixed","opt_index","colors","splice","renderNow","fromIndex","toIndex","getChartPanel","count","drilldownLink","url","openInBlank","isActiveOption","push","links","indexOf","path","addEditorTab","dataList","type","columns","rows","columnTexts","col","colIndexesByText","reduceRight","indexes","colText","index","assign","cells","rowIndex","carry","cellValue","cellIndex","obj","newValue","emit","paths","every","includes","set","name","opt_isOptional","isRequired","undefined","Error","e","jElem","error","isValid","ctrl","jContent","find","css","html","elemContent","jCanvas","jQuery","appendTo","canvas","prop","width","height","drawBarChart","drawFunnelChart","msg","message","elemMsg","dom","style","display","alignItems","textAlign","$","cls","margin","append","fullPanel","categoryColIndex","getColIndex","seriesColIndex","stackColIndex","measureColIndex","ignoreSeries","categories","uniq","seriesName","seriesStacks","color","colorColIndex","rowCount","colorCount","baseColors","seriesIndex","catName","catIndex","Color","hsl","testChartEvent","callback","target","getElementAtEvent","model","_model","isOpen","label","datasetLabel","some","drilldownLinkIndex","rgxCategory","rgxSeries","test","filter","isLightTheme","config","theme","measures","chartConfig","labels","datasets","seriesNameIndex","backgroundColor","rgba","borderColor","stack","filteredRows","sum","isMatch","options","responsive","tooltips","mode","callbacks","title","tooltipItem","dataset","datasetIndex","formatTooltipText","strValue","fullWidth","reverse","fontColor","userCallback","values","stacked","gridLines","onClick","call","matchingRows","openDrilldownLink","hover","onHover","cursor","myChart","Chart","getContext","measureIndex","altBaseColors","newCategories","newMeasures","elem","_index","bgColors","borderColors","i","startWidthPercent","elements","keep","animation","animateScale","animateRotate","variables","templateSrv","timeVars","timeSrv","time","isTime","opt_timePart","isRaw","isParam","paramName","encodeURIComponent","to","result","variable","varValues","toArray","current","isAll","includeAll","concat","v","window","open","apply","arguments","scope","attrs","drawChart","debounce","MetricsPanelCtrl","plugins","unregister","ChartDataLabels","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { getValueFormat, getValueFormats } from '@grafana/ui';\nimport config from 'app/core/config';\nimport _ from 'lodash';\n\nimport JS from './external/YourJS.min';\nimport * as Chart from './external/Chart.bundle.min';\nimport * as ChartDataLabels from './external/Chart.datalabels.plugin';\nimport './external/Chart.funnel';\nimport { Color } from './external/CWest-Color.min';\n\nimport { parseRegExp } from './helper-functions';\n\nconst RGX_CELL_PLACEHOLDER = /\\$\\{(time)(?:-(to|from))?\\}|\\$\\{(col|var):((?:[^\\}:\\\\]*|\\\\.)+)(?::(?:(raw)|(param)(?::((?:[^\\}:\\\\]*|\\\\.)+))?))?\\}/g;\nconst RGX_OLD_VAR_WORKAROUND = /([\\?&])var-(\\$\\{var:(?:[^\\}:\\\\]*|\\\\.)+:param\\})/g;\n\nconst PANEL_DEFAULTS = {\n  chartType: null\n};\n\nconst BAR_DEFAULTS = {\n  orientation: 'vertical',\n  categoryColumnName: null,\n  seriesColumnName: null,\n  stackColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorBy: 'series',\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  isStacked: false,\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  tooltip: {\n    isCustom: false,\n    titleFormat:  null,\n    labelFormat: null\n  },\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  },\n  scales: {\n    xAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    },\n    yAxes: {\n      ticks: {\n        autoSkip: true,\n        minRotation: 0,\n        maxRotation: 90\n      },\n      gridLineOpacity: 0.15\n    }\n  }\n};\nconst BAR_OPTIONS = Object.keys(JS.flattenKeys(BAR_DEFAULTS, true));\n\nconst FUNNEL_DEFAULTS = {\n  hAlign: 'center',\n  sortOrder: 'desc',\n  categoryColumnName: null,\n  measureColumnName: null,\n  drilldownLinks: [],\n  borderWidth: 1,\n  colorSource: 'auto',\n  colorColumnName: null,\n  seriesColors: [],\n  dataBgColorAlpha: 0.75,\n  dataBorderColorAlpha: 1,\n  numberFormat: 'none',\n  numberFormatDecimals: 0,\n  gap: 1,\n  startWidthPct: 0.5,\n  legend: {\n    isShowing: true,\n    position: 'top',\n    isFullWidth: false,\n    isReverse: false\n  }\n};\nconst FUNNEL_OPTIONS = Object.keys(JS.flattenKeys(FUNNEL_DEFAULTS, true));\n\nconst OPTIONS_BY_TYPE = {\n  bar: BAR_OPTIONS,\n  funnel: FUNNEL_OPTIONS\n};\n\nexport class ChartJsPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    \n    this.UNIT_FORMATS = getValueFormats();\n    this.GRID_LINE_OPACITIES = [\n      { value: false, text: 'None' },\n      { value: 0.15, text: 'Light' },\n      { value: 0.65, text: 'Dark' }\n    ];\n    this.CHART_START_WIDTH_PERCENTAGES = [\n      { value: 0, text: '0% (Point)' },\n      { value: 0.25, text: '25%' },\n      { value: 0.5, text: '50% (Half)' },\n      { value: 0.75, text: '75%' },\n      { value: 1, text: '100% (Full)' }\n    ];\n    this.CHART_BORDER_WIDTHS = [\n      { value: 0, text: '0px (NO BORDER)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' }\n    ];\n    this.CHART_GAP_SIZES = [\n      { value: 0, text: '0px (NO GAP)' },\n      { value: 1, text: '1px' },\n      { value: 2, text: '2px' },\n      { value: 3, text: '3px' },\n      { value: 4, text: '4px' },\n      { value: 5, text: '5px' }\n    ];\n    this.CHART_COLOR_BY = [\n      { value: 'series', text: 'Series' },\n      { value: 'category', text: 'Category' },\n      { value: 'both', text: 'Series & Category' }\n    ];\n    this.CHART_COLOR_SOURCES = [\n      { value: 'column', text: 'Column' },\n      { value: 'auto', text: 'Rainbow' },\n      { value: 'custom', text: 'User-defined' }\n    ];\n    this.CHART_TYPES = [\n      { value: null, 'text': '--- PICK ONE ---' },\n      { value: 'bar', text: 'Bar' },\n      { value: 'funnel', text: 'Funnel' }\n    ];\n    this.CHART_ORIENTATIONS = [\n      { value: 'horizontal', text: 'Horizontal (\\u2194)' },\n      { value: 'vertical', text: 'Vertical (\\u2195)' }\n    ];\n    this.CHART_H_ALIGNMENTS = [\n      { value: 'left', text: 'Left' },\n      { value: 'center', text: 'Center' },\n      { value: 'right', text: 'Right' }\n    ];\n    this.SORT_ORDERS = [\n      { value: 'asc', text: 'Ascending' },\n      { value: 'desc', text: 'Descending' }\n    ];\n    this.COLOR_ALPHAS = _.range(0, 101, 5).map(x => ({\n      value: x / 100, text: `${x}%` + (x ? x === 100 ? ' (Solid)' : '' : ' (Invisible)')\n    }));\n    this.TICK_ROTATIONS = _.range(0, 91, 5).map(x => ({\n      value: x, text: `${x}\\xB0` + (x ? x === 90 ? ' (Vertical)' : '' : ' (Horizontal)')\n    }));\n\n    this.$rootScope = $rootScope;\n    this.data = null;\n\n    this.setPanelDefaults();\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  // Setup the appropriate defaults and make sure that any old bar chart data\n  // is migrated to the new structure.\n  setPanelDefaults() {\n    let panel = this.panel;\n    _.defaultsDeep(panel, PANEL_DEFAULTS);\n    switch (panel.chartType) {\n      case 'horizontalBar':\n        panel.chartType = 'bar';\n        panel.orientation = 'horizontal';\n      case 'bar':\n        if (!panel.bar) {\n          panel.bar = {};\n        }\n        _.defaultsDeep(panel.bar, BAR_DEFAULTS);\n        Object.keys(BAR_DEFAULTS).forEach(key => {\n          if (_.has(panel, key)) {\n            panel.bar[key] = panel[key];\n            delete panel[key];\n          }\n        });\n        break;\n\n      case 'funnel':\n        _.defaultsDeep(panel.funnel = panel.funnel || {}, FUNNEL_DEFAULTS);\n        break;\n    }\n  }\n\n  formatTooltipText(strFormat, rowsByColName, series, category, measure) {\n    return strFormat.replace(\n      /(\\\\\\$)|\\$\\{(?:(series)|(category)|measure|col:((?:[^\\\\\\}:]+|\\\\.)+)(?::([\\-\\w]+))?)\\}/g,\n      function (match, isEscapedDollar, isSeries, isCategory, colName, colFnName) {\n        if (isEscapedDollar) {\n          match = '$';\n        }\n        else if (colName) {\n          colName = colName.replace(/\\\\(.)/g, '$1');\n          if (_.has(rowsByColName[0], colName)) {\n            match = rowsByColName.map(row => row[colName]);\n            match = colFnName === 'sum'\n              ? match.reduce((a, b) => a + b)\n              : colFnName === 'avg'\n                ? match.reduce((a, b) => a + b) / match.length\n                : colFnName === 'max'\n                  ? match.reduce((a, b) => a > b ? a : b)\n                  : colFnName === 'min'\n                    ? match.reduce((a, b) => a < b ? a : b)\n                    : colFnName === 'first'\n                      ? match[0]\n                      : colFnName === 'last'\n                        ? match[match.length - 1]\n                        : colFnName === 'count'\n                          ? match.length\n                          : colFnName === 'unique-count'\n                            ? new Set(match).size\n                            : colFnName === 'list'\n                              ? match.sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                              : colFnName === 'unique-list'\n                                ? Array.from(new Set(match)).sort().reduce((a, b, c, d) => a + (c + 1 === d.length ? ' and ' : ', ') + b)\n                                : match.join(',');\n          }\n        }\n        else {\n          match = isSeries ? series : isCategory ? category : measure;\n        }\n        return 'number' === typeof match\n          ? (console.log(match), +match.toFixed(5))\n          : match;\n      }\n    )\n  }\n\n  addSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    colors.splice(opt_index == null ? colors.length : opt_index, 0, Color('black') + '');\n    this.renderNow();\n  }\n\n  moveSeriesColor(fromIndex, toIndex) {\n    let colors = this.getChartPanel().seriesColors;\n    colors.splice(toIndex, 0, colors.splice(fromIndex, 1)[0]);\n    this.renderNow();\n  }\n\n  removeSeriesColor(opt_index) {\n    let panel = this.panel;\n    let colors = panel[panel.chartType].seriesColors;\n    let count = colors.length;\n    if (count) {\n      colors.splice(opt_index == null ? count - 1 : opt_index, 1);\n      this.renderNow();\n    }\n  }\n\n  addDrilldownLink() {\n    let drilldownLink = {\n      url: '',\n      openInBlank: true\n    };\n\n    if (this.isActiveOption('categoryColumnName')) {\n      drilldownLink.category = '/[^]*/';\n    }\n    if (this.isActiveOption('seriesColumnName')) {\n      drilldownLink.series = '/[^]*/';\n    }\n\n    this.getChartPanel().drilldownLinks.push(drilldownLink);\n  }\n\n  removeDrilldownLink(drilldownLink) {\n    let links = this.getChartPanel().drilldownLinks;\n    links.splice(links.indexOf(drilldownLink), 1);\n  }\n\n  onInitEditMode() {\n    let path = 'public/plugins/westc-chartjs-panel/partials/';\n    this.addEditorTab('Options', `${path}editor.html`, 2);\n    this.addEditorTab('Series Colors', `${path}series-colors.html`, 3);\n    this.addEditorTab('Drill-down Links', `${path}drilldown-links.html`, 4);\n  }\n\n  onDataError() {\n    this.renderNow();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      let data = dataList[0];\n      let { type, columns, rows } = data;\n      let columnTexts = columns.map(col => 'string' === typeof col ? col : col.text);\n      let colIndexesByText = columnTexts.reduceRight(\n        (indexes, colText, index) =>\n          Object.assign(indexes, { [colText]: index }),\n        {}\n      );\n      let rowsByColName = rows.map(\n        (cells, rowIndex) =>\n          cells.reduce(\n            (carry, cellValue, cellIndex) => Object.assign(carry, { [columnTexts[cellIndex]]: cellValue }),\n            {}\n          )\n      );\n      this.data = { type, columns, rows, columnTexts, colIndexesByText, rowsByColName };\n    }\n    else {\n      this.data = {};\n    }\n\n    this.renderNow();\n  }\n\n  onChangeCallback(obj, key) {\n    return newValue => {\n      obj[key] = newValue;\n      this.renderNow();\n    };\n  }\n\n  renderNow() {\n    this.events.emit('renderNow');\n  }\n\n  isActiveOption(...paths) {\n    return paths.every(path => (OPTIONS_BY_TYPE[this.panel.chartType] || []).includes(path));\n  }\n\n  setActiveOption(path, value) {\n    let panel = this.getChartPanel();\n    if (_.has(panel, path)) {\n      _.set(panel, path, value);\n      this.renderNow();\n    }\n  }\n\n  getChartPanel() {\n    return this.panel[this.panel.chartType];\n  }\n\n  getColIndex(name, panel, opt_isOptional) {\n    let { colIndexesByText } = this.data;\n    let key = name + 'ColumnName';\n    let isRequired = !opt_isOptional || panel[key] != undefined;\n    if (isRequired && !_.has(colIndexesByText, panel[key])) {\n      throw new Error(`Invalid ${name} column.`);\n    }\n    return isRequired ? colIndexesByText[panel[key]] : -1;\n  }\n\n  drawChart(e, jElem) {\n    let error,\n      isValid = false,\n      ctrl = this,\n      chartType = ctrl.panel.chartType,\n      data = ctrl.data,\n      jContent = jElem.find('.panel-content').css('position', 'relative').html(''),\n      elemContent = jContent[0],\n      jCanvas = jQuery('<canvas>').appendTo(jContent),\n      canvas = jCanvas[0];\n\n    if (data && data.rows && data.rows.length) {\n      jCanvas.prop({ width: jContent.width(), height: jContent.height() });\n      try {\n        if (!data.columnTexts) {\n          throw new Error('No source data has been specified.');\n        }\n\n        if (data.type !== 'table') {\n          throw new Error('Data type must be \"table\".');\n        }\n\n        if ('bar' === chartType) {\n          ctrl.drawBarChart(canvas);\n        }\n        else if ('funnel' === chartType) {\n          ctrl.drawFunnelChart(canvas);\n        }\n        isValid = true;\n      }\n      catch (e) {\n        console.error('drawChart:', error = e);\n      }\n    }\n    if (!isValid) {\n      let msg = 'No data' + (error ? ':  \\r\\n' + error.message : '.');\n      let elemMsg = JS.dom({\n        _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n          { _: 'div', cls: 'alert alert-error', style: { margin: '0px auto' }, text: msg }\n        ]\n      });\n      jContent.html('').append(elemMsg);\n    }\n  }\n\n  drawBarChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, rowsByColName, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.bar;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let seriesColIndex = ctrl.getColIndex('series', panel, true);\n    let stackColIndex = ctrl.getColIndex('stack', panel, true);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n    let ignoreSeries = seriesColIndex < 0;\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let { series, seriesStacks } = rows.reduce(\n      (carry, row) => {\n        let seriesName = row[seriesColIndex];\n        if (!carry.series.includes(seriesName)) {\n          carry.series.push(seriesName);\n          carry.seriesStacks.push(row[stackColIndex]);\n        }\n        return carry;\n      },\n      { series: [], seriesStacks: [] }\n    );\n\n    series = series.map(name => name === undefined ? 'Series' : name);\n    seriesStacks = seriesStacks.map(name => name === undefined ? 'Stack' : name);\n\n    // If legacy bar chart colors exist convert them to new color setup\n    if (_.has(panel, ['seriesColors', 0, 'text'])) {\n      panel.seriesColors = panel.seriesColors.map(color => color.color);\n      panel.colorSource = 'custom';\n    }\n\n    let { colorSource, seriesColors, colorColumnName, colorBy } = panel;\n\n    let colorColIndex;\n    if (colorSource === 'column') {\n       colorColIndex = ctrl.getColIndex('color', panel);\n    }\n\n    let rowCount = rows.length;\n    \n    let colorCount = colorBy === 'category'\n      ? categories.length\n      : colorBy === 'both'\n        ? categories.length * series.length\n        : series.length;\n    let baseColors = series.map((seriesName, seriesIndex) => {\n      return categories.map((catName, catIndex) => {\n        if (colorSource === 'column' && colorColIndex >= 0) { // column\n          for (var row, rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n            row = rows[rowIndex];\n            if ((seriesColIndex < 0 || row[seriesColIndex] === seriesName) && row[categoryColIndex] === catName) {\n              return Color(row[colorColIndex]);\n            }\n          }\n        }\n        else {\n          let index = colorBy === 'category'\n            ? catIndex\n            : colorBy === 'both'\n              ? catIndex + categories.length * seriesIndex\n              : seriesIndex;\n          if (colorSource === 'custom') { // user-defined\n            return Color(seriesColors[index % seriesColors.length]);\n          }\n          else { // rainbow (default)\n            return Color.hsl(~~(360 * index / colorCount), 1, 0.5);\n          }\n        }\n      });\n    });\n\n    function testChartEvent(e, callback) {\n      let target = this.getElementAtEvent(e)[0];\n      let model = target && target._model;\n      let isOpen;\n      if (model) {\n        let category = model.label;\n        let seriesName = model.datasetLabel;\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory, series: rgxSeries } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            rgxSeries = !ignoreSeries && parseRegExp(rgxSeries);\n            if (rgxCategory.test(category) && (ignoreSeries || rgxSeries.test(seriesName))) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category && (ignoreSeries || row[seriesColIndex] === seriesName))\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n    \n    let isLightTheme = config.theme.type === 'light';\n    \n    let measures = {};\n    let chartConfig = {\n      type: panel.orientation === 'horizontal' ? 'horizontalBar' : 'bar',\n      data: {\n        labels: categories,\n        datasets: series.map((seriesName, seriesNameIndex) => ({\n          label: seriesName,\n          backgroundColor: baseColors[seriesNameIndex].map(color => color.a(panel.dataBgColorAlpha).rgba()),\n          borderColor: baseColors[seriesNameIndex].map(color => color.a(panel.dataBorderColorAlpha).rgba()),\n          borderWidth: panel.borderWidth,\n          stack: panel.isStacked ? seriesStacks[seriesNameIndex] : seriesNameIndex,\n          filteredRows: categories.map(category => {\n            return rows.reduce(\n              (carry, row, rowIndex) => {\n                if (row[categoryColIndex] === category && (seriesColIndex < 0 || row[seriesColIndex] === seriesName)) {\n                  carry.push(rowsByColName[rowIndex]);\n                }\n                return carry;\n              },\n              []\n            );\n          }),\n          data: categories.map(category => {\n            let sum = rows.reduce((sum, row) => {\n              let isMatch = row[categoryColIndex] === category\n                && (seriesColIndex < 0 || row[seriesColIndex] === seriesName);\n              return sum + (isMatch ? +row[measureColIndex] || 0 : 0);\n            }, 0);\n            return (measures[category] = measures[category] || {})[seriesName] = sum;\n          })\n        }))\n      },\n      //plugins: [ChartDataLabels],\n      options: {\n        responsive: true,\n        tooltips: {\n          mode: 'point',\n          callbacks: {\n            title: function ([tooltipItem], data) {\n              if (!ignoreSeries) {\n                let { datasets, labels } = data;\n                let dataset = datasets[tooltipItem.datasetIndex];\n                let catName = labels[tooltipItem.index];\n                let seriesName = dataset.label;\n                let value = tooltipItem[panel.orientation === 'horizontal' ? 'xLabel' : 'yLabel'];\n                let filteredRows = dataset.filteredRows[tooltipItem.index];\n                let { isCustom, titleFormat } = panel.tooltip;\n\n                return (isCustom)\n                  ? titleFormat\n                    ? ctrl.formatTooltipText(titleFormat, filteredRows, seriesName, catName, value)\n                    : null\n                  : tooltipItem[panel.orientation === 'horizontal' ? 'yLabel' : 'xLabel'];\n              }\n            },\n            label: function (tooltipItem, data) {\n              let { datasets, labels } = data;\n              let dataset = datasets[tooltipItem.datasetIndex];\n              let catName = labels[tooltipItem.index];\n              let seriesName = dataset.label;\n              let { numberFormat, numberFormatDecimals } = panel;\n              let { isCustom, labelFormat } = panel.tooltip;\n              let label = ignoreSeries\n                ? tooltipItem[panel.orientation === 'horizontal' ? 'yLabel' : 'xLabel']\n                : seriesName;\n              let value = tooltipItem[panel.orientation === 'horizontal' ? 'xLabel' : 'yLabel'];\n              let strValue = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                  ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                  : value;\n              let filteredRows = dataset.filteredRows[tooltipItem.index];\n              \n              return (isCustom && labelFormat)\n                ? ctrl.formatTooltipText(labelFormat, filteredRows, seriesName, catName, value)\n                : (label + ': ' + strValue);\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.xAxes.ticks.autoSkip,\n                minRotation: panel.scales.xAxes.ticks.minRotation,\n                maxRotation: panel.scales.xAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.xAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.xAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.xAxes.gridLineOpacity})`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                autoSkip: panel.scales.yAxes.ticks.autoSkip,\n                minRotation: panel.scales.yAxes.ticks.minRotation,\n                maxRotation: panel.scales.yAxes.ticks.maxRotation,\n                fontColor: isLightTheme ? '#333' : '#CCC',\n                userCallback: function (value, index, values) {\n                  let { numberFormat, numberFormatDecimals } = panel;\n                  return (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                    ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                    : value;\n                }\n              },\n              stacked: true,\n              gridLines: {\n                display: !!panel.scales.yAxes.gridLineOpacity,\n                color: isLightTheme ? `rgba(0,0,0,${+panel.scales.yAxes.gridLineOpacity})` : `rgba(255,255,255,${+panel.scales.yAxes.gridLineOpacity})`\n              }\n            }\n          ]\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  drawFunnelChart(canvas) {\n    let ctrl = this;\n    let data = ctrl.data;\n    let { rows, colIndexesByText } = data;\n    let fullPanel = ctrl.panel;\n    let panel = fullPanel.funnel;\n\n    let categoryColIndex = ctrl.getColIndex('category', panel);\n    let measureColIndex = ctrl.getColIndex('measure', panel);\n\n    let categories = _.uniq(rows.map(row => row[categoryColIndex]));\n    let measures = rows.reduce((measures, row, rowIndex) => {\n      let measureIndex = categories.indexOf(row[categoryColIndex]);\n      measures[measureIndex] = (measures[measureIndex] || 0) + row[measureColIndex];\n      return measures;\n    }, []);\n\n    let baseColors;\n    let { colorSource, seriesColors, colorColumnName, sortOrder } = panel;\n    if (colorSource === 'column') {\n      if (!_.has(colIndexesByText, colorColumnName)) {\n        throw new Error('Invalid color column.');\n      }\n      let colorColIndex = colIndexesByText[colorColumnName];\n      baseColors = categories.map(category => Color(rows.find(row => row[categoryColIndex] === category)[colorColIndex]));\n    }\n    else if (colorSource === 'custom') {\n      baseColors = categories.map((category, index, categories) => {\n        return Color(seriesColors[index % seriesColors.length]);\n      });\n    }\n    else {\n      baseColors = categories.map((category, index, categories) => {\n        return Color.hsl(~~(360 * index / categories.length), 1, 0.5);\n      });\n    }\n\n    let isLightTheme = config.theme.type === 'light';\n\n    // Sort the measures and then the categories accordingly.\n    let altBaseColors;\n    measures = measures.map((value, index) => ({ index, value }));\n    measures.sort(sortOrder === 'desc' ? (a, b) => b.value - a.value : (a, b) => a.value - b.value);\n    [altBaseColors, categories, measures] = measures.reduce((carry, measure, index) => {\n      let [altBaseColors, newCategories, newMeasures] = carry;\n      altBaseColors.push(baseColors[measure.index]);\n      newCategories.push(categories[measure.index]);\n      newMeasures.push(measure.value);\n      return carry;\n    }, [[], [], []]);\n\n    // If using a column as the source of the colors make sure to order them according to the categories.\n    if (colorSource === 'column') {\n      baseColors = altBaseColors;\n    }\n\n    function testChartEvent(e, callback) {\n      let elem = this.getElementAtEvent(e)[0];\n      let isOpen;\n      if (elem) {\n        let category = categories[elem._index];\n        isOpen = panel.drilldownLinks.some((drilldownLink, drilldownLinkIndex) => {\n          // Check this link to see if it matches...\n          let { url, category: rgxCategory } = drilldownLink;\n          if (url) {\n            rgxCategory = parseRegExp(rgxCategory);\n            if (rgxCategory.test(category)) {\n              callback(\n                drilldownLinkIndex,\n                rows.filter(row => row[categoryColIndex] === category)\n              );\n              return true;\n            }\n          }\n        });\n      }\n\n      if (!isOpen) {\n        callback(-1, []);\n      }\n    }\n\n    // Derive the background and border colors from the base colors.\n    let bgColors = baseColors.map(color => color.a(panel.dataBgColorAlpha).rgba());\n    let borderColors = baseColors.map(color => color.a(panel.dataBorderColorAlpha).rgba());\n\n    let dataset = {\n      label: categories,\n      data: measures,\n      borderWidth: 1,\n      borderColor: borderColors,\n      backgroundColor: bgColors\n    };\n\n    let chartConfig = {\n      type: 'funnel',\n      // plugins: [ChartDataLabels],\n      responsive: true,\n      data: {\n        datasets: [ dataset ],\n        labels: 'string' === typeof dataset.label\n          ? dataset.data.map((x, i) => `${dataset.label} #${i + 1}`)\n          : dataset.label\n      },\n      options: {\n        startWidthPercent: panel.startWidthPct,\n        sort: panel.sortOrder,\n        elements: { borderWidth: panel.borderWidth },\n        gap: panel.gap,\n        keep: /^(left|right)$/.test(panel.hAlign || '') ? panel.hAlign : 'auto',\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              let { numberFormat, numberFormatDecimals } = panel;\n              let label = data.datasets[tooltipItem.datasetIndex].label[tooltipItem.index];\n              let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n              value = (!['none', null, void 0].includes(numberFormat) && 'number' === typeof value)\n                ? getValueFormat(numberFormat)(value, numberFormatDecimals, null)\n                : value;\n              return label + ': ' + value;\n            }\n          }\n        },\n        legend: {\n          display: panel.legend.isShowing,\n          position: panel.legend.position,\n          fullWidth: panel.legend.isFullWidth,\n          reverse: panel.legend.isReverse,\n          labels: {\n            fontColor: isLightTheme ? '#333' : '#CCC'\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        onClick: function (e) {\n          testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n            if (drilldownLinkIndex >= 0) {\n              ctrl.openDrilldownLink(panel.drilldownLinks[drilldownLinkIndex], matchingRows);\n            }\n          });\n        },\n        hover: {\n          onHover: function (e) {\n            testChartEvent.call(this, e, (drilldownLinkIndex, matchingRows) => {\n              e.target.style.cursor = drilldownLinkIndex >= 0 ? 'pointer' : 'default';\n            });\n          }\n        }\n      }\n    };\n\n    let myChart = new Chart(canvas.getContext('2d'), chartConfig);\n  }\n\n  openDrilldownLink(drilldownLink, matchingRows) {\n    let { data: { colIndexesByText }, templateSrv: { variables }, timeSrv: { time: timeVars } } = this;\n    let { url, openInBlank } = drilldownLink;\n    url = url.replace(RGX_OLD_VAR_WORKAROUND, '$1$2').replace(\n      RGX_CELL_PLACEHOLDER,\n      function (match, isTime, opt_timePart, type, name, isRaw, isParam, paramName) {\n        if (isTime) {\n          return (opt_timePart != 'to' ? 'from=' + encodeURIComponent(timeVars.from) : '')\n            + (opt_timePart ? '' : '&')\n            + (opt_timePart != 'from' ? 'to=' + encodeURIComponent(timeVars.to) : '');\n        }\n\n        name = name && name.replace(/\\\\(.)/g, '$1');\n        paramName = paramName && paramName.replace(/\\\\(.)/g, '$1');\n        let result = _.uniq(\n          type == 'col'\n            ? matchingRows.map(row => row[colIndexesByText[name]])\n            : variables.reduce(\n              (values, variable) => {\n                // At times current.value is a string and at times it is an array.\n                let varValues = JS.toArray(variable.current.value);\n                let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n                return variable.name === name\n                  ? values.concat(isAll ? [variable.current.text] : varValues)\n                  : values;\n              },\n              []\n            )\n        );\n        return result.length < 1\n          ? match\n          : isRaw\n            ? result.join(',')\n            : isParam\n              ? result.map(v => encodeURIComponent(paramName == undefined ? type === 'var' ? `var-${name}` : name : paramName) + '=' + encodeURIComponent(v)).join('&')\n              : encodeURIComponent(result.join(','));\n      }\n    );\n    window.open(url, drilldownLink.openInBlank ? '_blank' : '_self');    \n  }\n\n  getRange() {\n    return _.range.apply(this, arguments);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('renderNow', e => this.drawChart.call(this, e, elem));\n    this.events.on('render', _.debounce(e => this.drawChart.call(this, e, elem), 250));\n  }\n}\n\n// Dont add ChartDataLabels unless user requests this.\nChart.plugins.unregister(ChartDataLabels);\n\nChartJsPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}